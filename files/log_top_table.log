trying
 inicjacja duplicates
duplicate info
[False]
Bitcoin_BTC
[{'Date': datetime.date(2024, 12, 2), 'Price': 95994.68}]
success ya
UWAGA
db_BTCUSD
COINDBBB
           Date         Close  ...  Middle_Trend_Up         EMA56
0    2023-01-01  16625.080078  ...                0           NaN
1    2023-01-02  16688.470703  ...                0           NaN
2    2023-01-03  16679.857422  ...                0           NaN
3    2023-01-04  16863.238281  ...                0           NaN
4    2023-01-05  16836.736328  ...                0           NaN
..          ...           ...  ...              ...           ...
557  2024-11-27  96602.130000  ...                1  74730.957775
558  2024-11-28  95105.290000  ...                1  75445.846625
559  2024-11-29  97442.400000  ...                1  76217.655515
560  2024-11-30  97064.460000  ...                1  76949.122339
561  2024-12-01  97100.500000  ...                1  77656.188222

[562 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 95994.68}, {'Date': datetime.date(2024, 12, 2), 'Price': 95994.68}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date         Close  ...  Middle_Trend_Up         EMA56
0    2023-01-01  16625.080078  ...              0.0           NaN
1    2023-01-02  16688.470703  ...              0.0           NaN
2    2023-01-03  16679.857422  ...              0.0           NaN
3    2023-01-04  16863.238281  ...              0.0           NaN
4    2023-01-05  16836.736328  ...              0.0           NaN
..          ...           ...  ...              ...           ...
558  2024-11-28  95105.290000  ...              1.0  75445.846625
559  2024-11-29  97442.400000  ...              1.0  76217.655515
560  2024-11-30  97064.460000  ...              1.0  76949.122339
561  2024-12-01  97100.500000  ...              1.0  77656.188222
562  2024-12-02  95994.680000  ...              NaN           NaN

[563 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Bitcoin_BTC
NECESSARRRY AAAA START
1
1
2024-11-17
2023-10-16
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name     Price  ...  middle_flip_date  long_flip_date
0  Bitcoin BTC  95994.68  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ethereum_ETH
[{'Date': datetime.date(2024, 12, 2), 'Price': 3615.91}]
success ya
UWAGA
db_ETHUSD
COINDBBB
             Date        Close  ...  Middle_Trend_Up        EMA56
0      2023-01-01  1200.964844  ...                0          NaN
1      2023-01-02  1214.656616  ...                0          NaN
2      2023-01-03  1214.778809  ...                0          NaN
3      2023-01-04  1256.526611  ...                0          NaN
4      2023-01-05  1250.438599  ...                0          NaN
...           ...          ...  ...              ...          ...
28630  2024-11-27  3653.550000  ...                1  2918.218484
28631  2024-11-28  3579.050000  ...                1  2941.405555
28632  2024-11-29  3592.390000  ...                1  2964.247114
28633  2024-11-30  3703.260000  ...                1  2990.177391
28634  2024-12-01  3708.440000  ...                1  3015.379588

[28635 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3615.91}, {'Date': datetime.date(2024, 12, 2), 'Price': 3615.91}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date        Close  ...  Middle_Trend_Up        EMA56
0      2023-01-01  1200.964844  ...              0.0          NaN
1      2023-01-02  1214.656616  ...              0.0          NaN
2      2023-01-03  1214.778809  ...              0.0          NaN
3      2023-01-04  1256.526611  ...              0.0          NaN
4      2023-01-05  1250.438599  ...              0.0          NaN
...           ...          ...  ...              ...          ...
28631  2024-11-28  3579.050000  ...              1.0  2941.405555
28632  2024-11-29  3592.390000  ...              1.0  2964.247114
28633  2024-11-30  3703.260000  ...              1.0  2990.177391
28634  2024-12-01  3708.440000  ...              1.0  3015.379588
28635  2024-12-02  3615.910000  ...              NaN          NaN

[28636 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Ethereum_ETH
NECESSARRRY AAAA START
1
1
2024-11-08
2024-11-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
1  Ethereum ETH  3615.91  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
XRP_XRP
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.76263}]
success ya
UWAGA
db_XRPUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.338763       NaN  ...              0                0       NaN
1    2023-01-02  0.348556       NaN  ...              0                0       NaN
2    2023-01-03  0.343824       NaN  ...              0                0       NaN
3    2023-01-04  0.347794       NaN  ...              0                0       NaN
4    2023-01-05  0.338039       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-27  1.483660  1.003423  ...              1                1  0.763169
558  2024-11-28  1.475570  1.042768  ...              1                1  0.788165
559  2024-11-29  1.727390  1.099820  ...              1                1  0.821120
560  2024-11-30  1.897160  1.166265  ...              1                1  0.858876
561  2024-12-01  2.167910  1.249736  ...              1                1  0.904807

[562 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.76263}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.76263}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.338763       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.348556       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.343824       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.347794       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.338039       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
558  2024-11-28  1.475570  1.042768  ...            1.0              1.0  0.788165
559  2024-11-29  1.727390  1.099820  ...            1.0              1.0  0.821120
560  2024-11-30  1.897160  1.166265  ...            1.0              1.0  0.858876
561  2024-12-01  2.167910  1.249736  ...            1.0              1.0  0.904807
562  2024-12-02  2.762630       NaN  ...            NaN              NaN       NaN

[563 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted XRP_XRP
NECESSARRRY AAAA START
1
1
2024-11-17
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
      Name    Price  ...  middle_flip_date  long_flip_date
2  XRP XRP  2.76263  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Solana_SOL
[{'Date': datetime.date(2024, 12, 2), 'Price': 224.242}]
success ya
UWAGA
db_SOLUSD
COINDBBB
             Date       Close  ...  Middle_Trend_Up       EMA56
0      2023-01-01    9.982173  ...                0         NaN
1      2023-01-02   11.272967  ...                0         NaN
2      2023-01-03   13.344046  ...                0         NaN
3      2023-01-04   13.435113  ...                0         NaN
4      2023-01-05   13.419330  ...                0         NaN
...           ...         ...  ...              ...         ...
28630  2024-11-27  241.983000  ...                1  196.382279
28631  2024-11-28  237.604000  ...                1  197.828655
28632  2024-11-29  243.302000  ...                1  199.424211
28633  2024-11-30  237.546000  ...                1  200.761818
28634  2024-12-01  236.783000  ...                1  202.025719

[28635 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 224.242}, {'Date': datetime.date(2024, 12, 2), 'Price': 224.242}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date       Close  ...  Middle_Trend_Up       EMA56
0      2023-01-01    9.982173  ...              0.0         NaN
1      2023-01-02   11.272967  ...              0.0         NaN
2      2023-01-03   13.344046  ...              0.0         NaN
3      2023-01-04   13.435113  ...              0.0         NaN
4      2023-01-05   13.419330  ...              0.0         NaN
...           ...         ...  ...              ...         ...
28631  2024-11-28  237.604000  ...              1.0  197.828655
28632  2024-11-29  243.302000  ...              1.0  199.424211
28633  2024-11-30  237.546000  ...              1.0  200.761818
28634  2024-12-01  236.783000  ...              1.0  202.025719
28635  2024-12-02  224.242000  ...              NaN         NaN

[28636 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Solana_SOL
NECESSARRRY AAAA START
1
1
2024-10-14
2024-10-18
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
4  Solana SOL  224.242  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
BNB_BNB
[{'Date': datetime.date(2024, 12, 2), 'Price': 639.403}]
success ya
UWAGA
db_BNBUSD
COINDBBB
             Date       Close  ...  Middle_Trend_Up       EMA56
0      2023-01-01  244.136978  ...                0         NaN
1      2023-01-02  245.535904  ...                0         NaN
2      2023-01-03  246.133362  ...                0         NaN
3      2023-01-04  259.119690  ...                0         NaN
4      2023-01-05  256.422852  ...                0         NaN
...           ...         ...  ...              ...         ...
29032  2024-11-27  644.096000  ...                1  602.065163
29033  2024-11-28  653.819000  ...                1  603.881087
29034  2024-11-29  654.628000  ...                1  605.661680
29035  2024-11-30  653.621000  ...                1  607.344463
29036  2024-12-01  655.885000  ...                1  609.047640

[29037 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 639.403}, {'Date': datetime.date(2024, 12, 2), 'Price': 639.403}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date       Close  ...  Middle_Trend_Up       EMA56
0      2023-01-01  244.136978  ...              0.0         NaN
1      2023-01-02  245.535904  ...              0.0         NaN
2      2023-01-03  246.133362  ...              0.0         NaN
3      2023-01-04  259.119690  ...              0.0         NaN
4      2023-01-05  256.422852  ...              0.0         NaN
...           ...         ...  ...              ...         ...
29033  2024-11-28  653.819000  ...              1.0  603.881087
29034  2024-11-29  654.628000  ...              1.0  605.661680
29035  2024-11-30  653.621000  ...              1.0  607.344463
29036  2024-12-01  655.885000  ...              1.0  609.047640
29037  2024-12-02  639.403000  ...              NaN         NaN

[29038 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted BNB_BNB
NECESSARRRY AAAA START
1
1
2024-09-21
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
      Name    Price  ...  middle_flip_date  long_flip_date
5  BNB BNB  639.403  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Dogecoin_DOGE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.42464}]
success ya
UWAGA
db_DOGEUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.070225       NaN  ...              0                0       NaN
1    2023-01-02  0.071454       NaN  ...              0                0       NaN
2    2023-01-03  0.070468       NaN  ...              0                0       NaN
3    2023-01-04  0.073237       NaN  ...              0                0       NaN
4    2023-01-05  0.071550       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.404220  0.294357  ...              1                1  0.223306
557  2024-11-28  0.398640  0.303048  ...              1                1  0.229458
558  2024-11-29  0.431820  0.313779  ...              1                1  0.236559
559  2024-11-30  0.425690  0.323105  ...              1                1  0.243195
560  2024-12-01  0.430610  0.332063  ...              1                1  0.249771

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.42464}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.42464}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.070225       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.071454       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.070468       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.073237       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.071550       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.398640  0.303048  ...            1.0              1.0  0.229458
558  2024-11-29  0.431820  0.313779  ...            1.0              1.0  0.236559
559  2024-11-30  0.425690  0.323105  ...            1.0              1.0  0.243195
560  2024-12-01  0.430610  0.332063  ...            1.0              1.0  0.249771
561  2024-12-02  0.424640       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Dogecoin_DOGE
NECESSARRRY AAAA START
1
1
2024-11-17
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
6  Dogecoin DOGE  0.42464  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Cardano_ADA
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.22707}]
success ya
UWAGA
db_ADAUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.249771       NaN  ...              0                0       NaN
1    2023-01-02  0.253828       NaN  ...              0                0       NaN
2    2023-01-03  0.252796       NaN  ...              0                0       NaN
3    2023-01-04  0.267677       NaN  ...              0                0       NaN
4    2023-01-05  0.269102       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  1.020430  0.720375  ...              1                1  0.586469
557  2024-11-28  1.001660  0.743815  ...              1                1  0.601037
558  2024-11-29  1.050210  0.769348  ...              1                1  0.616797
559  2024-11-30  1.086810  0.795803  ...              1                1  0.633289
560  2024-12-01  1.100440  0.821190  ...              1                1  0.649680

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.22707}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.22707}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.249771       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.253828       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.252796       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.267677       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.269102       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  1.001660  0.743815  ...            1.0              1.0  0.601037
558  2024-11-29  1.050210  0.769348  ...            1.0              1.0  0.616797
559  2024-11-30  1.086810  0.795803  ...            1.0              1.0  0.633289
560  2024-12-01  1.100440  0.821190  ...            1.0              1.0  0.649680
561  2024-12-02  1.227070       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Cardano_ADA
NECESSARRRY AAAA START
1
1
2024-11-19
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
7  Cardano ADA  1.22707  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Avalanche_AVAX
[{'Date': datetime.date(2024, 12, 2), 'Price': 48.5556}]
success ya
UWAGA
db_AVAXUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  10.865915  ...                0        NaN
1      2023-01-02  11.153615  ...                0        NaN
2      2023-01-03  11.384450  ...                0        NaN
3      2023-01-04  12.077613  ...                0        NaN
4      2023-01-05  11.740196  ...                0        NaN
...           ...        ...  ...              ...        ...
28626  2024-11-27  43.785000  ...                1  31.604174
28627  2024-11-28  42.772000  ...                1  31.996027
28628  2024-11-29  44.852000  ...                1  32.447114
28629  2024-11-30  44.806000  ...                1  32.880759
28630  2024-12-01  45.126000  ...                1  33.310417

[28631 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 48.5556}, {'Date': datetime.date(2024, 12, 2), 'Price': 48.5556}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  10.865915  ...              0.0        NaN
1      2023-01-02  11.153615  ...              0.0        NaN
2      2023-01-03  11.384450  ...              0.0        NaN
3      2023-01-04  12.077613  ...              0.0        NaN
4      2023-01-05  11.740196  ...              0.0        NaN
...           ...        ...  ...              ...        ...
28627  2024-11-28  42.772000  ...              1.0  31.996027
28628  2024-11-29  44.852000  ...              1.0  32.447114
28629  2024-11-30  44.806000  ...              1.0  32.880759
28630  2024-12-01  45.126000  ...              1.0  33.310417
28631  2024-12-02  48.555600  ...              NaN        NaN

[28632 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Avalanche_AVAX
NECESSARRRY AAAA START
1
1
2024-11-09
2024-11-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
9  Avalanche AVAX  48.5556  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
TRON_TRX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21426}]
success ya
UWAGA
db_TRXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.054820       NaN  ...              0                0       NaN
1    2023-01-02  0.055157       NaN  ...              0                0       NaN
2    2023-01-03  0.054833       NaN  ...              0                0       NaN
3    2023-01-04  0.054732       NaN  ...              0                0       NaN
4    2023-01-05  0.053661       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.200920  0.169749  ...              1                1  0.145576
557  2024-11-28  0.202680  0.172493  ...              1                1  0.147580
558  2024-11-29  0.204290  0.175143  ...              1                1  0.149570
559  2024-11-30  0.206360  0.177744  ...              1                1  0.151562
560  2024-12-01  0.207190  0.180198  ...              1                1  0.153514

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21426}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.21426}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.054820       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.055157       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.054833       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.054732       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.053661       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.202680  0.172493  ...            1.0              1.0  0.147580
558  2024-11-29  0.204290  0.175143  ...            1.0              1.0  0.149570
559  2024-11-30  0.206360  0.177744  ...            1.0              1.0  0.151562
560  2024-12-01  0.207190  0.180198  ...            1.0              1.0  0.153514
561  2024-12-02  0.214260       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted TRON_TRX
NECESSARRRY AAAA START
1
1
2024-06-27
2024-06-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
10  TRON TRX  0.21426  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
SHIBA_INU_SHIB
[{'Date': datetime.date(2024, 12, 2), 'Price': 3e-05}]
success ya
UWAGA
db_SHIBUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000008       NaN  ...              0                0       NaN
1      2023-01-02  0.000008       NaN  ...              0                0       NaN
2      2023-01-03  0.000008       NaN  ...              0                0       NaN
3      2023-01-04  0.000008       NaN  ...              0                0       NaN
4      2023-01-05  0.000008       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28627  2024-11-27  0.000026  0.000024  ...              1                1  0.000021
28628  2024-11-28  0.000025  0.000024  ...              1                1  0.000021
28629  2024-11-29  0.000026  0.000024  ...              1                1  0.000021
28630  2024-11-30  0.000027  0.000024  ...              1                1  0.000022
28631  2024-12-01  0.000031  0.000025  ...              1                1  0.000022

[28632 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3e-05}, {'Date': datetime.date(2024, 12, 2), 'Price': 3e-05}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000008       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.000008       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.000008       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.000008       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.000008       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28628  2024-11-28  0.000025  0.000024  ...            1.0              1.0  0.000021
28629  2024-11-29  0.000026  0.000024  ...            1.0              1.0  0.000021
28630  2024-11-30  0.000027  0.000024  ...            1.0              1.0  0.000022
28631  2024-12-01  0.000031  0.000025  ...            1.0              1.0  0.000022
28632  2024-12-02  0.000030       NaN  ...            NaN              NaN       NaN

[28633 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted SHIBA_INU_SHIB
NECESSARRRY AAAA START
1
1
2024-09-27
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
11  SHIBA INU SHIB  0.00003  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
TON_TON
[{'Date': datetime.date(2024, 12, 2), 'Price': 6.53173}]
success ya
UWAGA
db_TONUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  1.91440       NaN  ...       NaN              0                0
1    2023-10-15  1.92580       NaN  ...       NaN              0                0
2    2023-10-16  1.95820       NaN  ...       NaN              0                0
3    2023-10-17  2.10020       NaN  ...       NaN              0                0
4    2023-10-18  2.04330       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
410  2024-11-27  6.41067  5.595902  ...  6.162952              1                1
411  2024-11-28  6.44777  5.666891  ...  6.160431              1                1
412  2024-11-29  6.42862  5.730368  ...  6.157507              1                1
413  2024-11-30  6.87659  5.825887  ...  6.157636              1                1
414  2024-12-01  6.85871  5.911956  ...  6.156963              1                1

[415 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 6.53173}, {'Date': datetime.date(2024, 12, 2), 'Price': 6.53173}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  1.91440       NaN  ...       NaN            0.0              0.0
1    2023-10-15  1.92580       NaN  ...       NaN            0.0              0.0
2    2023-10-16  1.95820       NaN  ...       NaN            0.0              0.0
3    2023-10-17  2.10020       NaN  ...       NaN            0.0              0.0
4    2023-10-18  2.04330       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
411  2024-11-28  6.44777  5.666891  ...  6.160431            1.0              1.0
412  2024-11-29  6.42862  5.730368  ...  6.157507            1.0              1.0
413  2024-11-30  6.87659  5.825887  ...  6.157636            1.0              1.0
414  2024-12-01  6.85871  5.911956  ...  6.156963            1.0              1.0
415  2024-12-02  6.53173       NaN  ...       NaN            NaN              NaN

[416 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted TON_TON
NECESSARRRY AAAA START
1
1
2024-11-23
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
       Name    Price  ...  middle_flip_date  long_flip_date
12  TON TON  6.53173  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Stellar_XLM
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.54555}]
success ya
UWAGA
db_XLMUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.072524       NaN  ...              0                0       NaN
1    2023-01-02  0.073718       NaN  ...              0                0       NaN
2    2023-01-03  0.073649       NaN  ...              0                0       NaN
3    2023-01-04  0.073836       NaN  ...              0                0       NaN
4    2023-01-05  0.072890       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.497910  0.276026  ...              1                1  0.188818
557  2024-11-28  0.478350  0.292887  ...              1                1  0.198977
558  2024-11-29  0.533930  0.312974  ...              1                1  0.210730
559  2024-11-30  0.530560  0.331106  ...              1                1  0.221952
560  2024-12-01  0.546660  0.349069  ...              1                1  0.233345

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.54555}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.54555}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.072524       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.073718       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.073649       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.073836       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.072890       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.478350  0.292887  ...            1.0              1.0  0.198977
558  2024-11-29  0.533930  0.312974  ...            1.0              1.0  0.210730
559  2024-11-30  0.530560  0.331106  ...            1.0              1.0  0.221952
560  2024-12-01  0.546660  0.349069  ...            1.0              1.0  0.233345
561  2024-12-02  0.545550       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Stellar_XLM
NECESSARRRY AAAA START
1
1
2024-11-18
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
13  Stellar XLM  0.54555  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Chainlink_LINK
[{'Date': datetime.date(2024, 12, 2), 'Price': 23.808}]
success ya
UWAGA
db_LINKUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   5.622443  ...                0        NaN
1      2023-01-02   5.687627  ...                0        NaN
2      2023-01-03   5.622096  ...                0        NaN
3      2023-01-04   5.804032  ...                0        NaN
4      2023-01-05   5.647835  ...                0        NaN
...           ...        ...  ...              ...        ...
28626  2024-11-27  18.664200  ...                1  13.466062
28627  2024-11-28  17.931300  ...                1  13.622737
28628  2024-11-29  18.247200  ...                1  13.784999
28629  2024-11-30  18.996900  ...                1  13.967872
28630  2024-12-01  18.919300  ...                1  14.141607

[28631 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 23.808}, {'Date': datetime.date(2024, 12, 2), 'Price': 23.808}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   5.622443  ...              0.0        NaN
1      2023-01-02   5.687627  ...              0.0        NaN
2      2023-01-03   5.622096  ...              0.0        NaN
3      2023-01-04   5.804032  ...              0.0        NaN
4      2023-01-05   5.647835  ...              0.0        NaN
...           ...        ...  ...              ...        ...
28627  2024-11-28  17.931300  ...              1.0  13.622737
28628  2024-11-29  18.247200  ...              1.0  13.784999
28629  2024-11-30  18.996900  ...              1.0  13.967872
28630  2024-12-01  18.919300  ...              1.0  14.141607
28631  2024-12-02  23.808000  ...              NaN        NaN

[28632 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Chainlink_LINK
NECESSARRRY AAAA START
1
1
2024-11-07
2024-11-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name   Price  ...  middle_flip_date  long_flip_date
14  Chainlink LINK  23.808  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Polkadot_DOT
[{'Date': datetime.date(2024, 12, 2), 'Price': 9.25743}]
success ya
UWAGA
db_DOTUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  4.370816       NaN  ...              0                0       NaN
1      2023-01-02  4.489374       NaN  ...              0                0       NaN
2      2023-01-03  4.524364       NaN  ...              0                0       NaN
3      2023-01-04  4.630191       NaN  ...              0                0       NaN
4      2023-01-05  4.617662       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28626  2024-11-27  8.451200  6.326924  ...              1                1  5.367980
28627  2024-11-28  8.613700  6.517489  ...              1                1  5.481864
28628  2024-11-29  9.026900  6.726606  ...              1                1  5.606252
28629  2024-11-30  8.947800  6.911706  ...              1                1  5.723499
28630  2024-12-01  9.293000  7.110147  ...              1                1  5.848745

[28631 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 9.25743}, {'Date': datetime.date(2024, 12, 2), 'Price': 9.25743}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  4.370816       NaN  ...            0.0              0.0       NaN
1      2023-01-02  4.489374       NaN  ...            0.0              0.0       NaN
2      2023-01-03  4.524364       NaN  ...            0.0              0.0       NaN
3      2023-01-04  4.630191       NaN  ...            0.0              0.0       NaN
4      2023-01-05  4.617662       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28627  2024-11-28  8.613700  6.517489  ...            1.0              1.0  5.481864
28628  2024-11-29  9.026900  6.726606  ...            1.0              1.0  5.606252
28629  2024-11-30  8.947800  6.911706  ...            1.0              1.0  5.723499
28630  2024-12-01  9.293000  7.110147  ...            1.0              1.0  5.848745
28631  2024-12-02  9.257430       NaN  ...            NaN              NaN       NaN

[28632 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Polkadot_DOT
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-16
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
15  Polkadot DOT  9.25743  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Hedera_HBAR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.28806}]
success ya
UWAGA
db_HBARUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.038084       NaN  ...              0                0       NaN
1    2023-01-02  0.038861       NaN  ...              0                0       NaN
2    2023-01-03  0.038125       NaN  ...              0                0       NaN
3    2023-01-04  0.038506       NaN  ...              0                0       NaN
4    2023-01-05  0.038302       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.143520  0.114379  ...              1                1  0.104493
557  2024-11-28  0.143530  0.116809  ...              1                1  0.105863
558  2024-11-29  0.169160  0.121171  ...              1                1  0.108084
559  2024-11-30  0.168270  0.125096  ...              1                1  0.110195
560  2024-12-01  0.202580  0.131553  ...              1                1  0.113437

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.28806}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.28806}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.038084       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.038861       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.038125       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.038506       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.038302       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.143530  0.116809  ...            1.0              1.0  0.105863
558  2024-11-29  0.169160  0.121171  ...            1.0              1.0  0.108084
559  2024-11-30  0.168270  0.125096  ...            1.0              1.0  0.110195
560  2024-12-01  0.202580  0.131553  ...            1.0              1.0  0.113437
561  2024-12-02  0.288060       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Hedera_HBAR
NECESSARRRY AAAA START
1
1
2024-11-21
2024-11-18
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
16  Hedera HBAR  0.28806  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Bitcoin_Cash_BCH
[{'Date': datetime.date(2024, 12, 2), 'Price': 519.731}]
success ya
UWAGA
db_BCHUSD
COINDBBB
           Date       Close  ...  Middle_Trend_Up       EMA56
0    2023-01-01   96.955070  ...                0         NaN
1    2023-01-02   99.310051  ...                0         NaN
2    2023-01-03   99.649353  ...                0         NaN
3    2023-01-04  101.482735  ...                0         NaN
4    2023-01-05  101.084549  ...                0         NaN
..          ...         ...  ...              ...         ...
556  2024-11-27  517.460000  ...                1  448.466903
557  2024-11-28  508.511000  ...                1  450.573713
558  2024-11-29  515.612000  ...                1  452.855759
559  2024-11-30  531.528000  ...                1  455.616188
560  2024-12-01  524.125000  ...                1  458.020006

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 519.731}, {'Date': datetime.date(2024, 12, 2), 'Price': 519.731}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date       Close  ...  Middle_Trend_Up       EMA56
0    2023-01-01   96.955070  ...              0.0         NaN
1    2023-01-02   99.310051  ...              0.0         NaN
2    2023-01-03   99.649353  ...              0.0         NaN
3    2023-01-04  101.482735  ...              0.0         NaN
4    2023-01-05  101.084549  ...              0.0         NaN
..          ...         ...  ...              ...         ...
557  2024-11-28  508.511000  ...              1.0  450.573713
558  2024-11-29  515.612000  ...              1.0  452.855759
559  2024-11-30  531.528000  ...              1.0  455.616188
560  2024-12-01  524.125000  ...              1.0  458.020006
561  2024-12-02  519.731000  ...              NaN         NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Bitcoin_Cash_BCH
NECESSARRRY AAAA START
1
1
2024-11-25
2024-06-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
17  Bitcoin Cash BCH  519.731  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Litecoin_LTC
[{'Date': datetime.date(2024, 12, 2), 'Price': 133.24}]
success ya
UWAGA
db_LTCUSD
COINDBBB
             Date       Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   70.815659  ...                0        NaN
1      2023-01-02   74.862907  ...                0        NaN
2      2023-01-03   75.602722  ...                0        NaN
3      2023-01-04   75.433907  ...                0        NaN
4      2023-01-05   74.250809  ...                0        NaN
...           ...         ...  ...              ...        ...
28626  2024-11-27   97.190000  ...                1  78.181165
28627  2024-11-28   95.472000  ...                1  78.787861
28628  2024-11-29  104.717000  ...                1  79.697655
28629  2024-11-30  102.714000  ...                1  80.505246
28630  2024-12-01  119.542000  ...                1  81.874957

[28631 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 133.24}, {'Date': datetime.date(2024, 12, 2), 'Price': 133.24}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date       Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   70.815659  ...              0.0        NaN
1      2023-01-02   74.862907  ...              0.0        NaN
2      2023-01-03   75.602722  ...              0.0        NaN
3      2023-01-04   75.433907  ...              0.0        NaN
4      2023-01-05   74.250809  ...              0.0        NaN
...           ...         ...  ...              ...        ...
28627  2024-11-28   95.472000  ...              1.0  78.787861
28628  2024-11-29  104.717000  ...              1.0  79.697655
28629  2024-11-30  102.714000  ...              1.0  80.505246
28630  2024-12-01  119.542000  ...              1.0  81.874957
28631  2024-12-02  133.240000  ...              NaN        NaN

[28632 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Litecoin_LTC
NECESSARRRY AAAA START
1
1
2024-10-15
2024-11-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name   Price  ...  middle_flip_date  long_flip_date
18  Litecoin LTC  133.24  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Sui_SUI
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.2459}]
success ya
UWAGA
db_SUIUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.004502       NaN  ...              0                0       NaN
1      2023-01-02  0.004504       NaN  ...              0                0       NaN
2      2023-01-03  0.004499       NaN  ...              0                0       NaN
3      2023-01-04  0.004742       NaN  ...              0                0       NaN
4      2023-01-05  0.004724       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27788  2024-11-27  3.434000  3.185216  ...              1                1  2.610081
27789  2024-11-28  3.442000  3.206615  ...              1                1  2.639271
27790  2024-11-29  3.485000  3.229813  ...              1                1  2.668946
27791  2024-11-30  3.476000  3.250329  ...              1                1  2.697264
27792  2024-12-01  3.477000  3.269218  ...              1                1  2.724623

[27793 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.2459}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.2459}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.004502       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.004504       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.004499       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.004742       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.004724       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27789  2024-11-28  3.442000  3.206615  ...            1.0              1.0  2.639271
27790  2024-11-29  3.485000  3.229813  ...            1.0              1.0  2.668946
27791  2024-11-30  3.476000  3.250329  ...            1.0              1.0  2.697264
27792  2024-12-01  3.477000  3.269218  ...            1.0              1.0  2.724623
27793  2024-12-02  3.245900       NaN  ...            NaN              NaN       NaN

[27794 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Sui_SUI
NECESSARRRY AAAA START
1
1
2024-09-08
2024-09-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
       Name   Price  ...  middle_flip_date  long_flip_date
19  Sui SUI  3.2459  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Pepe_PEPE
[{'Date': datetime.date(2024, 12, 2), 'Price': 2e-05}]
success ya
UWAGA
db_PEPEUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-05-01  0.038463       NaN  ...       NaN              0                0
1      2023-05-02  0.046578       NaN  ...       NaN              0                0
2      2023-05-03  0.047231       NaN  ...       NaN              0                0
3      2023-05-04  0.059074       NaN  ...       NaN              0                0
4      2023-05-05  0.239324       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
27240  2024-11-27  0.000020  0.000017  ...  0.000014              1                1
27241  2024-11-28  0.000020  0.000018  ...  0.000014              1                1
27242  2024-11-29  0.000020  0.000018  ...  0.000015              1                1
27243  2024-11-30  0.000020  0.000018  ...  0.000015              1                1
27244  2024-12-01  0.000022  0.000018  ...  0.000015              1                1

[27245 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2e-05}, {'Date': datetime.date(2024, 12, 2), 'Price': 2e-05}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-05-01  0.038463       NaN  ...       NaN            0.0              0.0
1      2023-05-02  0.046578       NaN  ...       NaN            0.0              0.0
2      2023-05-03  0.047231       NaN  ...       NaN            0.0              0.0
3      2023-05-04  0.059074       NaN  ...       NaN            0.0              0.0
4      2023-05-05  0.239324       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
27241  2024-11-28  0.000020  0.000018  ...  0.000014            1.0              1.0
27242  2024-11-29  0.000020  0.000018  ...  0.000015            1.0              1.0
27243  2024-11-30  0.000020  0.000018  ...  0.000015            1.0              1.0
27244  2024-12-01  0.000022  0.000018  ...  0.000015            1.0              1.0
27245  2024-12-02  0.000020       NaN  ...       NaN            NaN              NaN

[27246 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Pepe_PEPE
NECESSARRRY AAAA START
1
1
2024-11-06
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
20  Pepe PEPE  0.00002  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Uniswap_UNI
[{'Date': datetime.date(2024, 12, 2), 'Price': 13.8343}]
success ya
UWAGA
db_UNIUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   0.000100  ...                0       NaN
1      2023-01-02   0.000100  ...                0       NaN
2      2023-01-03   0.000100  ...                0       NaN
3      2023-01-04   0.000101  ...                0       NaN
4      2023-01-05   0.000101  ...                0       NaN
...           ...        ...  ...              ...       ...
28626  2024-11-27  13.521600  ...                1  8.668003
28627  2024-11-28  12.770300  ...                1  8.811943
28628  2024-11-29  12.580500  ...                1  8.944173
28629  2024-11-30  12.784200  ...                1  9.078911
28630  2024-12-01  13.059000  ...                1  9.218563

[28631 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 13.8343}, {'Date': datetime.date(2024, 12, 2), 'Price': 13.8343}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   0.000100  ...              0.0       NaN
1      2023-01-02   0.000100  ...              0.0       NaN
2      2023-01-03   0.000100  ...              0.0       NaN
3      2023-01-04   0.000101  ...              0.0       NaN
4      2023-01-05   0.000101  ...              0.0       NaN
...           ...        ...  ...              ...       ...
28627  2024-11-28  12.770300  ...              1.0  8.811943
28628  2024-11-29  12.580500  ...              1.0  8.944173
28629  2024-11-30  12.784200  ...              1.0  9.078911
28630  2024-12-01  13.059000  ...              1.0  9.218563
28631  2024-12-02  13.834300  ...              NaN       NaN

[28632 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Uniswap_UNI
NECESSARRRY AAAA START
1
1
2024-09-28
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
21  Uniswap UNI  13.8343  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
NEAR_Protocol_NEAR
[{'Date': datetime.date(2024, 12, 2), 'Price': 6.71862}]
success ya
UWAGA
db_NEARUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.275819       NaN  ...              0                0       NaN
1      2023-01-02  1.312673       NaN  ...              0                0       NaN
2      2023-01-03  1.334069       NaN  ...              0                0       NaN
3      2023-01-04  1.550987       NaN  ...              0                0       NaN
4      2023-01-05  1.525699       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28626  2024-11-27  6.816200  5.708162  ...              1                1  5.174178
28627  2024-11-28  7.017500  5.817273  ...              1                1  5.238856
28628  2024-11-29  6.961300  5.912609  ...              1                1  5.299292
28629  2024-11-30  7.003300  6.003500  ...              1                1  5.359082
28630  2024-12-01  6.915800  6.079525  ...              1                1  5.413704

[28631 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 6.71862}, {'Date': datetime.date(2024, 12, 2), 'Price': 6.71862}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.275819       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.312673       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.334069       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.550987       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.525699       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28627  2024-11-28  7.017500  5.817273  ...            1.0              1.0  5.238856
28628  2024-11-29  6.961300  5.912609  ...            1.0              1.0  5.299292
28629  2024-11-30  7.003300  6.003500  ...            1.0              1.0  5.359082
28630  2024-12-01  6.915800  6.079525  ...            1.0              1.0  5.413704
28631  2024-12-02  6.718620       NaN  ...            NaN              NaN       NaN

[28632 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted NEAR_Protocol_NEAR
NECESSARRRY AAAA START
1
1
2024-11-13
2024-11-14
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
22  NEAR Protocol NEAR  6.71862  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
UNUS_SED_LEO_LEO
[{'Date': datetime.date(2024, 12, 2), 'Price': 8.80467}]
success ya
UWAGA
db_LEOUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    3.523903  ...              0                0
1    2023-01-02 00:00:00    3.498005  ...              0                0
2    2023-01-03 00:00:00    3.496508  ...              0                0
3    2023-01-04 00:00:00    3.510222  ...              0                0
4    2023-01-05 00:00:00    3.511864  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  581.324000  ...              1                1
469           2024-04-14  600.075000  ...              1                1
470           2024-04-15  591.478000  ...              1                1
471           2024-04-16  588.697000  ...              1                1
472           2024-04-17    5.851650  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 5.80091}, {'Date': datetime.date(2024, 5, 10), 'Price': 5.93488}, {'Date': datetime.date(2024, 5, 11), 'Price': 5.83118}, {'Date': datetime.date(2024, 5, 12), 'Price': 5.89903}, {'Date': datetime.date(2024, 5, 13), 'Price': 5.89521}, {'Date': datetime.date(2024, 5, 14), 'Price': 5.93625}, {'Date': datetime.date(2024, 5, 15), 'Price': 5.97512}, {'Date': datetime.date(2024, 5, 16), 'Price': 5.90997}, {'Date': datetime.date(2024, 5, 17), 'Price': 5.91313}, {'Date': datetime.date(2024, 5, 18), 'Price': 5.91038}, {'Date': datetime.date(2024, 5, 19), 'Price': 5.89152}, {'Date': datetime.date(2024, 5, 20), 'Price': 5.98271}, {'Date': datetime.date(2024, 5, 21), 'Price': 5.99553}, {'Date': datetime.date(2024, 5, 22), 'Price': 5.97939}, {'Date': datetime.date(2024, 5, 23), 'Price': 5.99161}, {'Date': datetime.date(2024, 5, 24), 'Price': 5.98985}, {'Date': datetime.date(2024, 5, 25), 'Price': 5.974}, {'Date': datetime.date(2024, 5, 26), 'Price': 5.95285}, {'Date': datetime.date(2024, 5, 27), 'Price': 5.93615}, {'Date': datetime.date(2024, 5, 28), 'Price': 5.9824}, {'Date': datetime.date(2024, 5, 29), 'Price': 5.95105}, {'Date': datetime.date(2024, 5, 30), 'Price': 5.94946}, {'Date': datetime.date(2024, 5, 31), 'Price': 5.92566}, {'Date': datetime.date(2024, 6, 1), 'Price': 5.95972}, {'Date': datetime.date(2024, 6, 2), 'Price': 5.90225}, {'Date': datetime.date(2024, 6, 3), 'Price': 6.023}, {'Date': datetime.date(2024, 6, 4), 'Price': 5.94968}, {'Date': datetime.date(2024, 6, 5), 'Price': 6.03712}, {'Date': datetime.date(2024, 6, 6), 'Price': 6.00577}, {'Date': datetime.date(2024, 6, 7), 'Price': 6.02764}, {'Date': datetime.date(2024, 6, 8), 'Price': 5.80104}, {'Date': datetime.date(2024, 6, 9), 'Price': 5.81528}, {'Date': datetime.date(2024, 6, 10), 'Price': 5.84548}, {'Date': datetime.date(2024, 6, 11), 'Price': 5.89522}, {'Date': datetime.date(2024, 6, 12), 'Price': 5.91614}, {'Date': datetime.date(2024, 6, 13), 'Price': 5.59612}, {'Date': datetime.date(2024, 6, 14), 'Price': 5.56978}, {'Date': datetime.date(2024, 6, 15), 'Price': 5.73554}, {'Date': datetime.date(2024, 6, 16), 'Price': 5.8738}, {'Date': datetime.date(2024, 6, 17), 'Price': 5.69755}, {'Date': datetime.date(2024, 6, 18), 'Price': 5.72917}, {'Date': datetime.date(2024, 6, 19), 'Price': 5.72363}, {'Date': datetime.date(2024, 6, 20), 'Price': 5.7107}, {'Date': datetime.date(2024, 6, 21), 'Price': 5.66131}, {'Date': datetime.date(2024, 6, 22), 'Price': 5.74342}, {'Date': datetime.date(2024, 6, 23), 'Price': 5.38288}, {'Date': datetime.date(2024, 6, 24), 'Price': 5.74688}, {'Date': datetime.date(2024, 6, 25), 'Price': 5.7596}, {'Date': datetime.date(2024, 6, 26), 'Price': 5.7148}, {'Date': datetime.date(2024, 6, 27), 'Price': 5.77102}, {'Date': datetime.date(2024, 6, 28), 'Price': 5.75034}, {'Date': datetime.date(2024, 6, 29), 'Price': 5.80924}, {'Date': datetime.date(2024, 6, 30), 'Price': 5.81016}, {'Date': datetime.date(2024, 7, 1), 'Price': 5.79197}, {'Date': datetime.date(2024, 11, 17), 'Price': 7.70844}, {'Date': datetime.date(2024, 11, 18), 'Price': 7.70468}, {'Date': datetime.date(2024, 11, 19), 'Price': 7.8585}, {'Date': datetime.date(2024, 11, 20), 'Price': 8.3568}, {'Date': datetime.date(2024, 11, 21), 'Price': 8.87133}, {'Date': datetime.date(2024, 11, 22), 'Price': 8.25731}, {'Date': datetime.date(2024, 11, 23), 'Price': 8.59202}, {'Date': datetime.date(2024, 11, 24), 'Price': 8.48811}, {'Date': datetime.date(2024, 11, 25), 'Price': 8.36563}, {'Date': datetime.date(2024, 11, 26), 'Price': 8.06365}, {'Date': datetime.date(2024, 11, 27), 'Price': 8.4822}, {'Date': datetime.date(2024, 11, 28), 'Price': 8.48725}, {'Date': datetime.date(2024, 11, 29), 'Price': 8.62972}, {'Date': datetime.date(2024, 11, 30), 'Price': 8.73658}, {'Date': datetime.date(2024, 12, 1), 'Price': 8.58771}, {'Date': datetime.date(2024, 12, 2), 'Price': 8.80467}, {'Date': datetime.date(2024, 12, 2), 'Price': 8.80467}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Aptos_APT
[{'Date': datetime.date(2024, 12, 2), 'Price': 12.8171}]
success ya
UWAGA
db_APTUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   0.001376  ...                0        NaN
1      2023-01-02   0.001375  ...                0        NaN
2      2023-01-03   0.001371  ...                0        NaN
3      2023-01-04   0.001367  ...                0        NaN
4      2023-01-05   0.001367  ...                0        NaN
...           ...        ...  ...              ...        ...
28626  2024-11-27  12.653300  ...                1  10.360921
28627  2024-11-28  12.778400  ...                1  10.445745
28628  2024-11-29  13.283000  ...                1  10.545298
28629  2024-11-30  13.383500  ...                1  10.644884
28630  2024-12-01  13.447200  ...                1  10.743210

[28631 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 12.8171}, {'Date': datetime.date(2024, 12, 2), 'Price': 12.8171}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   0.001376  ...              0.0        NaN
1      2023-01-02   0.001375  ...              0.0        NaN
2      2023-01-03   0.001371  ...              0.0        NaN
3      2023-01-04   0.001367  ...              0.0        NaN
4      2023-01-05   0.001367  ...              0.0        NaN
...           ...        ...  ...              ...        ...
28627  2024-11-28  12.778400  ...              1.0  10.445745
28628  2024-11-29  13.283000  ...              1.0  10.545298
28629  2024-11-30  13.383500  ...              1.0  10.644884
28630  2024-12-01  13.447200  ...              1.0  10.743210
28631  2024-12-02  12.817100  ...              NaN        NaN

[28632 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Aptos_APT
NECESSARRRY AAAA START
1
1
2024-09-22
2024-10-11
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
24  Aptos APT  12.8171  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Internet_Computer_ICP
[{'Date': datetime.date(2024, 12, 2), 'Price': 13.2477}]
success ya
UWAGA
db_ICPUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   4.017572  ...                0       NaN
1      2023-01-02   3.998948  ...                0       NaN
2      2023-01-03   3.914108  ...                0       NaN
3      2023-01-04   3.950955  ...                0       NaN
4      2023-01-05   3.815293  ...                0       NaN
...           ...        ...  ...              ...       ...
28626  2024-11-27  11.675000  ...                1  8.963682
28627  2024-11-28  11.557000  ...                1  9.054676
28628  2024-11-29  12.050000  ...                1  9.159775
28629  2024-11-30  12.448000  ...                1  9.275151
28630  2024-12-01  12.770000  ...                1  9.397777

[28631 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 13.2477}, {'Date': datetime.date(2024, 12, 2), 'Price': 13.2477}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   4.017572  ...              0.0       NaN
1      2023-01-02   3.998948  ...              0.0       NaN
2      2023-01-03   3.914108  ...              0.0       NaN
3      2023-01-04   3.950955  ...              0.0       NaN
4      2023-01-05   3.815293  ...              0.0       NaN
...           ...        ...  ...              ...       ...
28627  2024-11-28  11.557000  ...              1.0  9.054676
28628  2024-11-29  12.050000  ...              1.0  9.159775
28629  2024-11-30  12.448000  ...              1.0  9.275151
28630  2024-12-01  12.770000  ...              1.0  9.397777
28631  2024-12-02  13.247700  ...              NaN       NaN

[28632 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Internet_Computer_ICP
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                     Name    Price  ...  middle_flip_date  long_flip_date
25  Internet Computer ICP  13.2477  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Dai_DAI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.99994}]
success ya
UWAGA
db_DAIUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.999790  ...              0                0
1    2023-01-02 00:00:00    0.999540  ...              0                0
2    2023-01-03 00:00:00    0.999835  ...              0                0
3    2023-01-04 00:00:00    1.000068  ...              0                0
4    2023-01-05 00:00:00    0.999522  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  100.001000  ...              1                1
469           2024-04-14  100.018000  ...              1                1
470           2024-04-15    0.999970  ...              0                1
471           2024-04-16  100.026000  ...              1                1
472           2024-04-17    1.000010  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 1.0001}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.99981}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.99989}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.99999}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.99992}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.99988}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.99992}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.99994}, {'Date': datetime.date(2024, 5, 17), 'Price': 1.0}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.99999}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.99992}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.99995}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.99996}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.99977}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.99978}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.99992}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.99997}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.99996}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.99965}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.99985}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.9998}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.00022}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.99992}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.00007}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.99995}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.99998}, {'Date': datetime.date(2024, 6, 4), 'Price': 1.00034}, {'Date': datetime.date(2024, 6, 5), 'Price': 1.0}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.99974}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.99974}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.99996}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.99989}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.99984}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.00017}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.99987}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.99989}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.99984}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.99982}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.99985}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.0}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.99983}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.99989}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.00001}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.00007}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.00009}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.99994}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.00003}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.00022}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.99997}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.99948}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.99968}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.99973}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.00008}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.99987}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.99992}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.00033}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.99978}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.99972}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.0003}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.99999}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.99988}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.99996}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.99985}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.9997}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.00049}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.9999}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.99995}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.99993}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.9999}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.99994}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.99994}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Polygon_Ecosystem_Token_POL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.62715}]
success ya
UWAGA
db_POLUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.016320       NaN  ...       NaN              0                0
1      2023-01-02  0.017331       NaN  ...       NaN              0                0
2      2023-01-03  0.018110       NaN  ...       NaN              0                0
3      2023-01-04  0.017130       NaN  ...       NaN              0                0
4      2023-01-05  0.016980       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
16795  2024-11-27  0.580600  0.456586  ...  0.416235              1                1
16796  2024-11-28  0.563400  0.465487  ...  0.421399              1                1
16797  2024-11-29  0.584300  0.475388  ...  0.427114              1                1
16798  2024-11-30  0.596900  0.485514  ...  0.433072              1                1
16799  2024-12-01  0.602100  0.495230  ...  0.439003              1                1

[16800 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.62715}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.62715}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.016320       NaN  ...       NaN            0.0              0.0
1      2023-01-02  0.017331       NaN  ...       NaN            0.0              0.0
2      2023-01-03  0.018110       NaN  ...       NaN            0.0              0.0
3      2023-01-04  0.017130       NaN  ...       NaN            0.0              0.0
4      2023-01-05  0.016980       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
16796  2024-11-28  0.563400  0.465487  ...  0.421399            1.0              1.0
16797  2024-11-29  0.584300  0.475388  ...  0.427114            1.0              1.0
16798  2024-11-30  0.596900  0.485514  ...  0.433072            1.0              1.0
16799  2024-12-01  0.602100  0.495230  ...  0.439003            1.0              1.0
16800  2024-12-02  0.627150       NaN  ...       NaN            NaN              NaN

[16801 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Polygon_Ecosystem_Token_POL
NECESSARRRY AAAA START
1
1
2024-11-19
2024-11-22
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                           Name    Price  ...  middle_flip_date  long_flip_date
27  Polygon Ecosystem Token POL  0.62715  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ethereum_Classic_ETC
[{'Date': datetime.date(2024, 12, 2), 'Price': 32.9885}]
success ya
UWAGA
db_ETCUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  15.772024  ...                0        NaN
1      2023-01-02  16.112904  ...                0        NaN
2      2023-01-03  15.893769  ...                0        NaN
3      2023-01-04  19.186888  ...                0        NaN
4      2023-01-05  18.215586  ...                0        NaN
...           ...        ...  ...              ...        ...
28626  2024-11-27  32.957900  ...                1  22.782909
28627  2024-11-28  31.931600  ...                1  23.103916
28628  2024-11-29  31.927900  ...                1  23.413529
28629  2024-11-30  32.683100  ...                1  23.738777
28630  2024-12-01  33.304900  ...                1  24.074431

[28631 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 32.9885}, {'Date': datetime.date(2024, 12, 2), 'Price': 32.9885}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  15.772024  ...              0.0        NaN
1      2023-01-02  16.112904  ...              0.0        NaN
2      2023-01-03  15.893769  ...              0.0        NaN
3      2023-01-04  19.186888  ...              0.0        NaN
4      2023-01-05  18.215586  ...              0.0        NaN
...           ...        ...  ...              ...        ...
28627  2024-11-28  31.931600  ...              1.0  23.103916
28628  2024-11-29  31.927900  ...              1.0  23.413529
28629  2024-11-30  32.683100  ...              1.0  23.738777
28630  2024-12-01  33.304900  ...              1.0  24.074431
28631  2024-12-02  32.988500  ...              NaN        NaN

[28632 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Ethereum_Classic_ETC
NECESSARRRY AAAA START
1
1
2024-11-09
2024-11-15
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
28  Ethereum Classic ETC  32.9885  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Cronos_CRO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.18178}]
success ya
UWAGA
db_CROUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.056831       NaN  ...              0                0       NaN
1    2023-01-02  0.057360       NaN  ...              0                0       NaN
2    2023-01-03  0.057063       NaN  ...              0                0       NaN
3    2023-01-04  0.059333       NaN  ...              0                0       NaN
4    2023-01-05  0.058737       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.182280  0.148111  ...              1                1  0.130474
557  2024-11-28  0.176800  0.150502  ...              1                1  0.132099
558  2024-11-29  0.185190  0.153392  ...              1                1  0.133962
559  2024-11-30  0.186450  0.156147  ...              1                1  0.135804
560  2024-12-01  0.188950  0.158881  ...              1                1  0.137668

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.18178}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.18178}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.056831       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.057360       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.057063       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.059333       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.058737       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.176800  0.150502  ...            1.0              1.0  0.132099
558  2024-11-29  0.185190  0.153392  ...            1.0              1.0  0.133962
559  2024-11-30  0.186450  0.156147  ...            1.0              1.0  0.135804
560  2024-12-01  0.188950  0.158881  ...            1.0              1.0  0.137668
561  2024-12-02  0.181780       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Cronos_CRO
NECESSARRRY AAAA START
1
1
2024-11-20
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
29  Cronos CRO  0.18178  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Filecoin_FIL
[{'Date': datetime.date(2024, 12, 2), 'Price': 7.32641}]
success ya
UWAGA
db_FILUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  3.111418       NaN  ...              0                0       NaN
1      2023-01-02  3.147882       NaN  ...              0                0       NaN
2      2023-01-03  3.092895       NaN  ...              0                0       NaN
3      2023-01-04  3.359524       NaN  ...              0                0       NaN
4      2023-01-05  3.282671       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28626  2024-11-27  5.806800  4.665756  ...              1                1  4.214642
28627  2024-11-28  5.812000  4.761276  ...              1                1  4.270690
28628  2024-11-29  6.137500  4.875961  ...              1                1  4.336192
28629  2024-11-30  7.069300  5.058740  ...              1                1  4.432091
28630  2024-12-01  6.863200  5.209111  ...              1                1  4.517393

[28631 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 7.32641}, {'Date': datetime.date(2024, 12, 2), 'Price': 7.32641}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  3.111418       NaN  ...            0.0              0.0       NaN
1      2023-01-02  3.147882       NaN  ...            0.0              0.0       NaN
2      2023-01-03  3.092895       NaN  ...            0.0              0.0       NaN
3      2023-01-04  3.359524       NaN  ...            0.0              0.0       NaN
4      2023-01-05  3.282671       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28627  2024-11-28  5.812000  4.761276  ...            1.0              1.0  4.270690
28628  2024-11-29  6.137500  4.875961  ...            1.0              1.0  4.336192
28629  2024-11-30  7.069300  5.058740  ...            1.0              1.0  4.432091
28630  2024-12-01  6.863200  5.209111  ...            1.0              1.0  4.517393
28631  2024-12-02  7.326410       NaN  ...            NaN              NaN       NaN

[28632 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Filecoin_FIL
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
31  Filecoin FIL  7.32641  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Algorand_ALGO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.53562}]
success ya
UWAGA
db_ALGOUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.177466       NaN  ...              0                0       NaN
1    2023-01-02  0.181194       NaN  ...              0                0       NaN
2    2023-01-03  0.184302       NaN  ...              0                0       NaN
3    2023-01-04  0.187093       NaN  ...              0                0       NaN
4    2023-01-05  0.183544       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.295730  0.214195  ...              1                1  0.193099
557  2024-11-28  0.307320  0.221956  ...              1                1  0.197107
558  2024-11-29  0.421090  0.238550  ...              1                1  0.204966
559  2024-11-30  0.460110  0.257014  ...              1                1  0.213918
560  2024-12-01  0.498720  0.277156  ...              1                1  0.223911

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.53562}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.53562}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.177466       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.181194       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.184302       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.187093       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.183544       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.307320  0.221956  ...            1.0              1.0  0.197107
558  2024-11-29  0.421090  0.238550  ...            1.0              1.0  0.204966
559  2024-11-30  0.460110  0.257014  ...            1.0              1.0  0.213918
560  2024-12-01  0.498720  0.277156  ...            1.0              1.0  0.223911
561  2024-12-02  0.535620       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Algorand_ALGO
NECESSARRRY AAAA START
1
1
2024-11-22
2024-11-18
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
32  Algorand ALGO  0.53562  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Bittensor_TAO
[{'Date': datetime.date(2024, 12, 2), 'Price': 586.591}]
success ya
UWAGA
db_TAOUSD
COINDBBB
           Date       Close  ...  Long_Trend_Up Middle_Trend_Up
0    2023-03-13   75.270855  ...              0               0
1    2023-03-20   70.004663  ...              0               0
2    2023-03-27   59.822822  ...              0               0
3    2023-04-03   55.903604  ...              0               0
4    2023-04-10   57.288640  ...              0               0
..          ...         ...  ...            ...             ...
308  2024-11-27  574.947000  ...              1               1
309  2024-11-28  579.449000  ...              1               1
310  2024-11-29  615.481000  ...              1               1
311  2024-11-30  654.408000  ...              1               1
312  2024-12-01  639.570000  ...              1               1

[313 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 586.591}, {'Date': datetime.date(2024, 12, 2), 'Price': 586.591}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date       Close  ...  Long_Trend_Up Middle_Trend_Up
0    2023-03-13   75.270855  ...            0.0             0.0
1    2023-03-20   70.004663  ...            0.0             0.0
2    2023-03-27   59.822822  ...            0.0             0.0
3    2023-04-03   55.903604  ...            0.0             0.0
4    2023-04-10   57.288640  ...            0.0             0.0
..          ...         ...  ...            ...             ...
309  2024-11-28  579.449000  ...            1.0             1.0
310  2024-11-29  615.481000  ...            1.0             1.0
311  2024-11-30  654.408000  ...            1.0             1.0
312  2024-12-01  639.570000  ...            1.0             1.0
313  2024-12-02  586.591000  ...            NaN             NaN

[314 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Bittensor_TAO
NECESSARRRY AAAA START
1
1
2024-11-23
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
33  Bittensor TAO  586.591  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Artificial_Superintelligence_Alliance_FET
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.77187}]
success ya
UWAGA
db_FETUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  0.21290       NaN  ...       NaN              0                0
1    2023-10-15  0.21150       NaN  ...       NaN              0                0
2    2023-10-16  0.21400       NaN  ...       NaN              0                0
3    2023-10-17  0.20610       NaN  ...       NaN              0                0
4    2023-10-18  0.20320       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
410  2024-11-27  1.49304  1.353030  ...  1.430162              1                1
411  2024-11-28  1.66217  1.378792  ...  1.427639              1                1
412  2024-11-29  1.64550  1.401017  ...  1.425258              1                1
413  2024-11-30  1.88991  1.441758  ...  1.424697              1                1
414  2024-12-01  1.82632  1.473805  ...  1.422549              1                1

[415 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.77187}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.77187}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  0.21290       NaN  ...       NaN            0.0              0.0
1    2023-10-15  0.21150       NaN  ...       NaN            0.0              0.0
2    2023-10-16  0.21400       NaN  ...       NaN            0.0              0.0
3    2023-10-17  0.20610       NaN  ...       NaN            0.0              0.0
4    2023-10-18  0.20320       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
411  2024-11-28  1.66217  1.378792  ...  1.427639            1.0              1.0
412  2024-11-29  1.64550  1.401017  ...  1.425258            1.0              1.0
413  2024-11-30  1.88991  1.441758  ...  1.424697            1.0              1.0
414  2024-12-01  1.82632  1.473805  ...  1.422549            1.0              1.0
415  2024-12-02  1.77187       NaN  ...       NaN            NaN              NaN

[416 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Artificial_Superintelligence_Alliance_FET
NECESSARRRY AAAA START
1
1
2024-11-27
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                                         Name  ...  long_flip_date
34  Artificial Superintelligence Alliance FET  ...            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Render_RENDER
[{'Date': datetime.date(2024, 12, 2), 'Price': 8.33649}]
success ya
UWAGA
db_RENDERUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_RENDERUSD': no such table: db_RENDERUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
VeChain_VET
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05239}]
success ya
UWAGA
db_VETUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.016038       NaN  ...              0                0       NaN
1    2023-01-02  0.016157       NaN  ...              0                0       NaN
2    2023-01-03  0.016086       NaN  ...              0                0       NaN
3    2023-01-04  0.016589       NaN  ...              0                0       NaN
4    2023-01-05  0.016234       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.043160  0.033933  ...              1                1  0.033146
557  2024-11-28  0.041460  0.034561  ...              1                1  0.033437
558  2024-11-29  0.044140  0.035359  ...              1                1  0.033813
559  2024-11-30  0.046120  0.036256  ...              1                1  0.034245
560  2024-12-01  0.045730  0.037045  ...              1                1  0.034648

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05239}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.05239}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.016038       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.016157       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.016086       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.016589       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.016234       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.041460  0.034561  ...            1.0              1.0  0.033437
558  2024-11-29  0.044140  0.035359  ...            1.0              1.0  0.033813
559  2024-11-30  0.046120  0.036256  ...            1.0              1.0  0.034245
560  2024-12-01  0.045730  0.037045  ...            1.0              1.0  0.034648
561  2024-12-02  0.052390       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted VeChain_VET
NECESSARRRY AAAA START
1
1
2024-11-26
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
36  VeChain VET  0.05239  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Kaspa_KAS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15672}]
success ya
UWAGA
db_KASUSD
COINDBBB
     index        Date     Close  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      0.0  2023-01-01  0.005190  ...              0                0       NaN
1      1.0  2023-01-02  0.005163  ...              0                0       NaN
2      2.0  2023-01-03  0.004978  ...              0                0       NaN
3      3.0  2023-01-04  0.004954  ...              0                0       NaN
4      4.0  2023-01-05  0.004563  ...              0                0       NaN
..     ...         ...       ...  ...            ...              ...       ...
556    NaN  2024-11-27  0.152360  ...              1                1  0.152689
557    NaN  2024-11-28  0.150970  ...              1                1  0.152629
558    NaN  2024-11-29  0.154890  ...              1                1  0.152708
559    NaN  2024-11-30  0.163620  ...              1                1  0.153091
560    NaN  2024-12-01  0.167100  ...              1                1  0.153582

[561 rows x 9 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15672}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15672}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
     index        Date     Close  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      0.0  2023-01-01  0.005190  ...            0.0              0.0       NaN
1      1.0  2023-01-02  0.005163  ...            0.0              0.0       NaN
2      2.0  2023-01-03  0.004978  ...            0.0              0.0       NaN
3      3.0  2023-01-04  0.004954  ...            0.0              0.0       NaN
4      4.0  2023-01-05  0.004563  ...            0.0              0.0       NaN
..     ...         ...       ...  ...            ...              ...       ...
557    NaN  2024-11-28  0.150970  ...            1.0              1.0  0.152629
558    NaN  2024-11-29  0.154890  ...            1.0              1.0  0.152708
559    NaN  2024-11-30  0.163620  ...            1.0              1.0  0.153091
560    NaN  2024-12-01  0.167100  ...            1.0              1.0  0.153582
561    NaN  2024-12-02  0.156720  ...            NaN              NaN       NaN

[562 rows x 9 columns]
DATA VALIDATION PASSED!
successfully converted Kaspa_KAS
NECESSARRRY AAAA START
1
1
2024-05-26
2024-05-20
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
37  Kaspa KAS  0.15672  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Arbitrum_ARB
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.96479}]
success ya
UWAGA
db_ARBUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000333       NaN  ...              0                0       NaN
1      2023-01-02  0.000334       NaN  ...              0                0       NaN
2      2023-01-03  0.000334       NaN  ...              0                0       NaN
3      2023-01-04  0.000337       NaN  ...              0                0       NaN
4      2023-01-05  0.000337       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28225  2024-11-27  0.968100  0.734914  ...              1                1  0.651165
28226  2024-11-28  0.913300  0.749779  ...              1                1  0.660363
28227  2024-11-29  0.930200  0.764815  ...              1                1  0.669831
28228  2024-11-30  0.971200  0.782013  ...              1                1  0.680405
28229  2024-12-01  0.969100  0.797604  ...              1                1  0.690535

[28230 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.96479}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.96479}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000333       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.000334       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.000334       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.000337       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.000337       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28226  2024-11-28  0.913300  0.749779  ...            1.0              1.0  0.660363
28227  2024-11-29  0.930200  0.764815  ...            1.0              1.0  0.669831
28228  2024-11-30  0.971200  0.782013  ...            1.0              1.0  0.680405
28229  2024-12-01  0.969100  0.797604  ...            1.0              1.0  0.690535
28230  2024-12-02  0.964790       NaN  ...            NaN              NaN       NaN

[28231 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Arbitrum_ARB
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
38  Arbitrum ARB  0.96479  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Cosmos_ATOM
[{'Date': datetime.date(2024, 12, 2), 'Price': 9.21016}]
success ya
UWAGA
db_ATOMUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   9.464469  ...                0       NaN
1      2023-01-02   9.802422  ...                0       NaN
2      2023-01-03  10.161021  ...                0       NaN
3      2023-01-04  10.198363  ...                0       NaN
4      2023-01-05  10.076512  ...                0       NaN
...           ...        ...  ...              ...       ...
28225  2024-11-27   8.324300  ...                1  5.573808
28226  2024-11-28   8.219000  ...                1  5.666622
28227  2024-11-29   8.771000  ...                1  5.775547
28228  2024-11-30   8.572800  ...                1  5.873696
28229  2024-12-01   8.901900  ...                1  5.979949

[28230 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 9.21016}, {'Date': datetime.date(2024, 12, 2), 'Price': 9.21016}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   9.464469  ...              0.0       NaN
1      2023-01-02   9.802422  ...              0.0       NaN
2      2023-01-03  10.161021  ...              0.0       NaN
3      2023-01-04  10.198363  ...              0.0       NaN
4      2023-01-05  10.076512  ...              0.0       NaN
...           ...        ...  ...              ...       ...
28226  2024-11-28   8.219000  ...              1.0  5.666622
28227  2024-11-29   8.771000  ...              1.0  5.775547
28228  2024-11-30   8.572800  ...              1.0  5.873696
28229  2024-12-01   8.901900  ...              1.0  5.979949
28230  2024-12-02   9.210160  ...              NaN       NaN

[28231 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Cosmos_ATOM
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-18
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
39  Cosmos ATOM  9.21016  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Aave_AAVE
[{'Date': datetime.date(2024, 12, 2), 'Price': 233.755}]
success ya
UWAGA
db_AAVEUSD
COINDBBB
             Date       Close  ...  Middle_Trend_Up       EMA56
0      2023-01-01   52.045834  ...                0         NaN
1      2023-01-02   53.083157  ...                0         NaN
2      2023-01-03   53.040043  ...                0         NaN
3      2023-01-04   56.787495  ...                0         NaN
4      2023-01-05   55.387627  ...                0         NaN
...           ...         ...  ...              ...         ...
28225  2024-11-27  210.387000  ...                1  161.469138
28226  2024-11-28  200.131000  ...                1  162.825694
28227  2024-11-29  199.019000  ...                1  164.095635
28228  2024-11-30  211.688000  ...                1  165.765542
28229  2024-12-01  209.106000  ...                1  167.286260

[28230 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 233.755}, {'Date': datetime.date(2024, 12, 2), 'Price': 233.755}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date       Close  ...  Middle_Trend_Up       EMA56
0      2023-01-01   52.045834  ...              0.0         NaN
1      2023-01-02   53.083157  ...              0.0         NaN
2      2023-01-03   53.040043  ...              0.0         NaN
3      2023-01-04   56.787495  ...              0.0         NaN
4      2023-01-05   55.387627  ...              0.0         NaN
...           ...         ...  ...              ...         ...
28226  2024-11-28  200.131000  ...              1.0  162.825694
28227  2024-11-29  199.019000  ...              1.0  164.095635
28228  2024-11-30  211.688000  ...              1.0  165.765542
28229  2024-12-01  209.106000  ...              1.0  167.286260
28230  2024-12-02  233.755000  ...              NaN         NaN

[28231 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Aave_AAVE
NECESSARRRY AAAA START
1
1
2024-07-16
2024-08-14
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
40  Aave AAVE  233.755  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Stacks_STX
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.27146}]
success ya
UWAGA
db_STXUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.003016       NaN  ...              0                0       NaN
1      2023-01-02  0.003010       NaN  ...              0                0       NaN
2      2023-01-03  0.003042       NaN  ...              0                0       NaN
3      2023-01-04  0.003032       NaN  ...              0                0       NaN
4      2023-01-05  0.003019       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28626  2024-11-27  2.231100  1.948382  ...              1                1  1.846399
28627  2024-11-28  2.315900  1.979008  ...              1                1  1.862873
28628  2024-11-29  2.344200  2.009441  ...              1                1  1.879761
28629  2024-11-30  2.313300  2.034762  ...              1                1  1.894973
28630  2024-12-01  2.386900  2.064107  ...              1                1  1.912234

[28631 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.27146}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.27146}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.003016       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.003010       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.003042       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.003032       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.003019       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28627  2024-11-28  2.315900  1.979008  ...            1.0              1.0  1.862873
28628  2024-11-29  2.344200  2.009441  ...            1.0              1.0  1.879761
28629  2024-11-30  2.313300  2.034762  ...            1.0              1.0  1.894973
28630  2024-12-01  2.386900  2.064107  ...            1.0              1.0  1.912234
28631  2024-12-02  2.271460       NaN  ...            NaN              NaN       NaN

[28632 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Stacks_STX
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-10
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
41  Stacks STX  2.27146  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Immutable_IMX
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.94865}]
success ya
UWAGA
db_IMXUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2021-11-08  5.617405       NaN  ...       NaN              0                0
1    2021-11-15  7.563708       NaN  ...       NaN              0                0
2    2021-11-22  7.944176       NaN  ...       NaN              0                0
3    2021-11-29  5.486115       NaN  ...       NaN              0                0
4    2021-12-06  5.324546       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
636  2024-11-27  1.754090  1.583502  ...  1.786113              0                0
637  2024-11-28  1.827180  1.603808  ...  1.787554              0                0
638  2024-11-29  1.948350  1.632520  ...  1.793196              0                0
639  2024-11-30  2.007150  1.663739  ...  1.800703              0                0
640  2024-12-01  2.035140  1.694689  ...  1.808929              0                0

[641 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.94865}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.94865}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2021-11-08  5.617405       NaN  ...       NaN            0.0              0.0
1    2021-11-15  7.563708       NaN  ...       NaN            0.0              0.0
2    2021-11-22  7.944176       NaN  ...       NaN            0.0              0.0
3    2021-11-29  5.486115       NaN  ...       NaN            0.0              0.0
4    2021-12-06  5.324546       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
637  2024-11-28  1.827180  1.603808  ...  1.787554            0.0              0.0
638  2024-11-29  1.948350  1.632520  ...  1.793196            0.0              0.0
639  2024-11-30  2.007150  1.663739  ...  1.800703            0.0              0.0
640  2024-12-01  2.035140  1.694689  ...  1.808929            0.0              0.0
641  2024-12-02  1.948650       NaN  ...       NaN            NaN              NaN

[642 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Immutable_IMX
NECESSARRRY AAAA START
0
0
2024-04-10
2024-05-28
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
42  Immutable IMX  1.94865  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MANTRA_OM
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.58774}]
success ya
UWAGA
db_OMUSD
COINDBBB
            Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0     2023-01-01  0.028102       NaN  ...              0                0       NaN
1     2023-01-02  0.028455       NaN  ...              0                0       NaN
2     2023-01-03  0.028313       NaN  ...              0                0       NaN
3     2023-01-04  0.028513       NaN  ...              0                0       NaN
4     2023-01-05  0.029265       NaN  ...              0                0       NaN
...          ...       ...       ...  ...            ...              ...       ...
6170  2024-11-27  3.513750  2.896103  ...              1                1  2.177455
6171  2024-11-28  3.479490  2.944718  ...              1                1  2.223140
6172  2024-11-29  3.468640  2.988378  ...              1                1  2.266842
6173  2024-11-30  3.562200  3.036197  ...              1                1  2.312293
6174  2024-12-01  3.508360  3.075544  ...              1                1  2.354261

[6175 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.58774}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.58774}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0     2023-01-01  0.028102       NaN  ...            0.0              0.0       NaN
1     2023-01-02  0.028455       NaN  ...            0.0              0.0       NaN
2     2023-01-03  0.028313       NaN  ...            0.0              0.0       NaN
3     2023-01-04  0.028513       NaN  ...            0.0              0.0       NaN
4     2023-01-05  0.029265       NaN  ...            0.0              0.0       NaN
...          ...       ...       ...  ...            ...              ...       ...
6171  2024-11-28  3.479490  2.944718  ...            1.0              1.0  2.223140
6172  2024-11-29  3.468640  2.988378  ...            1.0              1.0  2.266842
6173  2024-11-30  3.562200  3.036197  ...            1.0              1.0  2.312293
6174  2024-12-01  3.508360  3.075544  ...            1.0              1.0  2.354261
6175  2024-12-02  3.587740       NaN  ...            NaN              NaN       NaN

[6176 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted MANTRA_OM
NECESSARRRY AAAA START
1
1
2024-09-12
2024-03-25
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
43  MANTRA OM  3.58774  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
OKB_OKB
[{'Date': datetime.date(2024, 12, 2), 'Price': 53.8912}]
success ya
UWAGA
db_OKBUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00   27.453880  ...              0                0
1    2023-01-02 00:00:00   29.198105  ...              0                0
2    2023-01-03 00:00:00   28.486441  ...              0                0
3    2023-01-04 00:00:00   27.396877  ...              0                0
4    2023-01-05 00:00:00   27.250887  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  517.633000  ...              1                1
469           2024-04-14  534.669000  ...              1                1
470           2024-04-15  575.911000  ...              1                1
471           2024-04-16  593.966000  ...              1                1
472           2024-04-17   54.943500  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 50.1521}, {'Date': datetime.date(2024, 5, 10), 'Price': 49.304}, {'Date': datetime.date(2024, 5, 11), 'Price': 49.9999}, {'Date': datetime.date(2024, 5, 12), 'Price': 49.8423}, {'Date': datetime.date(2024, 5, 13), 'Price': 49.5703}, {'Date': datetime.date(2024, 5, 14), 'Price': 48.7451}, {'Date': datetime.date(2024, 5, 15), 'Price': 49.5561}, {'Date': datetime.date(2024, 5, 16), 'Price': 49.5385}, {'Date': datetime.date(2024, 5, 17), 'Price': 50.5686}, {'Date': datetime.date(2024, 5, 18), 'Price': 50.1869}, {'Date': datetime.date(2024, 5, 19), 'Price': 48.9964}, {'Date': datetime.date(2024, 5, 20), 'Price': 51.121}, {'Date': datetime.date(2024, 5, 21), 'Price': 51.145}, {'Date': datetime.date(2024, 5, 22), 'Price': 49.6889}, {'Date': datetime.date(2024, 5, 23), 'Price': 49.0069}, {'Date': datetime.date(2024, 5, 24), 'Price': 49.122}, {'Date': datetime.date(2024, 5, 25), 'Price': 48.928}, {'Date': datetime.date(2024, 5, 26), 'Price': 48.4309}, {'Date': datetime.date(2024, 5, 27), 'Price': 47.9688}, {'Date': datetime.date(2024, 5, 28), 'Price': 46.9306}, {'Date': datetime.date(2024, 5, 29), 'Price': 45.6734}, {'Date': datetime.date(2024, 5, 30), 'Price': 45.9524}, {'Date': datetime.date(2024, 5, 31), 'Price': 46.9407}, {'Date': datetime.date(2024, 6, 1), 'Price': 48.0583}, {'Date': datetime.date(2024, 6, 2), 'Price': 46.7707}, {'Date': datetime.date(2024, 6, 3), 'Price': 47.5672}, {'Date': datetime.date(2024, 6, 4), 'Price': 48.0392}, {'Date': datetime.date(2024, 6, 5), 'Price': 48.7209}, {'Date': datetime.date(2024, 6, 6), 'Price': 48.652}, {'Date': datetime.date(2024, 6, 7), 'Price': 48.2133}, {'Date': datetime.date(2024, 6, 8), 'Price': 47.5767}, {'Date': datetime.date(2024, 6, 9), 'Price': 46.9827}, {'Date': datetime.date(2024, 6, 10), 'Price': 46.6837}, {'Date': datetime.date(2024, 6, 11), 'Price': 45.5076}, {'Date': datetime.date(2024, 6, 12), 'Price': 45.3163}, {'Date': datetime.date(2024, 6, 13), 'Price': 46.2742}, {'Date': datetime.date(2024, 6, 14), 'Price': 45.2814}, {'Date': datetime.date(2024, 6, 15), 'Price': 46.1013}, {'Date': datetime.date(2024, 6, 16), 'Price': 46.1304}, {'Date': datetime.date(2024, 6, 17), 'Price': 45.3875}, {'Date': datetime.date(2024, 6, 18), 'Price': 41.5446}, {'Date': datetime.date(2024, 6, 19), 'Price': 42.5815}, {'Date': datetime.date(2024, 6, 20), 'Price': 42.8987}, {'Date': datetime.date(2024, 6, 21), 'Price': 41.9358}, {'Date': datetime.date(2024, 6, 22), 'Price': 41.8872}, {'Date': datetime.date(2024, 6, 23), 'Price': 41.5356}, {'Date': datetime.date(2024, 6, 24), 'Price': 40.2466}, {'Date': datetime.date(2024, 6, 25), 'Price': 41.679}, {'Date': datetime.date(2024, 6, 26), 'Price': 41.5815}, {'Date': datetime.date(2024, 6, 27), 'Price': 42.2731}, {'Date': datetime.date(2024, 6, 28), 'Price': 41.1616}, {'Date': datetime.date(2024, 6, 29), 'Price': 42.2914}, {'Date': datetime.date(2024, 6, 30), 'Price': 42.7717}, {'Date': datetime.date(2024, 7, 1), 'Price': 42.2772}, {'Date': datetime.date(2024, 11, 17), 'Price': 44.4241}, {'Date': datetime.date(2024, 11, 18), 'Price': 43.9088}, {'Date': datetime.date(2024, 11, 19), 'Price': 44.1701}, {'Date': datetime.date(2024, 11, 20), 'Price': 43.608}, {'Date': datetime.date(2024, 11, 21), 'Price': 45.4613}, {'Date': datetime.date(2024, 11, 22), 'Price': 46.3513}, {'Date': datetime.date(2024, 11, 23), 'Price': 51.6583}, {'Date': datetime.date(2024, 11, 24), 'Price': 53.4306}, {'Date': datetime.date(2024, 11, 25), 'Price': 53.3553}, {'Date': datetime.date(2024, 11, 26), 'Price': 51.5502}, {'Date': datetime.date(2024, 11, 27), 'Price': 53.8824}, {'Date': datetime.date(2024, 11, 28), 'Price': 52.5765}, {'Date': datetime.date(2024, 11, 29), 'Price': 53.9966}, {'Date': datetime.date(2024, 11, 30), 'Price': 54.1754}, {'Date': datetime.date(2024, 12, 1), 'Price': 54.1285}, {'Date': datetime.date(2024, 12, 2), 'Price': 53.8912}, {'Date': datetime.date(2024, 12, 2), 'Price': 53.8912}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Celestia_TIA
[{'Date': datetime.date(2024, 12, 2), 'Price': 7.28223}]
success ya
UWAGA
db_TIAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.003508       NaN  ...              0                0       NaN
1      2023-01-02  0.003701       NaN  ...              0                0       NaN
2      2023-01-03  0.003540       NaN  ...              0                0       NaN
3      2023-01-04  0.003539       NaN  ...              0                0       NaN
4      2023-01-05  0.004096       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
18025  2024-11-27  8.062000  6.162598  ...              1                1  5.707638
18026  2024-11-28  8.229300  6.334823  ...              1                1  5.796118
18027  2024-11-29  8.036200  6.476605  ...              1                1  5.874717
18028  2024-11-30  8.365300  6.633996  ...              1                1  5.962106
18029  2024-12-01  7.998600  6.747713  ...              1                1  6.033562

[18030 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 7.28223}, {'Date': datetime.date(2024, 12, 2), 'Price': 7.28223}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.003508       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.003701       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.003540       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.003539       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.004096       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
18026  2024-11-28  8.229300  6.334823  ...            1.0              1.0  5.796118
18027  2024-11-29  8.036200  6.476605  ...            1.0              1.0  5.874717
18028  2024-11-30  8.365300  6.633996  ...            1.0              1.0  5.962106
18029  2024-12-01  7.998600  6.747713  ...            1.0              1.0  6.033562
18030  2024-12-02  7.282230       NaN  ...            NaN              NaN       NaN

[18031 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Celestia_TIA
NECESSARRRY AAAA START
1
1
2024-11-23
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
45  Celestia TIA  7.28223  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Bonk_BONK
[{'Date': datetime.date(2024, 12, 2), 'Price': 4e-05}]
success ya
UWAGA
db_BONKUSD
COINDBBB
             Date         Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01  0.000000e+00  ...                0       NaN
1      2023-01-02  1.000000e-06  ...                0       NaN
2      2023-01-03  1.000000e-06  ...                0       NaN
3      2023-01-04  3.000000e-06  ...                0       NaN
4      2023-01-05  3.000000e-06  ...                0       NaN
...           ...           ...  ...              ...       ...
15933  2024-11-27  4.382200e-05  ...                1  0.000032
15934  2024-11-28  4.290700e-05  ...                1  0.000032
15935  2024-11-29  4.665200e-05  ...                1  0.000033
15936  2024-11-30  4.488300e-05  ...                1  0.000033
15937  2024-12-01  4.609000e-05  ...                1  0.000034

[15938 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 4e-05}, {'Date': datetime.date(2024, 12, 2), 'Price': 4e-05}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date         Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01  0.000000e+00  ...              0.0       NaN
1      2023-01-02  1.000000e-06  ...              0.0       NaN
2      2023-01-03  1.000000e-06  ...              0.0       NaN
3      2023-01-04  3.000000e-06  ...              0.0       NaN
4      2023-01-05  3.000000e-06  ...              0.0       NaN
...           ...           ...  ...              ...       ...
15934  2024-11-28  4.290700e-05  ...              1.0  0.000032
15935  2024-11-29  4.665200e-05  ...              1.0  0.000033
15936  2024-11-30  4.488300e-05  ...              1.0  0.000033
15937  2024-12-01  4.609000e-05  ...              1.0  0.000034
15938  2024-12-02  4.000000e-05  ...              NaN       NaN

[15939 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Bonk_BONK
NECESSARRRY AAAA START
1
1
2024-11-07
2024-11-10
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
46  Bonk BONK  0.00004  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Monero_XMR
[{'Date': datetime.date(2024, 12, 2), 'Price': 167.622}]
success ya
UWAGA
db_XMRUSD
COINDBBB
           Date       Close  ...  Middle_Trend_Up       EMA56
0    2023-01-01  148.576935  ...                0         NaN
1    2023-01-02  147.943558  ...                0         NaN
2    2023-01-03  148.487930  ...                0         NaN
3    2023-01-04  150.743652  ...                0         NaN
4    2023-01-05  155.921738  ...                0         NaN
..          ...         ...  ...              ...         ...
556  2024-11-27  155.944000  ...                1  157.015287
557  2024-11-28  158.802000  ...                1  157.077979
558  2024-11-29  159.834000  ...                1  157.174681
559  2024-11-30  160.954000  ...                1  157.307289
560  2024-12-01  163.051000  ...                1  157.508823

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 167.622}, {'Date': datetime.date(2024, 12, 2), 'Price': 167.622}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date       Close  ...  Middle_Trend_Up       EMA56
0    2023-01-01  148.576935  ...              0.0         NaN
1    2023-01-02  147.943558  ...              0.0         NaN
2    2023-01-03  148.487930  ...              0.0         NaN
3    2023-01-04  150.743652  ...              0.0         NaN
4    2023-01-05  155.921738  ...              0.0         NaN
..          ...         ...  ...              ...         ...
557  2024-11-28  158.802000  ...              1.0  157.077979
558  2024-11-29  159.834000  ...              1.0  157.174681
559  2024-11-30  160.954000  ...              1.0  157.307289
560  2024-12-01  163.051000  ...              1.0  157.508823
561  2024-12-02  167.622000  ...              NaN         NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Monero_XMR
NECESSARRRY AAAA START
1
1
2024-05-18
2024-05-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
47  Monero XMR  167.622  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
dogwifhat_WIF
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.05272}]
success ya
UWAGA
db_WIFUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-12-19  0.146876       NaN  ...              0                0       NaN
1      2023-12-20  0.186058       NaN  ...              0                0       NaN
2      2023-12-21  0.280936       NaN  ...              0                0       NaN
3      2023-12-22  0.226059       NaN  ...              0                0       NaN
4      2023-12-23  0.234329       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
12222  2024-11-27  3.115400  3.085883  ...              1                1  2.766502
12223  2024-11-28  3.077900  3.085218  ...              1                1  2.777428
12224  2024-11-29  3.285000  3.101867  ...              1                1  2.795238
12225  2024-11-30  3.179300  3.108319  ...              1                1  2.808713
12226  2024-12-01  3.440000  3.135959  ...              1                1  2.830864

[12227 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.05272}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.05272}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-12-19  0.146876       NaN  ...            0.0              0.0       NaN
1      2023-12-20  0.186058       NaN  ...            0.0              0.0       NaN
2      2023-12-21  0.280936       NaN  ...            0.0              0.0       NaN
3      2023-12-22  0.226059       NaN  ...            0.0              0.0       NaN
4      2023-12-23  0.234329       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
12223  2024-11-28  3.077900  3.085218  ...            1.0              1.0  2.777428
12224  2024-11-29  3.285000  3.101867  ...            1.0              1.0  2.795238
12225  2024-11-30  3.179300  3.108319  ...            1.0              1.0  2.808713
12226  2024-12-01  3.440000  3.135959  ...            1.0              1.0  2.830864
12227  2024-12-02  3.052720       NaN  ...            NaN              NaN       NaN

[12228 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted dogwifhat_WIF
NECESSARRRY AAAA START
1
1
2024-09-27
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
48  dogwifhat WIF  3.05272  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Fantom_FTM
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.0821}]
success ya
UWAGA
db_FTMUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.200914       NaN  ...              0                0       NaN
1      2023-01-02  0.210303       NaN  ...              0                0       NaN
2      2023-01-03  0.214392       NaN  ...              0                0       NaN
3      2023-01-04  0.218658       NaN  ...              0                0       NaN
4      2023-01-05  0.216057       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28225  2024-11-27  1.044590  0.811581  ...              1                1  0.727069
28226  2024-11-28  0.993930  0.826777  ...              1                1  0.736433
28227  2024-11-29  1.032680  0.843935  ...              1                1  0.746827
28228  2024-11-30  1.046170  0.860788  ...              1                1  0.757331
28229  2024-12-01  1.096690  0.880447  ...              1                1  0.769238

[28230 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.0821}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.0821}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.200914       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.210303       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.214392       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.218658       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.216057       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28226  2024-11-28  0.993930  0.826777  ...            1.0              1.0  0.736433
28227  2024-11-29  1.032680  0.843935  ...            1.0              1.0  0.746827
28228  2024-11-30  1.046170  0.860788  ...            1.0              1.0  0.757331
28229  2024-12-01  1.096690  0.880447  ...            1.0              1.0  0.769238
28230  2024-12-02  1.082100       NaN  ...            NaN              NaN       NaN

[28231 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Fantom_FTM
NECESSARRRY AAAA START
1
1
2024-09-16
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name   Price  ...  middle_flip_date  long_flip_date
49  Fantom FTM  1.0821  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Optimism_OP
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.41476}]
success ya
UWAGA
db_OPUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.923119       NaN  ...              0                0       NaN
1      2023-01-02  0.957858       NaN  ...              0                0       NaN
2      2023-01-03  0.956446       NaN  ...              0                0       NaN
3      2023-01-04  1.029816       NaN  ...              0                0       NaN
4      2023-01-05  1.023539       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28225  2024-11-27  2.507000  1.929910  ...              1                1  1.771360
28226  2024-11-28  2.364000  1.966084  ...              1                1  1.792154
28227  2024-11-29  2.381000  2.000660  ...              1                1  1.812816
28228  2024-11-30  2.448000  2.037939  ...              1                1  1.835103
28229  2024-12-01  2.465000  2.073527  ...              1                1  1.857204

[28230 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.41476}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.41476}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.923119       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.957858       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.956446       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.029816       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.023539       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28226  2024-11-28  2.364000  1.966084  ...            1.0              1.0  1.792154
28227  2024-11-29  2.381000  2.000660  ...            1.0              1.0  1.812816
28228  2024-11-30  2.448000  2.037939  ...            1.0              1.0  1.835103
28229  2024-12-01  2.465000  2.073527  ...            1.0              1.0  1.857204
28230  2024-12-02  2.414760       NaN  ...            NaN              NaN       NaN

[28231 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Optimism_OP
NECESSARRRY AAAA START
1
1
2024-11-17
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
50  Optimism OP  2.41476  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Mantle_MNT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.8874}]
success ya
UWAGA
db_MNTUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.059564       NaN  ...       NaN              0                0
1      2023-01-02  0.036393       NaN  ...       NaN              0                0
2      2023-01-03  0.042807       NaN  ...       NaN              0                0
3      2023-01-04  0.058554       NaN  ...       NaN              0                0
4      2023-01-05  0.039136       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
15884  2024-11-27  0.877800  0.760433  ...  0.695706              1                1
15885  2024-11-28  0.868000  0.769397  ...  0.701751              1                1
15886  2024-11-29  0.876100  0.778289  ...  0.707869              1                1
15887  2024-11-30  0.902500  0.788640  ...  0.714698              1                1
15888  2024-12-01  0.928100  0.800261  ...  0.722186              1                1

[15889 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.8874}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.8874}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.059564       NaN  ...       NaN            0.0              0.0
1      2023-01-02  0.036393       NaN  ...       NaN            0.0              0.0
2      2023-01-03  0.042807       NaN  ...       NaN            0.0              0.0
3      2023-01-04  0.058554       NaN  ...       NaN            0.0              0.0
4      2023-01-05  0.039136       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
15885  2024-11-28  0.868000  0.769397  ...  0.701751            1.0              1.0
15886  2024-11-29  0.876100  0.778289  ...  0.707869            1.0              1.0
15887  2024-11-30  0.902500  0.788640  ...  0.714698            1.0              1.0
15888  2024-12-01  0.928100  0.800261  ...  0.722186            1.0              1.0
15889  2024-12-02  0.887400       NaN  ...       NaN            NaN              NaN

[15890 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Mantle_MNT
NECESSARRRY AAAA START
1
1
2024-11-09
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name   Price  ...  middle_flip_date  long_flip_date
51  Mantle MNT  0.8874  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Injective_INJ
[{'Date': datetime.date(2024, 12, 2), 'Price': 29.8165}]
success ya
UWAGA
db_INJUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   1.272642  ...                0        NaN
1      2023-01-02   1.298627  ...                0        NaN
2      2023-01-03   1.305031  ...                0        NaN
3      2023-01-04   1.356616  ...                0        NaN
4      2023-01-05   1.356616  ...                0        NaN
...           ...        ...  ...              ...        ...
28225  2024-11-27  29.782000  ...                1  23.054533
28226  2024-11-28  29.362000  ...                1  23.275847
28227  2024-11-29  30.293000  ...                1  23.522063
28228  2024-11-30  31.157000  ...                1  23.789956
28229  2024-12-01  29.972000  ...                1  24.006870

[28230 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 29.8165}, {'Date': datetime.date(2024, 12, 2), 'Price': 29.8165}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   1.272642  ...              0.0        NaN
1      2023-01-02   1.298627  ...              0.0        NaN
2      2023-01-03   1.305031  ...              0.0        NaN
3      2023-01-04   1.356616  ...              0.0        NaN
4      2023-01-05   1.356616  ...              0.0        NaN
...           ...        ...  ...              ...        ...
28226  2024-11-28  29.362000  ...              1.0  23.275847
28227  2024-11-29  30.293000  ...              1.0  23.522063
28228  2024-11-30  31.157000  ...              1.0  23.789956
28229  2024-12-01  29.972000  ...              1.0  24.006870
28230  2024-12-02  29.816500  ...              NaN        NaN

[28231 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Injective_INJ
NECESSARRRY AAAA START
1
1
2024-11-10
2024-11-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
52  Injective INJ  29.8165  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Theta_THETA
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.8381}]
success ya
UWAGA
db_THETAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.732688       NaN  ...              0                0       NaN
1      2023-01-02  0.750194       NaN  ...              0                0       NaN
2      2023-01-03  0.735962       NaN  ...              0                0       NaN
3      2023-01-04  0.751766       NaN  ...              0                0       NaN
4      2023-01-05  0.750146       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28225  2024-11-27  2.065400  1.637288  ...              1                1  1.458886
28226  2024-11-28  2.123300  1.677789  ...              1                1  1.482199
28227  2024-11-29  2.396900  1.737715  ...              1                1  1.514294
28228  2024-11-30  3.068600  1.848622  ...              1                1  1.568831
28229  2024-12-01  2.880300  1.934595  ...              1                1  1.614847

[28230 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.8381}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.8381}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.732688       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.750194       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.735962       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.751766       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.750146       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28226  2024-11-28  2.123300  1.677789  ...            1.0              1.0  1.482199
28227  2024-11-29  2.396900  1.737715  ...            1.0              1.0  1.514294
28228  2024-11-30  3.068600  1.848622  ...            1.0              1.0  1.568831
28229  2024-12-01  2.880300  1.934595  ...            1.0              1.0  1.614847
28230  2024-12-02  2.838100       NaN  ...            NaN              NaN       NaN

[28231 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Theta_THETA
NECESSARRRY AAAA START
1
1
2024-11-13
2024-11-18
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name   Price  ...  middle_flip_date  long_flip_date
53  Theta THETA  2.8381  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
The_Graph_GRT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.27996}]
success ya
UWAGA
db_GRTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2020-12-21  0.396103       NaN  ...              0                0       NaN
1    2020-12-28  0.296680       NaN  ...              0                0       NaN
2    2021-01-04  0.327720       NaN  ...              0                0       NaN
3    2021-01-11  0.516848       NaN  ...              0                0       NaN
4    2021-01-18  0.555875       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
682  2024-11-27  0.257470  0.231684  ...              0                0  0.248096
683  2024-11-28  0.270020  0.234879  ...              1                0  0.248865
684  2024-11-29  0.277820  0.238457  ...              1                0  0.249881
685  2024-11-30  0.293620  0.243054  ...              1                0  0.251416
686  2024-12-01  0.286450  0.246670  ...              1                0  0.252645

[687 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.27996}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.27996}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2020-12-21  0.396103       NaN  ...            0.0              0.0       NaN
1    2020-12-28  0.296680       NaN  ...            0.0              0.0       NaN
2    2021-01-04  0.327720       NaN  ...            0.0              0.0       NaN
3    2021-01-11  0.516848       NaN  ...            0.0              0.0       NaN
4    2021-01-18  0.555875       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
683  2024-11-28  0.270020  0.234879  ...            1.0              0.0  0.248865
684  2024-11-29  0.277820  0.238457  ...            1.0              0.0  0.249881
685  2024-11-30  0.293620  0.243054  ...            1.0              0.0  0.251416
686  2024-12-01  0.286450  0.246670  ...            1.0              0.0  0.252645
687  2024-12-02  0.279960       NaN  ...            NaN              NaN       NaN

[688 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted The_Graph_GRT
NECESSARRRY AAAA START
0
1
2024-06-08
2024-11-28
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
54  The Graph GRT  0.27996  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Sei_SEI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.61583}]
success ya
UWAGA
db_SEIUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-08-15  0.177638       NaN  ...              0                0       NaN
1    2023-08-16  0.214437       NaN  ...              0                0       NaN
2    2023-08-17  0.172745       NaN  ...              0                0       NaN
3    2023-08-18  0.166586       NaN  ...              0                0       NaN
4    2023-08-19  0.160359       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
327  2024-11-27  0.697130  0.499671  ...              1                1  0.492093
328  2024-11-28  0.653230  0.512468  ...              1                1  0.497747
329  2024-11-29  0.672570  0.525810  ...              1                1  0.503881
330  2024-11-30  0.675290  0.538267  ...              1                1  0.509895
331  2024-12-01  0.651860  0.547733  ...              1                1  0.514876

[332 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.61583}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.61583}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-08-15  0.177638       NaN  ...            0.0              0.0       NaN
1    2023-08-16  0.214437       NaN  ...            0.0              0.0       NaN
2    2023-08-17  0.172745       NaN  ...            0.0              0.0       NaN
3    2023-08-18  0.166586       NaN  ...            0.0              0.0       NaN
4    2023-08-19  0.160359       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
328  2024-11-28  0.653230  0.512468  ...            1.0              1.0  0.497747
329  2024-11-29  0.672570  0.525810  ...            1.0              1.0  0.503881
330  2024-11-30  0.675290  0.538267  ...            1.0              1.0  0.509895
331  2024-12-01  0.651860  0.547733  ...            1.0              1.0  0.514876
332  2024-12-02  0.615830       NaN  ...            NaN              NaN       NaN

[333 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Sei_SEI
NECESSARRRY AAAA START
1
0
2024-11-27
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
       Name    Price  ...  middle_flip_date  long_flip_date
55  Sei SEI  0.61583  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ethena_ENA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.81067}]
success ya
UWAGA
db_ENAUSD
COINDBBB
           Date    Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-04-02  0.77400       NaN  ...             0                0       NaN
1    2024-04-03  1.13360       NaN  ...             0                0       NaN
2    2024-04-04  0.97150       NaN  ...             0                0       NaN
3    2024-04-05  1.01940       NaN  ...             0                0       NaN
4    2024-04-06  1.08870       NaN  ...             0                0       NaN
..          ...      ...       ...  ...           ...              ...       ...
292  2024-11-27  0.70824  0.615390  ...             0                0  0.692990
293  2024-11-28  0.70203  0.622610  ...             0                0  0.693307
294  2024-11-29  0.77213  0.635070  ...             0                0  0.696073
295  2024-11-30  0.82078  0.650546  ...             0                0  0.700449
296  2024-12-01  0.81926  0.664606  ...             0                0  0.704618

[297 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.81067}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.81067}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-04-02  0.77400       NaN  ...           0.0              0.0       NaN
1    2024-04-03  1.13360       NaN  ...           0.0              0.0       NaN
2    2024-04-04  0.97150       NaN  ...           0.0              0.0       NaN
3    2024-04-05  1.01940       NaN  ...           0.0              0.0       NaN
4    2024-04-06  1.08870       NaN  ...           0.0              0.0       NaN
..          ...      ...       ...  ...           ...              ...       ...
293  2024-11-28  0.70203  0.622610  ...           0.0              0.0  0.693307
294  2024-11-29  0.77213  0.635070  ...           0.0              0.0  0.696073
295  2024-11-30  0.82078  0.650546  ...           0.0              0.0  0.700449
296  2024-12-01  0.81926  0.664606  ...           0.0              0.0  0.704618
297  2024-12-02  0.81067       NaN  ...           NaN              NaN       NaN

[298 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Ethena_ENA
NECESSARRRY AAAA START
0
0
2024-04-26
2024-06-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
56  Ethena ENA  0.81067  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Worldcoin_WLD
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.14167}]
success ya
UWAGA
db_WLDUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.010175       NaN  ...              0                0       NaN
1      2023-01-02  0.010772       NaN  ...              0                0       NaN
2      2023-01-03  0.010806       NaN  ...              0                0       NaN
3      2023-01-04  0.010530       NaN  ...              0                0       NaN
4      2023-01-05  0.010911       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
23387  2024-11-27  2.551200  2.280015  ...              1                1  2.138634
23388  2024-11-28  2.945200  2.335447  ...              1                1  2.166935
23389  2024-11-29  2.922500  2.384368  ...              1                1  2.193446
23390  2024-11-30  3.637700  2.488812  ...              1                1  2.244121
23391  2024-12-01  3.401600  2.564878  ...              1                1  2.284735

[23392 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.14167}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.14167}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.010175       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.010772       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.010806       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.010530       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.010911       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
23388  2024-11-28  2.945200  2.335447  ...            1.0              1.0  2.166935
23389  2024-11-29  2.922500  2.384368  ...            1.0              1.0  2.193446
23390  2024-11-30  3.637700  2.488812  ...            1.0              1.0  2.244121
23391  2024-12-01  3.401600  2.564878  ...            1.0              1.0  2.284735
23392  2024-12-02  3.141670       NaN  ...            NaN              NaN       NaN

[23393 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Worldcoin_WLD
NECESSARRRY AAAA START
1
1
2024-10-12
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
57  Worldcoin WLD  3.14167  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Kaia_KAIA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.37833}]
success ya
UWAGA
db_KAIAUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_KAIAUSD': no such table: db_KAIAUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Bitget_Token_BGB
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.57398}]
success ya
UWAGA
db_BGBUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.181385  ...              0                0
1    2023-01-02 00:00:00    0.181331  ...              0                0
2    2023-01-03 00:00:00    0.181959  ...              0                0
3    2023-01-04 00:00:00    0.188579  ...              0                0
4    2023-01-05 00:00:00    0.190357  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  117.984000  ...              1                1
469           2024-04-14  119.889000  ...              1                1
470           2024-04-15  116.785000  ...              1                1
471           2024-04-16   11.923000  ...              1                1
472           2024-04-17    1.257970  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 1.10145}, {'Date': datetime.date(2024, 5, 10), 'Price': 1.07401}, {'Date': datetime.date(2024, 5, 11), 'Price': 1.08452}, {'Date': datetime.date(2024, 5, 12), 'Price': 1.09309}, {'Date': datetime.date(2024, 5, 13), 'Price': 1.07138}, {'Date': datetime.date(2024, 5, 14), 'Price': 1.04491}, {'Date': datetime.date(2024, 5, 15), 'Price': 1.09124}, {'Date': datetime.date(2024, 5, 16), 'Price': 1.07302}, {'Date': datetime.date(2024, 5, 17), 'Price': 1.08755}, {'Date': datetime.date(2024, 5, 18), 'Price': 1.08968}, {'Date': datetime.date(2024, 5, 19), 'Price': 1.08349}, {'Date': datetime.date(2024, 5, 20), 'Price': 1.14028}, {'Date': datetime.date(2024, 5, 21), 'Price': 1.12261}, {'Date': datetime.date(2024, 5, 22), 'Price': 1.11989}, {'Date': datetime.date(2024, 5, 23), 'Price': 1.09101}, {'Date': datetime.date(2024, 5, 24), 'Price': 1.11047}, {'Date': datetime.date(2024, 5, 25), 'Price': 1.12901}, {'Date': datetime.date(2024, 5, 26), 'Price': 1.11903}, {'Date': datetime.date(2024, 5, 27), 'Price': 1.19155}, {'Date': datetime.date(2024, 5, 28), 'Price': 1.24996}, {'Date': datetime.date(2024, 5, 29), 'Price': 1.32618}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.37365}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.39459}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.43718}, {'Date': datetime.date(2024, 6, 2), 'Price': 1.3601}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.31259}, {'Date': datetime.date(2024, 6, 4), 'Price': 1.33349}, {'Date': datetime.date(2024, 6, 5), 'Price': 1.32355}, {'Date': datetime.date(2024, 6, 6), 'Price': 1.19176}, {'Date': datetime.date(2024, 6, 7), 'Price': 1.17508}, {'Date': datetime.date(2024, 6, 8), 'Price': 1.15915}, {'Date': datetime.date(2024, 6, 9), 'Price': 1.1898}, {'Date': datetime.date(2024, 6, 10), 'Price': 1.17169}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.15099}, {'Date': datetime.date(2024, 6, 12), 'Price': 1.17255}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.16522}, {'Date': datetime.date(2024, 6, 14), 'Price': 1.1486}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.15055}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.15242}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.13915}, {'Date': datetime.date(2024, 6, 18), 'Price': 1.14237}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.14944}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.1354}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.14211}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.14428}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.13591}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.07454}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.11154}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.10059}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.15944}, {'Date': datetime.date(2024, 6, 28), 'Price': 1.139}, {'Date': datetime.date(2024, 6, 29), 'Price': 1.14067}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.14795}, {'Date': datetime.date(2024, 7, 1), 'Price': 1.19791}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.38157}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.36713}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.36086}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.34103}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.4157}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.48827}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.58693}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.57216}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.62161}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.56901}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.6327}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.59932}, {'Date': datetime.date(2024, 11, 29), 'Price': 1.6319}, {'Date': datetime.date(2024, 11, 30), 'Price': 1.6291}, {'Date': datetime.date(2024, 12, 1), 'Price': 1.62239}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.57398}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.57398}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
FLOKI_FLOKI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00022}]
success ya
UWAGA
db_FLOKIUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000008       NaN  ...              0                0       NaN
1      2023-01-02  0.000008       NaN  ...              0                0       NaN
2      2023-01-03  0.000008       NaN  ...              0                0       NaN
3      2023-01-04  0.000008       NaN  ...              0                0       NaN
4      2023-01-05  0.000008       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28225  2024-11-27  0.000226  0.000215  ...              1                1  0.000185
28226  2024-11-28  0.000222  0.000216  ...              1                1  0.000186
28227  2024-11-29  0.000231  0.000217  ...              1                1  0.000187
28228  2024-11-30  0.000230  0.000218  ...              1                1  0.000189
28229  2024-12-01  0.000237  0.000220  ...              1                1  0.000191

[28230 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00022}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00022}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000008       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.000008       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.000008       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.000008       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.000008       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28226  2024-11-28  0.000222  0.000216  ...            1.0              1.0  0.000186
28227  2024-11-29  0.000231  0.000217  ...            1.0              1.0  0.000187
28228  2024-11-30  0.000230  0.000218  ...            1.0              1.0  0.000189
28229  2024-12-01  0.000237  0.000220  ...            1.0              1.0  0.000191
28230  2024-12-02  0.000220       NaN  ...            NaN              NaN       NaN

[28231 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted FLOKI_FLOKI
NECESSARRRY AAAA START
1
1
2024-11-10
2024-11-10
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
60  FLOKI FLOKI  0.00022  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
THORChain_RUNE
[{'Date': datetime.date(2024, 12, 2), 'Price': 6.03209}]
success ya
UWAGA
db_RUNEUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.285871       NaN  ...              0                0       NaN
1      2023-01-02  1.315161       NaN  ...              0                0       NaN
2      2023-01-03  1.322248       NaN  ...              0                0       NaN
3      2023-01-04  1.354845       NaN  ...              0                0       NaN
4      2023-01-05  1.346350       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28225  2024-11-27  5.581600  5.451175  ...              1                1  5.251965
28226  2024-11-28  5.589200  5.462677  ...              1                1  5.263797
28227  2024-11-29  6.173200  5.521887  ...              1                1  5.295706
28228  2024-11-30  6.177600  5.576530  ...              1                1  5.326650
28229  2024-12-01  6.063800  5.617136  ...              1                1  5.352515

[28230 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 6.03209}, {'Date': datetime.date(2024, 12, 2), 'Price': 6.03209}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.285871       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.315161       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.322248       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.354845       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.346350       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
28226  2024-11-28  5.589200  5.462677  ...            1.0              1.0  5.263797
28227  2024-11-29  6.173200  5.521887  ...            1.0              1.0  5.295706
28228  2024-11-30  6.177600  5.576530  ...            1.0              1.0  5.326650
28229  2024-12-01  6.063800  5.617136  ...            1.0              1.0  5.352515
28230  2024-12-02  6.032090       NaN  ...            NaN              NaN       NaN

[28231 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted THORChain_RUNE
NECESSARRRY AAAA START
1
1
2024-09-20
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
61  THORChain RUNE  6.03209  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Brett_BRETT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.19666}]
success ya
UWAGA
db_BRETTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BRETTUSD': no such table: db_BRETTUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Flare_FLR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03365}]
success ya
UWAGA
db_FLRUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-10  0.041255       NaN  ...              0                0       NaN
1    2023-01-11  0.045597       NaN  ...              0                0       NaN
2    2023-01-12  0.044011       NaN  ...              0                0       NaN
3    2023-01-13  0.042768       NaN  ...              0                0       NaN
4    2023-01-14  0.043491       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
547  2024-11-27  0.023160  0.023098  ...              0                0  0.025323
548  2024-11-28  0.023120  0.023100  ...              0                0  0.025246
549  2024-11-29  0.024680  0.023232  ...              0                0  0.025226
550  2024-11-30  0.027840  0.023616  ...              0                0  0.025318
551  2024-12-01  0.028530  0.024025  ...              0                0  0.025430

[552 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03365}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.03365}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-10  0.041255       NaN  ...            0.0              0.0       NaN
1    2023-01-11  0.045597       NaN  ...            0.0              0.0       NaN
2    2023-01-12  0.044011       NaN  ...            0.0              0.0       NaN
3    2023-01-13  0.042768       NaN  ...            0.0              0.0       NaN
4    2023-01-14  0.043491       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
548  2024-11-28  0.023120  0.023100  ...            0.0              0.0  0.025246
549  2024-11-29  0.024680  0.023232  ...            0.0              0.0  0.025226
550  2024-11-30  0.027840  0.023616  ...            0.0              0.0  0.025318
551  2024-12-01  0.028530  0.024025  ...            0.0              0.0  0.025430
552  2024-12-02  0.033650       NaN  ...            NaN              NaN       NaN

[553 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Flare_FLR
NECESSARRRY AAAA START
0
1
2024-04-19
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
64  Flare FLR  0.03365  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Pyth_Network_PYTH
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.48016}]
success ya
UWAGA
db_PYTHUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-11-20  0.280911       NaN  ...              0                0       NaN
1      2023-11-21  0.301283       NaN  ...              0                0       NaN
2      2023-11-22  0.423444       NaN  ...              0                0       NaN
3      2023-11-23  0.492748       NaN  ...              0                0       NaN
4      2023-11-24  0.479985       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
16322  2024-11-27  0.472830  0.414701  ...              1                1  0.383554
16323  2024-11-28  0.478420  0.420011  ...              1                1  0.386883
16324  2024-11-29  0.483750  0.425323  ...              1                1  0.390282
16325  2024-11-30  0.495890  0.431203  ...              1                1  0.393987
16326  2024-12-01  0.507310  0.437546  ...              1                1  0.397963

[16327 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.48016}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.48016}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-11-20  0.280911       NaN  ...            0.0              0.0       NaN
1      2023-11-21  0.301283       NaN  ...            0.0              0.0       NaN
2      2023-11-22  0.423444       NaN  ...            0.0              0.0       NaN
3      2023-11-23  0.492748       NaN  ...            0.0              0.0       NaN
4      2023-11-24  0.479985       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
16323  2024-11-28  0.478420  0.420011  ...            1.0              1.0  0.386883
16324  2024-11-29  0.483750  0.425323  ...            1.0              1.0  0.390282
16325  2024-11-30  0.495890  0.431203  ...            1.0              1.0  0.393987
16326  2024-12-01  0.507310  0.437546  ...            1.0              1.0  0.397963
16327  2024-12-02  0.480160       NaN  ...            NaN              NaN       NaN

[16328 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Pyth_Network_PYTH
NECESSARRRY AAAA START
1
1
2024-09-25
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name    Price  ...  middle_flip_date  long_flip_date
65  Pyth Network PYTH  0.48016  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ondo_ONDO
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.24272}]
success ya
UWAGA
db_ONDOUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-01-18  0.221159       NaN  ...              0                0       NaN
1    2024-01-19  0.199556       NaN  ...              0                0       NaN
2    2024-01-20  0.205522       NaN  ...              0                0       NaN
3    2024-01-21  0.281576       NaN  ...              0                0       NaN
4    2024-01-22  0.244015       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
283  2024-11-27  1.067150  1.075812  ...              1                0  1.078046
284  2024-11-28  1.090130  1.077005  ...              1                0  1.078470
285  2024-11-29  1.153580  1.083386  ...              1                1  1.081105
286  2024-11-30  1.240720  1.096497  ...              1                1  1.086706
287  2024-12-01  1.237560  1.108252  ...              1                1  1.091999

[288 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.24272}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.24272}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-01-18  0.221159       NaN  ...            0.0              0.0       NaN
1    2024-01-19  0.199556       NaN  ...            0.0              0.0       NaN
2    2024-01-20  0.205522       NaN  ...            0.0              0.0       NaN
3    2024-01-21  0.281576       NaN  ...            0.0              0.0       NaN
4    2024-01-22  0.244015       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
284  2024-11-28  1.090130  1.077005  ...            1.0              0.0  1.078470
285  2024-11-29  1.153580  1.083386  ...            1.0              1.0  1.081105
286  2024-11-30  1.240720  1.096497  ...            1.0              1.0  1.086706
287  2024-12-01  1.237560  1.108252  ...            1.0              1.0  1.091999
288  2024-12-02  1.242720       NaN  ...            NaN              NaN       NaN

[289 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Ondo_ONDO
NECESSARRRY AAAA START
1
1
2024-11-29
2024-04-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
66  Ondo ONDO  1.24272  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
EOS_EOS
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.12156}]
success ya
UWAGA
db_EOSUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.878446       NaN  ...              0                0       NaN
1      2023-01-02  0.881972       NaN  ...              0                0       NaN
2      2023-01-03  0.880312       NaN  ...              0                0       NaN
3      2023-01-04  0.907221       NaN  ...              0                0       NaN
4      2023-01-05  0.891435       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
26356  2024-11-27  0.829800  0.660268  ...              1                1  0.576695
26357  2024-11-28  0.814400  0.673112  ...              1                1  0.585036
26358  2024-11-29  0.953400  0.696469  ...              1                1  0.597961
26359  2024-11-30  0.939200  0.716697  ...              1                1  0.609934
26360  2024-12-01  1.103200  0.748905  ...              1                1  0.627241

[26361 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.12156}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.12156}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.878446       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.881972       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.880312       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.907221       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.891435       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
26357  2024-11-28  0.814400  0.673112  ...            1.0              1.0  0.585036
26358  2024-11-29  0.953400  0.696469  ...            1.0              1.0  0.597961
26359  2024-11-30  0.939200  0.716697  ...            1.0              1.0  0.609934
26360  2024-12-01  1.103200  0.748905  ...            1.0              1.0  0.627241
26361  2024-12-02  1.121560       NaN  ...            NaN              NaN       NaN

[26362 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted EOS_EOS
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-15
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
       Name    Price  ...  middle_flip_date  long_flip_date
67  EOS EOS  1.12156  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Maker_MKR
[{'Date': datetime.date(2024, 12, 2), 'Price': 1938.52}]
success ya
UWAGA
db_MKRUSD
COINDBBB
           Date        Close  ...  Middle_Trend_Up        EMA56
0    2023-01-01   513.018738  ...                0          NaN
1    2023-01-02   511.666565  ...                0          NaN
2    2023-01-03   505.035248  ...                0          NaN
3    2023-01-04   518.818054  ...                0          NaN
4    2023-01-05   527.282593  ...                0          NaN
..          ...          ...  ...              ...          ...
556  2024-11-27  1820.910000  ...                0  2273.420140
557  2024-11-28  1802.960000  ...                0  2256.912766
558  2024-11-29  1804.010000  ...                0  2241.021441
559  2024-11-30  1853.770000  ...                0  2227.433671
560  2024-12-01  1830.110000  ...                0  2213.492490

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1938.52}, {'Date': datetime.date(2024, 12, 2), 'Price': 1938.52}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date        Close  ...  Middle_Trend_Up        EMA56
0    2023-01-01   513.018738  ...              0.0          NaN
1    2023-01-02   511.666565  ...              0.0          NaN
2    2023-01-03   505.035248  ...              0.0          NaN
3    2023-01-04   518.818054  ...              0.0          NaN
4    2023-01-05   527.282593  ...              0.0          NaN
..          ...          ...  ...              ...          ...
557  2024-11-28  1802.960000  ...              0.0  2256.912766
558  2024-11-29  1804.010000  ...              0.0  2241.021441
559  2024-11-30  1853.770000  ...              0.0  2227.433671
560  2024-12-01  1830.110000  ...              0.0  2213.492490
561  2024-12-02  1938.520000  ...              NaN          NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Maker_MKR
NECESSARRRY AAAA START
0
0
2024-05-10
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
68  Maker MKR  1938.52  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Tezos_XTZ
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.63869}]
success ya
UWAGA
db_XTZUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.719059       NaN  ...              0                0       NaN
1      2023-01-02  0.739795       NaN  ...              0                0       NaN
2      2023-01-03  0.753744       NaN  ...              0                0       NaN
3      2023-01-04  0.766990       NaN  ...              0                0       NaN
4      2023-01-05  0.761851       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27561  2024-11-27  1.270000  0.989690  ...              1                1  0.837235
27562  2024-11-28  1.278000  1.013716  ...              1                1  0.852700
27563  2024-11-29  1.365000  1.042989  ...              1                1  0.870676
27564  2024-11-30  1.671000  1.095324  ...              1                1  0.898757
27565  2024-12-01  1.663000  1.142630  ...              1                1  0.925573

[27566 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.63869}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.63869}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.719059       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.739795       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.753744       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.766990       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.761851       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27562  2024-11-28  1.278000  1.013716  ...            1.0              1.0  0.852700
27563  2024-11-29  1.365000  1.042989  ...            1.0              1.0  0.870676
27564  2024-11-30  1.671000  1.095324  ...            1.0              1.0  0.898757
27565  2024-12-01  1.663000  1.142630  ...            1.0              1.0  0.925573
27566  2024-12-02  1.638690       NaN  ...            NaN              NaN       NaN

[27567 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Tezos_XTZ
NECESSARRRY AAAA START
1
1
2024-11-13
2024-11-16
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
69  Tezos XTZ  1.63869  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Quant_QNT
[{'Date': datetime.date(2024, 12, 2), 'Price': 134.772}]
success ya
UWAGA
db_QNTUSD
COINDBBB
             Date       Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  105.788002  ...                0        NaN
1      2023-01-02  108.634315  ...                0        NaN
2      2023-01-03  107.493767  ...                0        NaN
3      2023-01-04  111.766907  ...                0        NaN
4      2023-01-05  110.715652  ...                0        NaN
...           ...         ...  ...              ...        ...
28225  2024-11-27   95.994000  ...                1  74.269851
28226  2024-11-28   94.312000  ...                1  74.973084
28227  2024-11-29   97.844000  ...                1  75.775573
28228  2024-11-30   99.242000  ...                1  76.598956
28229  2024-12-01  110.509000  ...                1  77.788782

[28230 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 134.772}, {'Date': datetime.date(2024, 12, 2), 'Price': 134.772}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date       Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  105.788002  ...              0.0        NaN
1      2023-01-02  108.634315  ...              0.0        NaN
2      2023-01-03  107.493767  ...              0.0        NaN
3      2023-01-04  111.766907  ...              0.0        NaN
4      2023-01-05  110.715652  ...              0.0        NaN
...           ...         ...  ...              ...        ...
28226  2024-11-28   94.312000  ...              1.0  74.973084
28227  2024-11-29   97.844000  ...              1.0  75.775573
28228  2024-11-30   99.242000  ...              1.0  76.598956
28229  2024-12-01  110.509000  ...              1.0  77.788782
28230  2024-12-02  134.772000  ...              NaN        NaN

[28231 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Quant_QNT
NECESSARRRY AAAA START
1
1
2024-11-17
2024-11-16
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
70  Quant QNT  134.772  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Arweave_AR
[{'Date': datetime.date(2024, 12, 2), 'Price': 24.3589}]
success ya
UWAGA
db_ARUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   6.359250  ...                0        NaN
1      2023-01-02   6.643534  ...                0        NaN
2      2023-01-03   6.695787  ...                0        NaN
3      2023-01-04   6.930753  ...                0        NaN
4      2023-01-05   6.626417  ...                0        NaN
...           ...        ...  ...              ...        ...
28225  2024-11-27  21.294000  ...                1  18.816402
28226  2024-11-28  21.515000  ...                1  18.911089
28227  2024-11-29  22.234000  ...                1  19.027683
28228  2024-11-30  25.695000  ...                1  19.261624
28229  2024-12-01  25.150000  ...                1  19.468233

[28230 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 24.3589}, {'Date': datetime.date(2024, 12, 2), 'Price': 24.3589}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   6.359250  ...              0.0        NaN
1      2023-01-02   6.643534  ...              0.0        NaN
2      2023-01-03   6.695787  ...              0.0        NaN
3      2023-01-04   6.930753  ...              0.0        NaN
4      2023-01-05   6.626417  ...              0.0        NaN
...           ...        ...  ...              ...        ...
28226  2024-11-28  21.515000  ...              1.0  18.911089
28227  2024-11-29  22.234000  ...              1.0  19.027683
28228  2024-11-30  25.695000  ...              1.0  19.261624
28229  2024-12-01  25.150000  ...              1.0  19.468233
28230  2024-12-02  24.358900  ...              NaN        NaN

[28231 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Arweave_AR
NECESSARRRY AAAA START
1
1
2024-11-27
2024-11-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
71  Arweave AR  24.3589  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Flow_FLOW
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.03265}]
success ya
UWAGA
db_FLOWUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.656901       NaN  ...              0                0       NaN
1      2023-01-02  0.666574       NaN  ...              0                0       NaN
2      2023-01-03  0.722129       NaN  ...              0                0       NaN
3      2023-01-04  0.727102       NaN  ...              0                0       NaN
4      2023-01-05  0.706594       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.907600  0.721784  ...              1                1  0.639107
27963  2024-11-28  0.883500  0.735260  ...              1                1  0.647682
27964  2024-11-29  0.988800  0.756389  ...              1                1  0.659651
27965  2024-11-30  0.987300  0.775631  ...              1                1  0.671147
27966  2024-12-01  1.015500  0.795620  ...              1                1  0.683230

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.03265}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.03265}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.656901       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.666574       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.722129       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.727102       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.706594       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.883500  0.735260  ...            1.0              1.0  0.647682
27964  2024-11-29  0.988800  0.756389  ...            1.0              1.0  0.659651
27965  2024-11-30  0.987300  0.775631  ...            1.0              1.0  0.671147
27966  2024-12-01  1.015500  0.795620  ...            1.0              1.0  0.683230
27967  2024-12-02  1.032650       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Flow_FLOW
NECESSARRRY AAAA START
1
1
2024-11-13
2024-11-16
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
72  Flow FLOW  1.03265  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Lido_DAO_LDO
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.7771}]
success ya
UWAGA
db_LDOUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  1.59600       NaN  ...       NaN              0                0
1    2023-10-15  1.60550       NaN  ...       NaN              0                0
2    2023-10-16  1.59860       NaN  ...       NaN              0                0
3    2023-10-17  1.54650       NaN  ...       NaN              0                0
4    2023-10-18  1.49320       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
410  2024-11-27  1.71137  1.311174  ...  1.468446              1                1
411  2024-11-28  1.67647  1.341616  ...  1.467920              1                1
412  2024-11-29  1.74981  1.375632  ...  1.468352              1                1
413  2024-11-30  1.80963  1.411798  ...  1.469381              1                1
414  2024-12-01  1.76893  1.441559  ...  1.469916              1                1

[415 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.7771}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.7771}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  1.59600       NaN  ...       NaN            0.0              0.0
1    2023-10-15  1.60550       NaN  ...       NaN            0.0              0.0
2    2023-10-16  1.59860       NaN  ...       NaN            0.0              0.0
3    2023-10-17  1.54650       NaN  ...       NaN            0.0              0.0
4    2023-10-18  1.49320       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
411  2024-11-28  1.67647  1.341616  ...  1.467920            1.0              1.0
412  2024-11-29  1.74981  1.375632  ...  1.468352            1.0              1.0
413  2024-11-30  1.80963  1.411798  ...  1.469381            1.0              1.0
414  2024-12-01  1.76893  1.441559  ...  1.469916            1.0              1.0
415  2024-12-02  1.77710       NaN  ...       NaN            NaN              NaN

[416 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Lido_DAO_LDO
NECESSARRRY AAAA START
1
1
2024-11-10
2024-11-25
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name   Price  ...  middle_flip_date  long_flip_date
73  Lido DAO LDO  1.7771  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Gala_GALA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04336}]
success ya
UWAGA
db_GALAUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.016857       NaN  ...              0                0       NaN
1    2023-01-02  0.017663       NaN  ...              0                0       NaN
2    2023-01-03  0.017620       NaN  ...              0                0       NaN
3    2023-01-04  0.017898       NaN  ...              0                0       NaN
4    2023-01-05  0.018042       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
482  2024-05-01  0.042150  0.047836  ...              1                0  0.049143
483  2024-05-02  0.043030  0.047435  ...              1                0  0.048928
484  2024-05-03  0.045360  0.047263  ...              1                0  0.048803
485  2024-05-04  0.045130  0.047085  ...              1                0  0.048674
486  2024-05-05  0.046410  0.047029  ...              1                0  0.048595

[487 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.0438}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.042}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.04298}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.0417}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.04103}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.03946}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.04328}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.04412}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.04554}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.04569}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.04296}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.04296}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.04292}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.04587}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.04381}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.04354}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.04479}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.04392}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.04532}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.04589}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.04366}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.04275}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.04343}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.04302}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.04668}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.0445}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.04557}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.04681}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.045}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.03991}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.03802}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.03876}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.03753}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.03486}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.03533}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.03414}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.03206}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.03294}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.03298}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.03065}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.02629}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.028}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.02819}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.0282}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.02852}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.02753}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.02685}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.02889}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.02812}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.02809}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.02699}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.02666}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.02721}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.02761}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.0282}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.03015}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.02993}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.02745}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.02869}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.02836}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.03394}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.03566}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.03738}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.03622}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.03737}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.03897}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.03917}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.04465}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.04332}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.04336}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.04336}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
The_Sandbox_SAND
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.64376}]
success ya
UWAGA
db_SANDUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.388776       NaN  ...              0                0       NaN
1    2023-01-02  0.409328       NaN  ...              0                0       NaN
2    2023-01-03  0.418215       NaN  ...              0                0       NaN
3    2023-01-04  0.433060       NaN  ...              0                0       NaN
4    2023-01-05  0.425547       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.613470  0.437833  ...              1                1  0.424728
556  2024-11-28  0.601740  0.451492  ...              1                1  0.430939
557  2024-11-29  0.645680  0.467674  ...              1                1  0.438474
558  2024-11-30  0.673140  0.484796  ...              1                1  0.446708
559  2024-12-01  0.661180  0.499495  ...              1                1  0.454233

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.64376}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.64376}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.388776       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.409328       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.418215       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.433060       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.425547       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.601740  0.451492  ...            1.0              1.0  0.430939
557  2024-11-29  0.645680  0.467674  ...            1.0              1.0  0.438474
558  2024-11-30  0.673140  0.484796  ...            1.0              1.0  0.446708
559  2024-12-01  0.661180  0.499495  ...            1.0              1.0  0.454233
560  2024-12-02  0.643760       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted The_Sandbox_SAND
NECESSARRRY AAAA START
1
1
2024-11-26
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
75  The Sandbox SAND  0.64376  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Jupiter_JUP
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.15214}]
success ya
UWAGA
db_JUPUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.004335       NaN  ...              0                0       NaN
1      2023-01-02  0.004812       NaN  ...              0                0       NaN
2      2023-01-03  0.004668       NaN  ...              0                0       NaN
3      2023-01-04  0.004804       NaN  ...              0                0       NaN
4      2023-01-05  0.004862       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
11677  2024-11-27  1.118500  1.092067  ...              1                1  1.017797
11678  2024-11-28  1.132100  1.095403  ...              1                1  1.021808
11679  2024-11-29  1.149500  1.099911  ...              1                1  1.026288
11680  2024-11-30  1.158200  1.104768  ...              1                1  1.030917
11681  2024-12-01  1.250400  1.116904  ...              1                1  1.038618

[11682 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.15214}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.15214}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.004335       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.004812       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.004668       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.004804       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.004862       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
11678  2024-11-28  1.132100  1.095403  ...            1.0              1.0  1.021808
11679  2024-11-29  1.149500  1.099911  ...            1.0              1.0  1.026288
11680  2024-11-30  1.158200  1.104768  ...            1.0              1.0  1.030917
11681  2024-12-01  1.250400  1.116904  ...            1.0              1.0  1.038618
11682  2024-12-02  1.152140       NaN  ...            NaN              NaN       NaN

[11683 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Jupiter_JUP
NECESSARRRY AAAA START
1
1
2024-10-18
2024-11-05
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
76  Jupiter JUP  1.15214  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
StarkNet_Token_STRK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.67943}]
success ya
UWAGA
db_STRKUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   9.006195  ...                0       NaN
1      2023-01-02   8.953543  ...                0       NaN
2      2023-01-03   9.173886  ...                0       NaN
3      2023-01-04   9.190893  ...                0       NaN
4      2023-01-05  10.038744  ...                0       NaN
...           ...        ...  ...              ...       ...
10297  2024-11-27   0.637900  ...                1  0.459631
10298  2024-11-28   0.630170  ...                1  0.465615
10299  2024-11-29   0.627170  ...                1  0.471283
10300  2024-11-30   0.712890  ...                1  0.479761
10301  2024-12-01   0.711490  ...                1  0.487892

[10302 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.67943}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.67943}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   9.006195  ...              0.0       NaN
1      2023-01-02   8.953543  ...              0.0       NaN
2      2023-01-03   9.173886  ...              0.0       NaN
3      2023-01-04   9.190893  ...              0.0       NaN
4      2023-01-05  10.038744  ...              0.0       NaN
...           ...        ...  ...              ...       ...
10298  2024-11-28   0.630170  ...              1.0  0.465615
10299  2024-11-29   0.627170  ...              1.0  0.471283
10300  2024-11-30   0.712890  ...              1.0  0.479761
10301  2024-12-01   0.711490  ...              1.0  0.487892
10302  2024-12-02   0.679430  ...              NaN       NaN

[10303 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted StarkNet_Token_STRK
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name    Price  ...  middle_flip_date  long_flip_date
77  StarkNet Token STRK  0.67943  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
KuCoin_Token_KCS
[{'Date': datetime.date(2024, 12, 2), 'Price': 12.3287}]
success ya
UWAGA
db_KCSUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   6.540987  ...                0        NaN
1      2023-01-02   6.569468  ...                0        NaN
2      2023-01-03   6.639662  ...                0        NaN
3      2023-01-04   6.719883  ...                0        NaN
4      2023-01-05   6.636429  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  11.756000  ...                1   9.899811
27963  2024-11-28  11.591000  ...                1   9.959151
27964  2024-11-29  11.839000  ...                1  10.025110
27965  2024-11-30  12.083000  ...                1  10.097317
27966  2024-12-01  12.570000  ...                1  10.184078

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 12.3287}, {'Date': datetime.date(2024, 12, 2), 'Price': 12.3287}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   6.540987  ...              0.0        NaN
1      2023-01-02   6.569468  ...              0.0        NaN
2      2023-01-03   6.639662  ...              0.0        NaN
3      2023-01-04   6.719883  ...              0.0        NaN
4      2023-01-05   6.636429  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  11.591000  ...              1.0   9.959151
27964  2024-11-29  11.839000  ...              1.0  10.025110
27965  2024-11-30  12.083000  ...              1.0  10.097317
27966  2024-12-01  12.570000  ...              1.0  10.184078
27967  2024-12-02  12.328700  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted KuCoin_Token_KCS
NECESSARRRY AAAA START
1
1
2024-10-18
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
78  KuCoin Token KCS  12.3287  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
JasmyCoin_JASMY
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02989}]
success ya
UWAGA
db_JASMYUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  0.003298       NaN  ...       NaN              0                0
1    2023-01-02  0.003513       NaN  ...       NaN              0                0
2    2023-01-03  0.003654       NaN  ...       NaN              0                0
3    2023-01-04  0.003605       NaN  ...       NaN              0                0
4    2023-01-05  0.003503       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
556  2024-11-27  0.025680  0.026056  ...  0.026858              1                0
557  2024-11-28  0.025170  0.025982  ...  0.026799              1                0
558  2024-11-29  0.026540  0.026029  ...  0.026790              1                0
559  2024-11-30  0.028810  0.026260  ...  0.026861              1                0
560  2024-12-01  0.028350  0.026435  ...  0.026913              1                0

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02989}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02989}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  0.003298       NaN  ...       NaN            0.0              0.0
1    2023-01-02  0.003513       NaN  ...       NaN            0.0              0.0
2    2023-01-03  0.003654       NaN  ...       NaN            0.0              0.0
3    2023-01-04  0.003605       NaN  ...       NaN            0.0              0.0
4    2023-01-05  0.003503       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
557  2024-11-28  0.025170  0.025982  ...  0.026799            1.0              0.0
558  2024-11-29  0.026540  0.026029  ...  0.026790            1.0              0.0
559  2024-11-30  0.028810  0.026260  ...  0.026861            1.0              0.0
560  2024-12-01  0.028350  0.026435  ...  0.026913            1.0              0.0
561  2024-12-02  0.029890       NaN  ...       NaN            NaN              NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted JasmyCoin_JASMY
NECESSARRRY AAAA START
0
1
2024-11-21
2023-11-05
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
79  JasmyCoin JASMY  0.02989  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Helium_HNT
[{'Date': datetime.date(2024, 12, 2), 'Price': 8.48757}]
success ya
UWAGA
db_HNTUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  1.527581       NaN  ...       NaN              0                0
1    2023-01-02  1.622085       NaN  ...       NaN              0                0
2    2023-01-03  1.623441       NaN  ...       NaN              0                0
3    2023-01-04  1.687400       NaN  ...       NaN              0                0
4    2023-01-05  1.788339       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
559  2024-11-27  6.401530  4.973269  ...  4.584321              1                1
560  2024-11-28  6.683370  5.115777  ...  4.657972              1                1
561  2024-11-29  6.552730  5.235523  ...  4.724454              1                1
562  2024-11-30  6.942760  5.377793  ...  4.802290              1                1
563  2024-12-01  7.763050  5.576565  ...  4.906176              1                1

[564 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 8.48757}, {'Date': datetime.date(2024, 12, 2), 'Price': 8.48757}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  1.527581       NaN  ...       NaN            0.0              0.0
1    2023-01-02  1.622085       NaN  ...       NaN            0.0              0.0
2    2023-01-03  1.623441       NaN  ...       NaN            0.0              0.0
3    2023-01-04  1.687400       NaN  ...       NaN            0.0              0.0
4    2023-01-05  1.788339       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
560  2024-11-28  6.683370  5.115777  ...  4.657972            1.0              1.0
561  2024-11-29  6.552730  5.235523  ...  4.724454            1.0              1.0
562  2024-11-30  6.942760  5.377793  ...  4.802290            1.0              1.0
563  2024-12-01  7.763050  5.576565  ...  4.906176            1.0              1.0
564  2024-12-02  8.487570       NaN  ...       NaN            NaN              NaN

[565 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Helium_HNT
NECESSARRRY AAAA START
1
1
2024-11-21
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
80  Helium HNT  8.48757  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ethereum_Name_Service_ENS
[{'Date': datetime.date(2024, 12, 2), 'Price': 41.8296}]
success ya
UWAGA
db_ENSUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  10.890485  ...                0        NaN
1      2023-01-02  11.267034  ...                0        NaN
2      2023-01-03  11.225044  ...                0        NaN
3      2023-01-04  11.738720  ...                0        NaN
4      2023-01-05  11.286206  ...                0        NaN
...           ...        ...  ...              ...        ...
32649  2024-11-27  34.038000  ...                1  18.954154
32650  2024-11-28  34.470000  ...                1  19.498570
32651  2024-11-29  32.994000  ...                1  19.972093
32652  2024-11-30  40.120000  ...                1  20.679038
32653  2024-12-01  41.282000  ...                1  21.401949

[32654 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 41.8296}, {'Date': datetime.date(2024, 12, 2), 'Price': 41.8296}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  10.890485  ...              0.0        NaN
1      2023-01-02  11.267034  ...              0.0        NaN
2      2023-01-03  11.225044  ...              0.0        NaN
3      2023-01-04  11.738720  ...              0.0        NaN
4      2023-01-05  11.286206  ...              0.0        NaN
...           ...        ...  ...              ...        ...
32650  2024-11-28  34.470000  ...              1.0  19.498570
32651  2024-11-29  32.994000  ...              1.0  19.972093
32652  2024-11-30  40.120000  ...              1.0  20.679038
32653  2024-12-01  41.282000  ...              1.0  21.401949
32654  2024-12-02  41.829600  ...              NaN        NaN

[32655 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Ethereum_Name_Service_ENS
NECESSARRRY AAAA START
1
1
2024-11-21
2024-11-25
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                         Name    Price  ...  middle_flip_date  long_flip_date
81  Ethereum Name Service ENS  41.8296  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Raydium_RAY
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.88485}]
success ya
UWAGA
db_RAYUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.138814       NaN  ...              0                0       NaN
1      2023-01-02  0.144824       NaN  ...              0                0       NaN
2      2023-01-03  0.158484       NaN  ...              0                0       NaN
3      2023-01-04  0.155623       NaN  ...              0                0       NaN
4      2023-01-05  0.151537       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
13498  2024-11-27  5.521400  5.154826  ...              1                1  4.048085
13499  2024-11-28  5.571800  5.189574  ...              1                1  4.101549
13500  2024-11-29  5.686800  5.231010  ...              1                1  4.157172
13501  2024-11-30  5.451800  5.249409  ...              1                1  4.202598
13502  2024-12-01  5.262900  5.250533  ...              1                1  4.239801

[13503 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.88485}, {'Date': datetime.date(2024, 12, 2), 'Price': 4.88485}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.138814       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.144824       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.158484       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.155623       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.151537       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
13499  2024-11-28  5.571800  5.189574  ...            1.0              1.0  4.101549
13500  2024-11-29  5.686800  5.231010  ...            1.0              1.0  4.157172
13501  2024-11-30  5.451800  5.249409  ...            1.0              1.0  4.202598
13502  2024-12-01  5.262900  5.250533  ...            1.0              1.0  4.239801
13503  2024-12-02  4.884850       NaN  ...            NaN              NaN       NaN

[13504 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Raydium_RAY
NECESSARRRY AAAA START
1
1
2024-10-06
2024-10-12
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
82  Raydium RAY  4.88485  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Bitcoin_SV_BSV
[{'Date': datetime.date(2024, 12, 2), 'Price': 71.278}]
success ya
UWAGA
db_BSVUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00   41.311962  ...              0                0
1    2023-01-02 00:00:00   42.174873  ...              0                0
2    2023-01-03 00:00:00   41.936722  ...              0                0
3    2023-01-04 00:00:00   42.995651  ...              0                0
4    2023-01-05 00:00:00   43.300869  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  672.964000  ...              1                1
469           2024-04-14  710.707000  ...              1                1
470           2024-04-15   66.791000  ...              0                1
471           2024-04-16  666.851000  ...              1                1
472           2024-04-17   65.117100  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 63.8144}, {'Date': datetime.date(2024, 5, 10), 'Price': 61.9558}, {'Date': datetime.date(2024, 5, 11), 'Price': 62.355}, {'Date': datetime.date(2024, 5, 12), 'Price': 61.8696}, {'Date': datetime.date(2024, 5, 13), 'Price': 61.4787}, {'Date': datetime.date(2024, 5, 14), 'Price': 58.7751}, {'Date': datetime.date(2024, 5, 15), 'Price': 63.4546}, {'Date': datetime.date(2024, 5, 16), 'Price': 62.6069}, {'Date': datetime.date(2024, 5, 17), 'Price': 65.172}, {'Date': datetime.date(2024, 5, 18), 'Price': 66.3316}, {'Date': datetime.date(2024, 5, 19), 'Price': 64.9408}, {'Date': datetime.date(2024, 5, 20), 'Price': 69.4039}, {'Date': datetime.date(2024, 5, 21), 'Price': 69.1131}, {'Date': datetime.date(2024, 5, 22), 'Price': 65.7391}, {'Date': datetime.date(2024, 5, 23), 'Price': 64.025}, {'Date': datetime.date(2024, 5, 24), 'Price': 62.8102}, {'Date': datetime.date(2024, 5, 25), 'Price': 64.0141}, {'Date': datetime.date(2024, 5, 26), 'Price': 63.3802}, {'Date': datetime.date(2024, 5, 27), 'Price': 63.5385}, {'Date': datetime.date(2024, 5, 28), 'Price': 62.6846}, {'Date': datetime.date(2024, 5, 29), 'Price': 62.2758}, {'Date': datetime.date(2024, 5, 30), 'Price': 62.1124}, {'Date': datetime.date(2024, 5, 31), 'Price': 61.3881}, {'Date': datetime.date(2024, 6, 1), 'Price': 60.9434}, {'Date': datetime.date(2024, 6, 2), 'Price': 61.365}, {'Date': datetime.date(2024, 6, 3), 'Price': 61.1002}, {'Date': datetime.date(2024, 6, 4), 'Price': 62.4815}, {'Date': datetime.date(2024, 6, 5), 'Price': 64.0321}, {'Date': datetime.date(2024, 6, 6), 'Price': 62.8109}, {'Date': datetime.date(2024, 6, 7), 'Price': 57.801}, {'Date': datetime.date(2024, 6, 8), 'Price': 56.5071}, {'Date': datetime.date(2024, 6, 9), 'Price': 57.1148}, {'Date': datetime.date(2024, 6, 10), 'Price': 55.1583}, {'Date': datetime.date(2024, 6, 11), 'Price': 50.8512}, {'Date': datetime.date(2024, 6, 12), 'Price': 52.4513}, {'Date': datetime.date(2024, 6, 13), 'Price': 51.1071}, {'Date': datetime.date(2024, 6, 14), 'Price': 48.5932}, {'Date': datetime.date(2024, 6, 15), 'Price': 49.8564}, {'Date': datetime.date(2024, 6, 16), 'Price': 49.3476}, {'Date': datetime.date(2024, 6, 17), 'Price': 48.674}, {'Date': datetime.date(2024, 6, 18), 'Price': 41.7633}, {'Date': datetime.date(2024, 6, 19), 'Price': 44.1986}, {'Date': datetime.date(2024, 6, 20), 'Price': 44.5352}, {'Date': datetime.date(2024, 6, 21), 'Price': 43.9094}, {'Date': datetime.date(2024, 6, 22), 'Price': 46.6092}, {'Date': datetime.date(2024, 6, 23), 'Price': 45.8692}, {'Date': datetime.date(2024, 6, 24), 'Price': 42.7801}, {'Date': datetime.date(2024, 6, 25), 'Price': 45.6665}, {'Date': datetime.date(2024, 6, 26), 'Price': 44.8498}, {'Date': datetime.date(2024, 6, 27), 'Price': 45.2267}, {'Date': datetime.date(2024, 6, 28), 'Price': 44.5408}, {'Date': datetime.date(2024, 6, 29), 'Price': 44.091}, {'Date': datetime.date(2024, 6, 30), 'Price': 44.6487}, {'Date': datetime.date(2024, 7, 1), 'Price': 44.7885}, {'Date': datetime.date(2024, 11, 17), 'Price': 65.5382}, {'Date': datetime.date(2024, 11, 18), 'Price': 67.7153}, {'Date': datetime.date(2024, 11, 19), 'Price': 69.9756}, {'Date': datetime.date(2024, 11, 20), 'Price': 66.7214}, {'Date': datetime.date(2024, 11, 21), 'Price': 67.6723}, {'Date': datetime.date(2024, 11, 22), 'Price': 66.522}, {'Date': datetime.date(2024, 11, 23), 'Price': 70.2931}, {'Date': datetime.date(2024, 11, 24), 'Price': 67.3908}, {'Date': datetime.date(2024, 11, 25), 'Price': 68.2271}, {'Date': datetime.date(2024, 11, 26), 'Price': 64.471}, {'Date': datetime.date(2024, 11, 27), 'Price': 68.2088}, {'Date': datetime.date(2024, 11, 28), 'Price': 69.99}, {'Date': datetime.date(2024, 11, 29), 'Price': 71.1065}, {'Date': datetime.date(2024, 11, 30), 'Price': 71.676}, {'Date': datetime.date(2024, 12, 1), 'Price': 70.4186}, {'Date': datetime.date(2024, 12, 2), 'Price': 71.278}, {'Date': datetime.date(2024, 12, 2), 'Price': 71.278}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Polygon_MATIC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.62599}]
success ya
UWAGA
db_MATICUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.759973       NaN  ...              0                0       NaN
1      2023-01-02  0.780852       NaN  ...              0                0       NaN
2      2023-01-03  0.780077       NaN  ...              0                0       NaN
3      2023-01-04  0.806372       NaN  ...              0                0       NaN
4      2023-01-05  0.788527       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
22997  2024-06-27  0.566800  0.603416  ...              0                0  0.663502
22998  2024-06-28  0.552800  0.599198  ...              0                0  0.659618
22999  2024-06-29  0.548000  0.594932  ...              0                0  0.655701
23000  2024-06-30  0.561100  0.592112  ...              0                0  0.652382
23001  2024-07-01  0.558300  0.589295  ...              0                0  0.649081

[23002 rows x 8 columns]
last_db_date_data
2024-07-01
<class 'datetime.date'>
self prices
/home/entukio/projects/scrapper_crypto_top/venv/lib/python3.11/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log10
  result = getattr(ufunc, method)(*inputs, **kwargs)
[{'Date': datetime.date(2024, 11, 17), 'Price': 0.39729}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.44376}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.43757}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.42754}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.44561}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.47315}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.57525}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.54279}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.56874}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.51179}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.57011}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.55756}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.56683}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.60867}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.59361}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.62599}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.62599}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Virtuals_Protocol_VIRTUAL
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.38925}]
success ya
UWAGA
db_VIRTUALUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_VIRTUALUSD': no such table: db_VIRTUALUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Axie_Infinity_AXS
[{'Date': datetime.date(2024, 12, 2), 'Price': 8.83504}]
success ya
UWAGA
db_AXSUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  6.313912       NaN  ...              0                0       NaN
1      2023-01-02  6.391840       NaN  ...              0                0       NaN
2      2023-01-03  6.511687       NaN  ...              0                0       NaN
3      2023-01-04  6.651639       NaN  ...              0                0       NaN
4      2023-01-05  6.764762       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  7.709000  6.182778  ...              1                1  5.558509
27963  2024-11-28  7.839000  6.320796  ...              1                1  5.638526
27964  2024-11-29  8.134000  6.471897  ...              1                1  5.726087
27965  2024-11-30  8.176000  6.613905  ...              1                1  5.812048
27966  2024-12-01  8.262000  6.751246  ...              1                1  5.898012

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 8.83504}, {'Date': datetime.date(2024, 12, 2), 'Price': 8.83504}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  6.313912       NaN  ...            0.0              0.0       NaN
1      2023-01-02  6.391840       NaN  ...            0.0              0.0       NaN
2      2023-01-03  6.511687       NaN  ...            0.0              0.0       NaN
3      2023-01-04  6.651639       NaN  ...            0.0              0.0       NaN
4      2023-01-05  6.764762       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  7.839000  6.320796  ...            1.0              1.0  5.638526
27964  2024-11-29  8.134000  6.471897  ...            1.0              1.0  5.726087
27965  2024-11-30  8.176000  6.613905  ...            1.0              1.0  5.812048
27966  2024-12-01  8.262000  6.751246  ...            1.0              1.0  5.898012
27967  2024-12-02  8.835040       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Axie_Infinity_AXS
NECESSARRRY AAAA START
1
1
2024-11-10
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name    Price  ...  middle_flip_date  long_flip_date
86  Axie Infinity AXS  8.83504  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
IOTA_IOTA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.3836}]
success ya
UWAGA
db_IOTAUSD
COINDBBB
           Date    Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-03-14  0.21950       NaN  ...              0                0       NaN
1    2023-03-15  0.20510       NaN  ...              0                0       NaN
2    2023-03-16  0.21200       NaN  ...              0                0       NaN
3    2023-03-17  0.22990       NaN  ...              0                0       NaN
4    2023-03-18  0.21780       NaN  ...              0                0       NaN
..          ...      ...       ...  ...            ...              ...       ...
484  2024-11-27  0.22824  0.196094  ...              0                0  0.203385
485  2024-11-28  0.22365  0.198390  ...              0                0  0.204096
486  2024-11-29  0.26879  0.204257  ...              1                0  0.206366
487  2024-11-30  0.26829  0.209593  ...              1                1  0.208539
488  2024-12-01  0.30713  0.217721  ...              1                1  0.211998

[489 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.3836}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.3836}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-03-14  0.21950       NaN  ...            0.0              0.0       NaN
1    2023-03-15  0.20510       NaN  ...            0.0              0.0       NaN
2    2023-03-16  0.21200       NaN  ...            0.0              0.0       NaN
3    2023-03-17  0.22990       NaN  ...            0.0              0.0       NaN
4    2023-03-18  0.21780       NaN  ...            0.0              0.0       NaN
..          ...      ...       ...  ...            ...              ...       ...
485  2024-11-28  0.22365  0.198390  ...            0.0              0.0  0.204096
486  2024-11-29  0.26879  0.204257  ...            1.0              0.0  0.206366
487  2024-11-30  0.26829  0.209593  ...            1.0              1.0  0.208539
488  2024-12-01  0.30713  0.217721  ...            1.0              1.0  0.211998
489  2024-12-02  0.38360       NaN  ...            NaN              NaN       NaN

[490 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted IOTA_IOTA
NECESSARRRY AAAA START
1
1
2024-11-30
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name   Price  ...  middle_flip_date  long_flip_date
87  IOTA IOTA  0.3836  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
BitTorrent_BTT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_BTTUSD
COINDBBB
             Date         Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01  1.000000e-06  ...                0       NaN
1      2023-01-02  1.000000e-06  ...                0       NaN
2      2023-01-03  1.000000e-06  ...                0       NaN
3      2023-01-04  1.000000e-06  ...                0       NaN
4      2023-01-05  1.000000e-06  ...                0       NaN
...           ...           ...  ...              ...       ...
27962  2024-11-27  1.337300e-06  ...                1  0.000001
27963  2024-11-28  1.361900e-06  ...                1  0.000001
27964  2024-11-29  1.385400e-06  ...                1  0.000001
27965  2024-11-30  1.376100e-06  ...                1  0.000001
27966  2024-12-01  1.451100e-06  ...                1  0.000001

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date         Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01  1.000000e-06  ...              0.0       NaN
1      2023-01-02  1.000000e-06  ...              0.0       NaN
2      2023-01-03  1.000000e-06  ...              0.0       NaN
3      2023-01-04  1.000000e-06  ...              0.0       NaN
4      2023-01-05  1.000000e-06  ...              0.0       NaN
...           ...           ...  ...              ...       ...
27963  2024-11-28  1.361900e-06  ...              1.0  0.000001
27964  2024-11-29  1.385400e-06  ...              1.0  0.000001
27965  2024-11-30  1.376100e-06  ...              1.0  0.000001
27966  2024-12-01  1.451100e-06  ...              1.0  0.000001
27967  2024-12-02  0.000000e+00  ...              NaN       NaN

[27968 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted BitTorrent_BTT
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-10
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name  Price  ...  middle_flip_date  long_flip_date
88  BitTorrent BTT    0.0  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Core_CORE
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.42629}]
success ya
UWAGA
db_COREUSD
COINDBBB
                    Date        Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00  5918.363281  ...              0                0
1    2023-01-02 00:00:00  5936.245605  ...              0                0
2    2023-01-03 00:00:00  5934.172363  ...              0                0
3    2023-01-04 00:00:00  5949.939941  ...              0                0
4    2023-01-05 00:00:00  5969.980469  ...              0                0
..                   ...          ...  ...            ...              ...
468           2024-04-13   135.965000  ...              0                0
469           2024-04-14   149.855000  ...              0                0
470           2024-04-15   271.612000  ...              0                0
471           2024-04-16   227.328000  ...              0                0
472           2024-04-17     2.157750  ...              0                0

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 1.65194}, {'Date': datetime.date(2024, 5, 10), 'Price': 1.60518}, {'Date': datetime.date(2024, 5, 11), 'Price': 1.60857}, {'Date': datetime.date(2024, 5, 12), 'Price': 1.72385}, {'Date': datetime.date(2024, 5, 13), 'Price': 1.63903}, {'Date': datetime.date(2024, 5, 14), 'Price': 1.58222}, {'Date': datetime.date(2024, 5, 15), 'Price': 1.67449}, {'Date': datetime.date(2024, 5, 16), 'Price': 1.92626}, {'Date': datetime.date(2024, 5, 17), 'Price': 1.85451}, {'Date': datetime.date(2024, 5, 18), 'Price': 1.86135}, {'Date': datetime.date(2024, 5, 19), 'Price': 1.76684}, {'Date': datetime.date(2024, 5, 20), 'Price': 1.85634}, {'Date': datetime.date(2024, 5, 21), 'Price': 1.80714}, {'Date': datetime.date(2024, 5, 22), 'Price': 1.68749}, {'Date': datetime.date(2024, 5, 23), 'Price': 1.6149}, {'Date': datetime.date(2024, 5, 24), 'Price': 1.86621}, {'Date': datetime.date(2024, 5, 25), 'Price': 2.35474}, {'Date': datetime.date(2024, 5, 26), 'Price': 2.04407}, {'Date': datetime.date(2024, 5, 27), 'Price': 2.20055}, {'Date': datetime.date(2024, 5, 28), 'Price': 2.09406}, {'Date': datetime.date(2024, 5, 29), 'Price': 2.01812}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.92149}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.92981}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.95125}, {'Date': datetime.date(2024, 6, 2), 'Price': 1.89812}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.92413}, {'Date': datetime.date(2024, 6, 4), 'Price': 2.0126}, {'Date': datetime.date(2024, 6, 5), 'Price': 1.9315}, {'Date': datetime.date(2024, 6, 6), 'Price': 1.92783}, {'Date': datetime.date(2024, 6, 7), 'Price': 1.72985}, {'Date': datetime.date(2024, 6, 8), 'Price': 1.69229}, {'Date': datetime.date(2024, 6, 9), 'Price': 1.71259}, {'Date': datetime.date(2024, 6, 10), 'Price': 1.67401}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.6048}, {'Date': datetime.date(2024, 6, 12), 'Price': 1.60795}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.54781}, {'Date': datetime.date(2024, 6, 14), 'Price': 1.51374}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.55194}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.63097}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.58592}, {'Date': datetime.date(2024, 6, 18), 'Price': 1.25717}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.2963}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.39481}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.39738}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.39356}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.3584}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.31651}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.39703}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.34821}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.3499}, {'Date': datetime.date(2024, 6, 28), 'Price': 1.31176}, {'Date': datetime.date(2024, 6, 29), 'Price': 1.30596}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.32609}, {'Date': datetime.date(2024, 7, 1), 'Price': 1.33618}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.99764}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.01487}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.97609}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.91998}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.96825}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.9564}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.10954}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.05388}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.0647}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.02345}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.0799}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.11388}, {'Date': datetime.date(2024, 11, 29), 'Price': 1.21784}, {'Date': datetime.date(2024, 11, 30), 'Price': 1.89963}, {'Date': datetime.date(2024, 12, 1), 'Price': 1.58243}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.42629}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.42629}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Beam_BEAM
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02642}]
success ya
UWAGA
db_BEAMUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.109391       NaN  ...              0                0       NaN
1    2023-01-02  0.108351       NaN  ...              0                0       NaN
2    2023-01-03  0.106426       NaN  ...              0                0       NaN
3    2023-01-04  0.109241       NaN  ...              0                0       NaN
4    2023-01-05  0.109263       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.023600  0.031447  ...              0                0  0.052434
487  2024-05-02  0.024640  0.030879  ...              0                0  0.051459
488  2024-05-03  0.025450  0.030427  ...              0                0  0.050546
489  2024-05-04  0.024870  0.029964  ...              0                0  0.049645
490  2024-05-05  0.025430  0.029586  ...              0                0  0.048796

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.02445}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.02383}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.02385}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.02342}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.02204}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.02128}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.02455}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.02537}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.02451}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.02523}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.02479}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.02935}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.02844}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.0279}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.02731}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.0271}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.02831}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.02977}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.02944}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.0281}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.0273}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.02651}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.02852}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.02943}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.02749}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.02772}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.02814}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.02799}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.02551}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.02359}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.02294}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.02343}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.02289}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.02172}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.02236}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.02119}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.01912}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.0195}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.02004}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.01931}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.01733}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.01882}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.01822}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.0174}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.01699}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.0165}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.0155}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.01733}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.01648}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.01683}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.01612}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.01563}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.01594}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.01726}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.02361}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.02425}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.0252}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.02126}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.02194}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.02074}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.02315}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.02323}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.02293}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.02136}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.02392}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.02472}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.02688}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.02646}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.0285}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02642}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02642}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
MultiversX_EGLD
[{'Date': datetime.date(2024, 12, 2), 'Price': 45.782}]
success ya
UWAGA
db_EGLDUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  32.950642  ...                0        NaN
1      2023-01-02  33.377632  ...                0        NaN
2      2023-01-03  33.126549  ...                0        NaN
3      2023-01-04  34.449455  ...                0        NaN
4      2023-01-05  34.436417  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  38.780000  ...                1  29.404614
27963  2024-11-28  39.210000  ...                1  29.748662
27964  2024-11-29  42.600000  ...                1  30.199586
27965  2024-11-30  42.750000  ...                1  30.639952
27966  2024-12-01  43.950000  ...                1  31.106971

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 45.782}, {'Date': datetime.date(2024, 12, 2), 'Price': 45.782}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  32.950642  ...              0.0        NaN
1      2023-01-02  33.377632  ...              0.0        NaN
2      2023-01-03  33.126549  ...              0.0        NaN
3      2023-01-04  34.449455  ...              0.0        NaN
4      2023-01-05  34.436417  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  39.210000  ...              1.0  29.748662
27964  2024-11-29  42.600000  ...              1.0  30.199586
27965  2024-11-30  42.750000  ...              1.0  30.639952
27966  2024-12-01  43.950000  ...              1.0  31.106971
27967  2024-12-02  45.782000  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted MultiversX_EGLD
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-22
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name   Price  ...  middle_flip_date  long_flip_date
91  MultiversX EGLD  45.782  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Neo_NEO
[{'Date': datetime.date(2024, 12, 2), 'Price': 17.5276}]
success ya
UWAGA
db_NEOUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   6.396228  ...                0        NaN
1      2023-01-02   6.519654  ...                0        NaN
2      2023-01-03   6.440632  ...                0        NaN
3      2023-01-04   6.589066  ...                0        NaN
4      2023-01-05   6.518587  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  15.098800  ...                1  11.513001
27963  2024-11-28  14.799800  ...                1  11.628327
27964  2024-11-29  15.706800  ...                1  11.771431
27965  2024-11-30  15.990500  ...                1  11.919469
27966  2024-12-01  16.338500  ...                1  12.074523

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 17.5276}, {'Date': datetime.date(2024, 12, 2), 'Price': 17.5276}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   6.396228  ...              0.0        NaN
1      2023-01-02   6.519654  ...              0.0        NaN
2      2023-01-03   6.440632  ...              0.0        NaN
3      2023-01-04   6.589066  ...              0.0        NaN
4      2023-01-05   6.518587  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  14.799800  ...              1.0  11.628327
27964  2024-11-29  15.706800  ...              1.0  11.771431
27965  2024-11-30  15.990500  ...              1.0  11.919469
27966  2024-12-01  16.338500  ...              1.0  12.074523
27967  2024-12-02  17.527600  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Neo_NEO
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-15
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
       Name    Price  ...  middle_flip_date  long_flip_date
92  Neo NEO  17.5276  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Decentraland_MANA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.63449}]
success ya
UWAGA
db_MANAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.301418       NaN  ...              0                0       NaN
1      2023-01-02  0.310464       NaN  ...              0                0       NaN
2      2023-01-03  0.309047       NaN  ...              0                0       NaN
3      2023-01-04  0.322034       NaN  ...              0                0       NaN
4      2023-01-05  0.320877       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
19152  2024-11-27  0.608440  0.452064  ...              1                1  0.377725
19153  2024-11-28  0.619420  0.466011  ...              1                1  0.386206
19154  2024-11-29  0.642640  0.480730  ...              1                1  0.395203
19155  2024-11-30  0.650300  0.494861  ...              1                1  0.404154
19156  2024-12-01  0.651110  0.507881  ...              1                1  0.412819

[19157 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.63449}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.63449}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.301418       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.310464       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.309047       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.322034       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.320877       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
19153  2024-11-28  0.619420  0.466011  ...            1.0              1.0  0.386206
19154  2024-11-29  0.642640  0.480730  ...            1.0              1.0  0.395203
19155  2024-11-30  0.650300  0.494861  ...            1.0              1.0  0.404154
19156  2024-12-01  0.651110  0.507881  ...            1.0              1.0  0.412819
19157  2024-12-02  0.634490       NaN  ...            NaN              NaN       NaN

[19158 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Decentraland_MANA
NECESSARRRY AAAA START
1
1
2024-11-09
2024-11-15
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name    Price  ...  middle_flip_date  long_flip_date
93  Decentraland MANA  0.63449  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
AIOZ_Network_AIOZ
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.07683}]
success ya
UWAGA
db_AIOZUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.031825       NaN  ...              0                0       NaN
1      2023-01-02  0.032065       NaN  ...              0                0       NaN
2      2023-01-03  0.031827       NaN  ...              0                0       NaN
3      2023-01-04  0.032284       NaN  ...              0                0       NaN
4      2023-01-05  0.031487       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
51294  2024-11-27  0.788270  0.699793  ...              1                1  0.596983
51295  2024-11-28  0.799820  0.708128  ...              1                1  0.604100
51296  2024-11-29  0.812380  0.716816  ...              1                1  0.611408
51297  2024-11-30  1.018250  0.741935  ...              1                1  0.625683
51298  2024-12-01  1.207150  0.780703  ...              1                1  0.646085

[51299 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.07683}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.07683}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.031825       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.032065       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.031827       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.032284       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.031487       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
51295  2024-11-28  0.799820  0.708128  ...            1.0              1.0  0.604100
51296  2024-11-29  0.812380  0.716816  ...            1.0              1.0  0.611408
51297  2024-11-30  1.018250  0.741935  ...            1.0              1.0  0.625683
51298  2024-12-01  1.207150  0.780703  ...            1.0              1.0  0.646085
51299  2024-12-02  1.076830       NaN  ...            NaN              NaN       NaN

[51300 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted AIOZ_Network_AIOZ
NECESSARRRY AAAA START
1
1
2024-11-09
2024-11-11
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name    Price  ...  middle_flip_date  long_flip_date
94  AIOZ Network AIOZ  1.07683  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Peanut_the_Squirrel_PNUT
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.22239}]
success ya
UWAGA
db_PNUTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PNUTUSD': no such table: db_PNUTUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
XDC_Network_XDC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07783}]
success ya
UWAGA
db_XDCUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.025752       NaN  ...              0                0       NaN
1    2023-01-02  0.025402       NaN  ...              0                0       NaN
2    2023-01-03  0.024599       NaN  ...              0                0       NaN
3    2023-01-04  0.024597       NaN  ...              0                0       NaN
4    2023-01-05  0.024857       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.056250  0.043203  ...              1                1  0.039427
557  2024-11-28  0.056450  0.044307  ...              1                1  0.040024
558  2024-11-29  0.060790  0.045680  ...              1                1  0.040753
559  2024-11-30  0.060910  0.046950  ...              1                1  0.041460
560  2024-12-01  0.061270  0.048143  ...              1                1  0.042155

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07783}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.07783}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.025752       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.025402       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.024599       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.024597       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.024857       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.056450  0.044307  ...            1.0              1.0  0.040024
558  2024-11-29  0.060790  0.045680  ...            1.0              1.0  0.040753
559  2024-11-30  0.060910  0.046950  ...            1.0              1.0  0.041460
560  2024-12-01  0.061270  0.048143  ...            1.0              1.0  0.042155
561  2024-12-02  0.077830       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted XDC_Network_XDC
NECESSARRRY AAAA START
1
1
2024-11-22
2024-11-22
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
96  XDC Network XDC  0.07783  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ZEEBU_ZBU
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.48452}]
success ya
UWAGA
db_ZBUUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-08-09 00:00:00    0.873201  ...              0                0
1    2023-08-10 00:00:00    0.913135  ...              0                0
2    2023-08-11 00:00:00    0.879786  ...              0                0
3    2023-08-12 00:00:00    0.839476  ...              0                0
4    2023-08-13 00:00:00    0.832375  ...              0                0
..                   ...         ...  ...            ...              ...
245           2024-04-13  476.969000  ...              1                1
246           2024-04-14  483.824000  ...              1                1
247           2024-04-15  484.238000  ...              1                1
248           2024-04-16  481.402000  ...              1                1
249           2024-04-17    4.829700  ...              0                1

[250 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 4.15778}, {'Date': datetime.date(2024, 5, 10), 'Price': 4.17243}, {'Date': datetime.date(2024, 5, 11), 'Price': 4.16328}, {'Date': datetime.date(2024, 5, 12), 'Price': 4.16328}, {'Date': datetime.date(2024, 5, 13), 'Price': 4.33251}, {'Date': datetime.date(2024, 5, 14), 'Price': 4.15702}, {'Date': datetime.date(2024, 5, 15), 'Price': 4.25794}, {'Date': datetime.date(2024, 5, 16), 'Price': 4.21701}, {'Date': datetime.date(2024, 5, 17), 'Price': 4.24497}, {'Date': datetime.date(2024, 5, 18), 'Price': 4.27114}, {'Date': datetime.date(2024, 5, 19), 'Price': 4.23106}, {'Date': datetime.date(2024, 5, 20), 'Price': 4.2565}, {'Date': datetime.date(2024, 5, 21), 'Price': 4.6385}, {'Date': datetime.date(2024, 5, 22), 'Price': 4.63196}, {'Date': datetime.date(2024, 5, 23), 'Price': 4.56095}, {'Date': datetime.date(2024, 5, 24), 'Price': 4.67587}, {'Date': datetime.date(2024, 5, 25), 'Price': 4.68632}, {'Date': datetime.date(2024, 5, 26), 'Price': 4.68632}, {'Date': datetime.date(2024, 5, 27), 'Price': 4.8589}, {'Date': datetime.date(2024, 5, 28), 'Price': 4.55945}, {'Date': datetime.date(2024, 5, 29), 'Price': 4.57383}, {'Date': datetime.date(2024, 5, 30), 'Price': 4.65148}, {'Date': datetime.date(2024, 5, 31), 'Price': 4.69673}, {'Date': datetime.date(2024, 6, 1), 'Price': 4.7345}, {'Date': datetime.date(2024, 6, 2), 'Price': 4.81541}, {'Date': datetime.date(2024, 6, 3), 'Price': 4.78073}, {'Date': datetime.date(2024, 6, 4), 'Price': 4.82226}, {'Date': datetime.date(2024, 6, 5), 'Price': 4.80479}, {'Date': datetime.date(2024, 6, 6), 'Price': 4.79771}, {'Date': datetime.date(2024, 6, 7), 'Price': 4.76647}, {'Date': datetime.date(2024, 6, 8), 'Price': 4.71274}, {'Date': datetime.date(2024, 6, 9), 'Price': 4.72656}, {'Date': datetime.date(2024, 6, 10), 'Price': 4.72679}, {'Date': datetime.date(2024, 6, 11), 'Price': 4.63712}, {'Date': datetime.date(2024, 6, 12), 'Price': 4.69305}, {'Date': datetime.date(2024, 6, 13), 'Price': 4.61701}, {'Date': datetime.date(2024, 6, 14), 'Price': 4.67364}, {'Date': datetime.date(2024, 6, 15), 'Price': 4.65493}, {'Date': datetime.date(2024, 6, 16), 'Price': 4.65493}, {'Date': datetime.date(2024, 6, 17), 'Price': 4.7222}, {'Date': datetime.date(2024, 6, 18), 'Price': 4.8001}, {'Date': datetime.date(2024, 6, 19), 'Price': 4.76868}, {'Date': datetime.date(2024, 6, 20), 'Price': 4.75801}, {'Date': datetime.date(2024, 6, 21), 'Price': 4.70279}, {'Date': datetime.date(2024, 6, 22), 'Price': 4.72501}, {'Date': datetime.date(2024, 6, 23), 'Price': 4.72237}, {'Date': datetime.date(2024, 6, 24), 'Price': 4.57359}, {'Date': datetime.date(2024, 6, 25), 'Price': 4.50146}, {'Date': datetime.date(2024, 6, 26), 'Price': 4.69989}, {'Date': datetime.date(2024, 6, 27), 'Price': 4.68953}, {'Date': datetime.date(2024, 6, 28), 'Price': 4.65846}, {'Date': datetime.date(2024, 6, 29), 'Price': 4.66234}, {'Date': datetime.date(2024, 6, 30), 'Price': 4.66476}, {'Date': datetime.date(2024, 7, 1), 'Price': 4.66091}, {'Date': datetime.date(2024, 11, 17), 'Price': 4.84066}, {'Date': datetime.date(2024, 11, 18), 'Price': 4.51218}, {'Date': datetime.date(2024, 11, 19), 'Price': 4.51282}, {'Date': datetime.date(2024, 11, 20), 'Price': 4.56681}, {'Date': datetime.date(2024, 11, 21), 'Price': 4.66514}, {'Date': datetime.date(2024, 11, 22), 'Price': 4.61938}, {'Date': datetime.date(2024, 11, 23), 'Price': 4.61317}, {'Date': datetime.date(2024, 11, 24), 'Price': 4.6185}, {'Date': datetime.date(2024, 11, 25), 'Price': 4.61967}, {'Date': datetime.date(2024, 11, 26), 'Price': 4.51654}, {'Date': datetime.date(2024, 11, 27), 'Price': 4.51491}, {'Date': datetime.date(2024, 11, 28), 'Price': 4.50781}, {'Date': datetime.date(2024, 11, 29), 'Price': 4.51665}, {'Date': datetime.date(2024, 11, 30), 'Price': 4.50763}, {'Date': datetime.date(2024, 12, 1), 'Price': 4.48781}, {'Date': datetime.date(2024, 12, 2), 'Price': 4.48452}, {'Date': datetime.date(2024, 12, 2), 'Price': 4.48452}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Popcat_(SOL)_POPCAT
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.17493}]
success ya
UWAGA
db_POPCATUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_POPCATUSD': no such table: db_POPCATUSD
4 failed
trying
 inicjacja duplicates
 remove duplicates sprawdzone
duplicate info
[False, None, None]
ApeCoin_APE
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}]
success ya
UWAGA
db_APEUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.003893       NaN  ...       NaN              0                0
1      2023-01-02  0.003893       NaN  ...       NaN              0                0
2      2023-01-03  0.003893       NaN  ...       NaN              0                0
3      2023-01-04  0.003893       NaN  ...       NaN              0                0
4      2023-01-05  0.003893       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
43245  2024-11-27  1.315500  1.176272  ...  1.054500              1                1
43246  2024-11-28  1.387000  1.193832  ...  1.066167              1                1
43247  2024-11-29  1.416600  1.212396  ...  1.078462              1                1
43248  2024-11-30  1.500700  1.236422  ...  1.093278              1                1
43249  2024-12-01  1.520500  1.260095  ...  1.108268              1                1

[43250 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.003893       NaN  ...       NaN            0.0              0.0
1      2023-01-02  0.003893       NaN  ...       NaN            0.0              0.0
2      2023-01-03  0.003893       NaN  ...       NaN            0.0              0.0
3      2023-01-04  0.003893       NaN  ...       NaN            0.0              0.0
4      2023-01-05  0.003893       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
43246  2024-11-28  1.387000  1.193832  ...  1.066167            1.0              1.0
43247  2024-11-29  1.416600  1.212396  ...  1.078462            1.0              1.0
43248  2024-11-30  1.500700  1.236422  ...  1.093278            1.0              1.0
43249  2024-12-01  1.520500  1.260095  ...  1.108268            1.0              1.0
43250  2024-12-02  1.520330       NaN  ...       NaN            NaN              NaN

[43251 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted ApeCoin_APE
NECESSARRRY AAAA START
1
1
2024-10-19
2024-11-05
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
95  ApeCoin APE  1.52033  ...              None            None
96  ApeCoin APE  1.52033  ...              None            None

[2 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ApeCoin_APE
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}]
success ya
UWAGA
db_APEUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.003893       NaN  ...       NaN              0                0
1      2023-01-02  0.003893       NaN  ...       NaN              0                0
2      2023-01-03  0.003893       NaN  ...       NaN              0                0
3      2023-01-04  0.003893       NaN  ...       NaN              0                0
4      2023-01-05  0.003893       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
43647  2024-11-28  1.387000  1.193832  ...  1.066167              1                1
43648  2024-11-29  1.416600  1.212396  ...  1.078462              1                1
43649  2024-11-30  1.500700  1.236422  ...  1.093278              1                1
43650  2024-12-01  1.520500  1.260095  ...  1.108268              1                1
43651  2024-12-02  1.589800  1.287570  ...  1.125164              1                1

[43652 rows x 8 columns]
last_db_date_data
2024-12-02
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.003893       NaN  ...       NaN            0.0              0.0
1      2023-01-02  0.003893       NaN  ...       NaN            0.0              0.0
2      2023-01-03  0.003893       NaN  ...       NaN            0.0              0.0
3      2023-01-04  0.003893       NaN  ...       NaN            0.0              0.0
4      2023-01-05  0.003893       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
43648  2024-11-29  1.416600  1.212396  ...  1.078462            1.0              1.0
43649  2024-11-30  1.500700  1.236422  ...  1.093278            1.0              1.0
43650  2024-12-01  1.520500  1.260095  ...  1.108268            1.0              1.0
43651  2024-12-02  1.589800  1.287570  ...  1.125164            1.0              1.0
43652  2024-12-02  1.520330       NaN  ...       NaN            NaN              NaN

[43653 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted ApeCoin_APE
NECESSARRRY AAAA START
1
1
2024-10-19
2024-11-05
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
95  ApeCoin APE  1.52033  ...        2024-10-19      2024-11-05
96  ApeCoin APE  1.52033  ...        2024-10-19      2024-11-05

[2 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ApeCoin_APE
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}]
success ya
UWAGA
db_APEUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.003893       NaN  ...       NaN              0                0
1      2023-01-02  0.003893       NaN  ...       NaN              0                0
2      2023-01-03  0.003893       NaN  ...       NaN              0                0
3      2023-01-04  0.003893       NaN  ...       NaN              0                0
4      2023-01-05  0.003893       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
44049  2024-11-28  1.387000  1.193832  ...  1.066167              1                1
44050  2024-11-29  1.416600  1.212396  ...  1.078462              1                1
44051  2024-11-30  1.500700  1.236422  ...  1.093278              1                1
44052  2024-12-01  1.520500  1.260095  ...  1.108268              1                1
44053  2024-12-02  1.589800  1.287570  ...  1.125164              1                1

[44054 rows x 8 columns]
last_db_date_data
2024-12-02
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.003893       NaN  ...       NaN            0.0              0.0
1      2023-01-02  0.003893       NaN  ...       NaN            0.0              0.0
2      2023-01-03  0.003893       NaN  ...       NaN            0.0              0.0
3      2023-01-04  0.003893       NaN  ...       NaN            0.0              0.0
4      2023-01-05  0.003893       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
44050  2024-11-29  1.416600  1.212396  ...  1.078462            1.0              1.0
44051  2024-11-30  1.500700  1.236422  ...  1.093278            1.0              1.0
44052  2024-12-01  1.520500  1.260095  ...  1.108268            1.0              1.0
44053  2024-12-02  1.589800  1.287570  ...  1.125164            1.0              1.0
44054  2024-12-02  1.520330       NaN  ...       NaN            NaN              NaN

[44055 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted ApeCoin_APE
NECESSARRRY AAAA START
1
1
2024-10-19
2024-11-05
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
95  ApeCoin APE  1.52033  ...        2024-10-19      2024-11-05
96  ApeCoin APE  1.52033  ...        2024-10-19      2024-11-05

[2 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ApeCoin_APE
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}]
success ya
UWAGA
db_APEUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.003893       NaN  ...       NaN              0                0
1      2023-01-02  0.003893       NaN  ...       NaN              0                0
2      2023-01-03  0.003893       NaN  ...       NaN              0                0
3      2023-01-04  0.003893       NaN  ...       NaN              0                0
4      2023-01-05  0.003893       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
44451  2024-11-28  1.387000  1.193832  ...  1.066167              1                1
44452  2024-11-29  1.416600  1.212396  ...  1.078462              1                1
44453  2024-11-30  1.500700  1.236422  ...  1.093278              1                1
44454  2024-12-01  1.520500  1.260095  ...  1.108268              1                1
44455  2024-12-02  1.589800  1.287570  ...  1.125164              1                1

[44456 rows x 8 columns]
last_db_date_data
2024-12-02
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.52033}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.003893       NaN  ...       NaN            0.0              0.0
1      2023-01-02  0.003893       NaN  ...       NaN            0.0              0.0
2      2023-01-03  0.003893       NaN  ...       NaN            0.0              0.0
3      2023-01-04  0.003893       NaN  ...       NaN            0.0              0.0
4      2023-01-05  0.003893       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
44452  2024-11-29  1.416600  1.212396  ...  1.078462            1.0              1.0
44453  2024-11-30  1.500700  1.236422  ...  1.093278            1.0              1.0
44454  2024-12-01  1.520500  1.260095  ...  1.108268            1.0              1.0
44455  2024-12-02  1.589800  1.287570  ...  1.125164            1.0              1.0
44456  2024-12-02  1.520330       NaN  ...       NaN            NaN              NaN

[44457 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted ApeCoin_APE
NECESSARRRY AAAA START
1
1
2024-10-19
2024-11-05
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
95  ApeCoin APE  1.52033  ...        2024-10-19      2024-11-05
96  ApeCoin APE  1.52033  ...        2024-10-19      2024-11-05

[2 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Fellaz_FLZ
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.40679}]
success ya
UWAGA
db_FLZUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_FLZUSD': no such table: db_FLZUSD
trying
 inicjacja duplicates
duplicate info
[False]
dYdX_(Native)_DYDX
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.71022}]
success ya
UWAGA
db_DYDXUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.141602       NaN  ...              0                0       NaN
1      2023-01-02  1.181352       NaN  ...              0                0       NaN
2      2023-01-03  1.162531       NaN  ...              0                0       NaN
3      2023-01-04  1.179088       NaN  ...              0                0       NaN
4      2023-01-05  1.178569       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
60889  2024-11-27  1.667500  1.318627  ...              1                1  1.180550
60890  2024-11-28  1.588600  1.341124  ...              1                1  1.194868
60891  2024-11-29  1.644900  1.366439  ...              1                1  1.210658
60892  2024-11-30  1.720300  1.395927  ...              1                1  1.228540
60893  2024-12-01  1.705900  1.421759  ...              1                1  1.245290

[60894 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.71022}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.71022}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.141602       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.181352       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.162531       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.179088       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.178569       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
60890  2024-11-28  1.588600  1.341124  ...            1.0              1.0  1.194868
60891  2024-11-29  1.644900  1.366439  ...            1.0              1.0  1.210658
60892  2024-11-30  1.720300  1.395927  ...            1.0              1.0  1.228540
60893  2024-12-01  1.705900  1.421759  ...            1.0              1.0  1.245290
60894  2024-12-02  1.710220       NaN  ...            NaN              NaN       NaN

[60895 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted dYdX_(Native)_DYDX
NECESSARRRY AAAA START
1
1
2024-11-07
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
98  dYdX (Native) DYDX  1.71022  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Zcash_ZEC
[{'Date': datetime.date(2024, 12, 2), 'Price': 66.4447}]
success ya
UWAGA
db_ZECUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  37.189072  ...                0        NaN
1      2023-01-02  39.523411  ...                0        NaN
2      2023-01-03  39.985916  ...                0        NaN
3      2023-01-04  40.710484  ...                0        NaN
4      2023-01-05  39.746597  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  56.464000  ...                1  40.609994
27963  2024-11-28  55.740000  ...                1  41.140871
27964  2024-11-29  54.451000  ...                1  41.607893
27965  2024-11-30  59.265000  ...                1  42.227441
27966  2024-12-01  60.134000  ...                1  42.855741

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 66.4447}, {'Date': datetime.date(2024, 12, 2), 'Price': 66.4447}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  37.189072  ...              0.0        NaN
1      2023-01-02  39.523411  ...              0.0        NaN
2      2023-01-03  39.985916  ...              0.0        NaN
3      2023-01-04  40.710484  ...              0.0        NaN
4      2023-01-05  39.746597  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  55.740000  ...              1.0  41.140871
27964  2024-11-29  54.451000  ...              1.0  41.607893
27965  2024-11-30  59.265000  ...              1.0  42.227441
27966  2024-12-01  60.134000  ...              1.0  42.855741
27967  2024-12-02  66.444700  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Zcash_ZEC
NECESSARRRY AAAA START
1
1
2024-10-14
2024-10-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
99  Zcash ZEC  66.4447  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Aerodrome_Finance_AERO
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.53997}]
success ya
UWAGA
db_AEROUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-05  1.38600       NaN  ...       NaN              0                0
1    2024-04-06  1.37900       NaN  ...       NaN              0                0
2    2024-04-07  1.89100       NaN  ...       NaN              0                0
3    2024-04-08  1.89800       NaN  ...       NaN              0                0
4    2024-04-09  1.86500       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
236  2024-11-27  1.42110  1.321056  ...  0.946103              1                1
237  2024-11-28  1.38905  1.326722  ...  0.948269              1                1
238  2024-11-29  1.41213  1.333839  ...  0.950664              1                1
239  2024-11-30  1.47179  1.345335  ...  0.953283              1                1
240  2024-12-01  1.57805  1.364728  ...  0.955544              1                1

[241 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.53997}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.53997}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-05  1.38600       NaN  ...       NaN            0.0              0.0
1    2024-04-06  1.37900       NaN  ...       NaN            0.0              0.0
2    2024-04-07  1.89100       NaN  ...       NaN            0.0              0.0
3    2024-04-08  1.89800       NaN  ...       NaN            0.0              0.0
4    2024-04-09  1.86500       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
237  2024-11-28  1.38905  1.326722  ...  0.948269            1.0              1.0
238  2024-11-29  1.41213  1.333839  ...  0.950664            1.0              1.0
239  2024-11-30  1.47179  1.345335  ...  0.953283            1.0              1.0
240  2024-12-01  1.57805  1.364728  ...  0.955544            1.0              1.0
241  2024-12-02  1.53997       NaN  ...       NaN            NaN              NaN

[242 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Aerodrome_Finance_AERO
NECESSARRRY AAAA START
1
1
2024-09-22
2024-10-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                       Name    Price  ...  middle_flip_date  long_flip_date
100  Aerodrome Finance AERO  1.53997  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
 remove duplicates sprawdzone
duplicate info
[False, None, None]
Conflux_Network_CFX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}]
success ya
UWAGA
db_CFXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.022144       NaN  ...              0                0       NaN
1    2023-01-02  0.022516       NaN  ...              0                0       NaN
2    2023-01-03  0.022470       NaN  ...              0                0       NaN
3    2023-01-04  0.022849       NaN  ...              0                0       NaN
4    2023-01-05  0.022830       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.190660  0.171016  ...              0                0  0.188065
558  2024-11-29  0.196300  0.173123  ...              0                0  0.188354
559  2024-11-30  0.198270  0.175218  ...              0                0  0.188702
560  2024-12-01  0.228400  0.179650  ...              0                0  0.190095
561  2024-12-01  0.228400  0.183713  ...              0                0  0.191439

[562 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.022144       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.022516       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.022470       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.022849       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.022830       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
558  2024-11-29  0.196300  0.173123  ...            0.0              0.0  0.188354
559  2024-11-30  0.198270  0.175218  ...            0.0              0.0  0.188702
560  2024-12-01  0.228400  0.179650  ...            0.0              0.0  0.190095
561  2024-12-01  0.228400  0.183713  ...            0.0              0.0  0.191439
562  2024-12-02  0.219090       NaN  ...            NaN              NaN       NaN

[563 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Conflux_Network_CFX
NECESSARRRY AAAA START
0
0
2024-04-16
2024-04-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
101  Conflux Network CFX  0.21909  ...              None            None
102  Conflux Network CFX  0.21909  ...              None            None

[2 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Conflux_Network_CFX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}]
success ya
UWAGA
db_CFXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.022144       NaN  ...              0                0       NaN
1    2023-01-02  0.022516       NaN  ...              0                0       NaN
2    2023-01-03  0.022470       NaN  ...              0                0       NaN
3    2023-01-04  0.022849       NaN  ...              0                0       NaN
4    2023-01-05  0.022830       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
558  2024-11-29  0.196300  0.173123  ...              0                0  0.188354
559  2024-11-30  0.198270  0.175218  ...              0                0  0.188702
560  2024-12-01  0.228400  0.179650  ...              0                0  0.190095
561  2024-12-01  0.228400  0.183713  ...              0                0  0.191439
562  2024-12-02  0.219090  0.186661  ...              0                0  0.192409

[563 rows x 8 columns]
last_db_date_data
2024-12-02
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.022144       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.022516       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.022470       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.022849       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.022830       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
559  2024-11-30  0.198270  0.175218  ...            0.0              0.0  0.188702
560  2024-12-01  0.228400  0.179650  ...            0.0              0.0  0.190095
561  2024-12-01  0.228400  0.183713  ...            0.0              0.0  0.191439
562  2024-12-02  0.219090  0.186661  ...            0.0              0.0  0.192409
563  2024-12-02  0.219090       NaN  ...            NaN              NaN       NaN

[564 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Conflux_Network_CFX
NECESSARRRY AAAA START
0
0
2024-04-16
2024-04-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
101  Conflux Network CFX  0.21909  ...        2024-04-16      2024-04-29
102  Conflux Network CFX  0.21909  ...        2024-04-16      2024-04-29

[2 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Conflux_Network_CFX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}]
success ya
UWAGA
db_CFXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.022144       NaN  ...              0                0       NaN
1    2023-01-02  0.022516       NaN  ...              0                0       NaN
2    2023-01-03  0.022470       NaN  ...              0                0       NaN
3    2023-01-04  0.022849       NaN  ...              0                0       NaN
4    2023-01-05  0.022830       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
559  2024-11-30  0.198270  0.175218  ...              0                0  0.188702
560  2024-12-01  0.228400  0.179650  ...              0                0  0.190095
561  2024-12-01  0.228400  0.183713  ...              0                0  0.191439
562  2024-12-02  0.219090  0.186661  ...              0                0  0.192409
563  2024-12-02  0.219090  0.189363  ...              0                0  0.193345

[564 rows x 8 columns]
last_db_date_data
2024-12-02
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.022144       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.022516       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.022470       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.022849       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.022830       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
560  2024-12-01  0.228400  0.179650  ...            0.0              0.0  0.190095
561  2024-12-01  0.228400  0.183713  ...            0.0              0.0  0.191439
562  2024-12-02  0.219090  0.186661  ...            0.0              0.0  0.192409
563  2024-12-02  0.219090  0.189363  ...            0.0              0.0  0.193345
564  2024-12-02  0.219090       NaN  ...            NaN              NaN       NaN

[565 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Conflux_Network_CFX
NECESSARRRY AAAA START
0
0
2024-04-16
2024-04-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
101  Conflux Network CFX  0.21909  ...        2024-04-16      2024-04-29
102  Conflux Network CFX  0.21909  ...        2024-04-16      2024-04-29

[2 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Conflux_Network_CFX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}]
success ya
UWAGA
db_CFXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.022144       NaN  ...              0                0       NaN
1    2023-01-02  0.022516       NaN  ...              0                0       NaN
2    2023-01-03  0.022470       NaN  ...              0                0       NaN
3    2023-01-04  0.022849       NaN  ...              0                0       NaN
4    2023-01-05  0.022830       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
560  2024-12-01  0.228400  0.179650  ...              0                0  0.190095
561  2024-12-01  0.228400  0.183713  ...              0                0  0.191439
562  2024-12-02  0.219090  0.186661  ...              0                0  0.192409
563  2024-12-02  0.219090  0.189363  ...              0                0  0.193345
564  2024-12-02  0.219090  0.191840  ...              0                0  0.194249

[565 rows x 8 columns]
last_db_date_data
2024-12-02
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.21909}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.022144       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.022516       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.022470       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.022849       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.022830       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
561  2024-12-01  0.228400  0.183713  ...            0.0              0.0  0.191439
562  2024-12-02  0.219090  0.186661  ...            0.0              0.0  0.192409
563  2024-12-02  0.219090  0.189363  ...            0.0              0.0  0.193345
564  2024-12-02  0.219090  0.191840  ...            0.0              0.0  0.194249
565  2024-12-02  0.219090       NaN  ...            NaN              NaN       NaN

[566 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Conflux_Network_CFX
NECESSARRRY AAAA START
1
1
2024-11-23
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
101  Conflux Network CFX  0.21909  ...        2024-04-16      2024-04-29
102  Conflux Network CFX  0.21909  ...        2024-04-16      2024-04-29

[2 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
GateToken_GT
[{'Date': datetime.date(2024, 12, 2), 'Price': 11.3637}]
success ya
UWAGA
db_GTUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    3.009087  ...              0                0
1    2023-01-02 00:00:00    3.099051  ...              0                0
2    2023-01-03 00:00:00    3.223272  ...              0                0
3    2023-01-04 00:00:00    3.268408  ...              0                0
4    2023-01-05 00:00:00    3.200110  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  746.704000  ...              1                1
469           2024-04-14  694.488000  ...              1                1
470           2024-04-15  692.906000  ...              1                1
471           2024-04-16  682.183000  ...              1                1
472           2024-04-17    6.658460  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 8.14129}, {'Date': datetime.date(2024, 5, 11), 'Price': 8.09402}, {'Date': datetime.date(2024, 5, 12), 'Price': 8.11003}, {'Date': datetime.date(2024, 5, 13), 'Price': 8.13025}, {'Date': datetime.date(2024, 5, 14), 'Price': 7.95945}, {'Date': datetime.date(2024, 5, 15), 'Price': 8.10319}, {'Date': datetime.date(2024, 5, 16), 'Price': 7.95117}, {'Date': datetime.date(2024, 5, 17), 'Price': 7.97779}, {'Date': datetime.date(2024, 5, 18), 'Price': 7.91236}, {'Date': datetime.date(2024, 5, 19), 'Price': 7.86492}, {'Date': datetime.date(2024, 5, 20), 'Price': 8.08512}, {'Date': datetime.date(2024, 5, 21), 'Price': 8.20932}, {'Date': datetime.date(2024, 5, 22), 'Price': 7.96781}, {'Date': datetime.date(2024, 5, 23), 'Price': 7.84769}, {'Date': datetime.date(2024, 5, 24), 'Price': 7.95675}, {'Date': datetime.date(2024, 5, 25), 'Price': 7.94747}, {'Date': datetime.date(2024, 5, 26), 'Price': 7.94747}, {'Date': datetime.date(2024, 5, 27), 'Price': 8.08674}, {'Date': datetime.date(2024, 5, 28), 'Price': 7.97569}, {'Date': datetime.date(2024, 5, 29), 'Price': 8.04357}, {'Date': datetime.date(2024, 5, 30), 'Price': 8.17445}, {'Date': datetime.date(2024, 5, 31), 'Price': 8.16686}, {'Date': datetime.date(2024, 6, 1), 'Price': 8.21886}, {'Date': datetime.date(2024, 6, 2), 'Price': 8.19526}, {'Date': datetime.date(2024, 6, 3), 'Price': 8.3515}, {'Date': datetime.date(2024, 6, 4), 'Price': 8.49296}, {'Date': datetime.date(2024, 6, 5), 'Price': 8.90888}, {'Date': datetime.date(2024, 6, 6), 'Price': 8.85776}, {'Date': datetime.date(2024, 6, 8), 'Price': 8.47155}, {'Date': datetime.date(2024, 6, 9), 'Price': 8.52424}, {'Date': datetime.date(2024, 6, 10), 'Price': 8.59707}, {'Date': datetime.date(2024, 6, 10), 'Price': 8.5767}, {'Date': datetime.date(2024, 6, 11), 'Price': 8.19927}, {'Date': datetime.date(2024, 6, 12), 'Price': 8.44648}, {'Date': datetime.date(2024, 6, 13), 'Price': 8.20143}, {'Date': datetime.date(2024, 6, 14), 'Price': 8.2236}, {'Date': datetime.date(2024, 6, 15), 'Price': 8.37091}, {'Date': datetime.date(2024, 6, 16), 'Price': 8.57026}, {'Date': datetime.date(2024, 6, 17), 'Price': 8.38916}, {'Date': datetime.date(2024, 6, 18), 'Price': 7.81719}, {'Date': datetime.date(2024, 6, 19), 'Price': 8.06085}, {'Date': datetime.date(2024, 6, 20), 'Price': 8.08319}, {'Date': datetime.date(2024, 6, 21), 'Price': 7.87812}, {'Date': datetime.date(2024, 6, 22), 'Price': 7.91477}, {'Date': datetime.date(2024, 6, 23), 'Price': 7.69408}, {'Date': datetime.date(2024, 6, 24), 'Price': 7.45479}, {'Date': datetime.date(2024, 6, 25), 'Price': 7.76842}, {'Date': datetime.date(2024, 6, 26), 'Price': 7.725}, {'Date': datetime.date(2024, 6, 27), 'Price': 7.815}, {'Date': datetime.date(2024, 6, 28), 'Price': 7.69356}, {'Date': datetime.date(2024, 6, 29), 'Price': 7.76444}, {'Date': datetime.date(2024, 6, 30), 'Price': 7.84832}, {'Date': datetime.date(2024, 7, 1), 'Price': 7.77903}, {'Date': datetime.date(2024, 11, 17), 'Price': 9.65037}, {'Date': datetime.date(2024, 11, 18), 'Price': 9.67866}, {'Date': datetime.date(2024, 11, 19), 'Price': 9.71452}, {'Date': datetime.date(2024, 11, 20), 'Price': 9.67891}, {'Date': datetime.date(2024, 11, 21), 'Price': 9.96787}, {'Date': datetime.date(2024, 11, 22), 'Price': 10.1728}, {'Date': datetime.date(2024, 11, 23), 'Price': 11.0288}, {'Date': datetime.date(2024, 11, 24), 'Price': 11.1628}, {'Date': datetime.date(2024, 11, 25), 'Price': 10.9592}, {'Date': datetime.date(2024, 11, 26), 'Price': 10.5379}, {'Date': datetime.date(2024, 11, 27), 'Price': 11.2201}, {'Date': datetime.date(2024, 11, 28), 'Price': 11.2677}, {'Date': datetime.date(2024, 11, 29), 'Price': 11.3439}, {'Date': datetime.date(2024, 11, 30), 'Price': 11.4488}, {'Date': datetime.date(2024, 12, 1), 'Price': 11.5695}, {'Date': datetime.date(2024, 12, 2), 'Price': 11.3637}, {'Date': datetime.date(2024, 12, 2), 'Price': 11.3637}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Akash_Network_AKT
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.05181}]
success ya
UWAGA
db_AKTUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  0.195166       NaN  ...       NaN              0                0
1    2023-01-02  0.200258       NaN  ...       NaN              0                0
2    2023-01-03  0.205159       NaN  ...       NaN              0                0
3    2023-01-04  0.205676       NaN  ...       NaN              0                0
4    2023-01-05  0.205095       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
556  2024-11-27  4.111970  3.706547  ...  3.940428              1                0
557  2024-11-28  4.292360  3.755364  ...  3.952777              1                0
558  2024-11-29  4.253100  3.796842  ...  3.963314              1                0
559  2024-11-30  4.291400  3.838056  ...  3.974826              1                0
560  2024-12-01  4.371820  3.882536  ...  3.988756              1                0

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.05181}, {'Date': datetime.date(2024, 12, 2), 'Price': 4.05181}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  0.195166       NaN  ...       NaN            0.0              0.0
1    2023-01-02  0.200258       NaN  ...       NaN            0.0              0.0
2    2023-01-03  0.205159       NaN  ...       NaN            0.0              0.0
3    2023-01-04  0.205676       NaN  ...       NaN            0.0              0.0
4    2023-01-05  0.205095       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
557  2024-11-28  4.292360  3.755364  ...  3.952777            1.0              0.0
558  2024-11-29  4.253100  3.796842  ...  3.963314            1.0              0.0
559  2024-11-30  4.291400  3.838056  ...  3.974826            1.0              0.0
560  2024-12-01  4.371820  3.882536  ...  3.988756            1.0              0.0
561  2024-12-02  4.051810       NaN  ...       NaN            NaN              NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Akash_Network_AKT
NECESSARRRY AAAA START
0
0
2024-06-08
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
104  Akash Network AKT  4.05181  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
eCash_XEC
[{'Date': datetime.date(2024, 12, 2), 'Price': 5e-05}]
success ya
UWAGA
db_XECUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000022       NaN  ...              0                0       NaN
1      2023-01-02  0.000022       NaN  ...              0                0       NaN
2      2023-01-03  0.000022       NaN  ...              0                0       NaN
3      2023-01-04  0.000023       NaN  ...              0                0       NaN
4      2023-01-05  0.000025       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27967  2024-11-26  0.000046  0.000043  ...              1                1  0.000039
27968  2024-11-27  0.000049  0.000043  ...              1                1  0.000039
27969  2024-11-28  0.000049  0.000044  ...              1                1  0.000040
27970  2024-11-29  0.000050  0.000044  ...              1                1  0.000040
27971  2024-12-01  0.000052  0.000045  ...              1                1  0.000040

[27972 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 5e-05}, {'Date': datetime.date(2024, 12, 2), 'Price': 5e-05}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000022       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.000022       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.000022       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.000023       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.000025       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27968  2024-11-27  0.000049  0.000043  ...            1.0              1.0  0.000039
27969  2024-11-28  0.000049  0.000044  ...            1.0              1.0  0.000040
27970  2024-11-29  0.000050  0.000044  ...            1.0              1.0  0.000040
27971  2024-12-01  0.000052  0.000045  ...            1.0              1.0  0.000040
27972  2024-12-02  0.000050       NaN  ...            NaN              NaN       NaN

[27973 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted eCash_XEC
NECESSARRRY AAAA START
1
1
2024-11-07
2024-11-09
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
105  eCash XEC  0.00005  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Fasttoken_FTN
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.17752}]
success ya
UWAGA
db_FTNUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-20 00:00:00    0.388110  ...              0                0
1    2023-01-21 00:00:00    0.418107  ...              0                0
2    2023-01-22 00:00:00    0.414505  ...              0                0
3    2023-01-23 00:00:00    0.446979  ...              0                0
4    2023-01-24 00:00:00    0.454585  ...              0                0
..                   ...         ...  ...            ...              ...
449           2024-04-13  177.109000  ...              1                1
450           2024-04-14  178.795000  ...              1                1
451           2024-04-15   17.735000  ...              1                1
452           2024-04-16  178.451000  ...              1                1
453           2024-04-17    1.771180  ...              0                1

[454 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 1.95061}, {'Date': datetime.date(2024, 5, 10), 'Price': 1.94765}, {'Date': datetime.date(2024, 5, 11), 'Price': 1.94827}, {'Date': datetime.date(2024, 5, 12), 'Price': 1.94827}, {'Date': datetime.date(2024, 5, 13), 'Price': 1.95507}, {'Date': datetime.date(2024, 5, 14), 'Price': 1.95101}, {'Date': datetime.date(2024, 5, 15), 'Price': 1.96756}, {'Date': datetime.date(2024, 5, 16), 'Price': 1.92892}, {'Date': datetime.date(2024, 5, 17), 'Price': 1.95109}, {'Date': datetime.date(2024, 5, 18), 'Price': 1.97139}, {'Date': datetime.date(2024, 5, 19), 'Price': 2.0075}, {'Date': datetime.date(2024, 5, 20), 'Price': 1.99896}, {'Date': datetime.date(2024, 5, 21), 'Price': 1.98369}, {'Date': datetime.date(2024, 5, 22), 'Price': 2.00776}, {'Date': datetime.date(2024, 5, 23), 'Price': 2.02898}, {'Date': datetime.date(2024, 5, 24), 'Price': 2.08308}, {'Date': datetime.date(2024, 5, 25), 'Price': 2.15263}, {'Date': datetime.date(2024, 5, 26), 'Price': 2.15263}, {'Date': datetime.date(2024, 5, 27), 'Price': 2.19977}, {'Date': datetime.date(2024, 5, 28), 'Price': 2.21391}, {'Date': datetime.date(2024, 5, 29), 'Price': 2.21114}, {'Date': datetime.date(2024, 5, 30), 'Price': 2.21179}, {'Date': datetime.date(2024, 5, 31), 'Price': 2.21053}, {'Date': datetime.date(2024, 6, 1), 'Price': 2.21499}, {'Date': datetime.date(2024, 6, 2), 'Price': 2.21462}, {'Date': datetime.date(2024, 6, 3), 'Price': 2.21579}, {'Date': datetime.date(2024, 6, 4), 'Price': 2.21359}, {'Date': datetime.date(2024, 6, 5), 'Price': 2.21705}, {'Date': datetime.date(2024, 6, 6), 'Price': 2.21347}, {'Date': datetime.date(2024, 6, 7), 'Price': 2.21223}, {'Date': datetime.date(2024, 6, 8), 'Price': 2.21527}, {'Date': datetime.date(2024, 6, 9), 'Price': 2.21654}, {'Date': datetime.date(2024, 6, 10), 'Price': 2.21637}, {'Date': datetime.date(2024, 6, 11), 'Price': 2.21426}, {'Date': datetime.date(2024, 6, 12), 'Price': 2.21726}, {'Date': datetime.date(2024, 6, 13), 'Price': 2.21547}, {'Date': datetime.date(2024, 6, 14), 'Price': 2.21477}, {'Date': datetime.date(2024, 6, 15), 'Price': 2.2125}, {'Date': datetime.date(2024, 6, 16), 'Price': 2.2125}, {'Date': datetime.date(2024, 6, 17), 'Price': 2.21431}, {'Date': datetime.date(2024, 6, 18), 'Price': 2.21652}, {'Date': datetime.date(2024, 6, 19), 'Price': 2.21354}, {'Date': datetime.date(2024, 6, 20), 'Price': 2.21256}, {'Date': datetime.date(2024, 6, 21), 'Price': 2.21444}, {'Date': datetime.date(2024, 6, 22), 'Price': 2.21562}, {'Date': datetime.date(2024, 6, 23), 'Price': 2.213}, {'Date': datetime.date(2024, 6, 24), 'Price': 2.21218}, {'Date': datetime.date(2024, 6, 25), 'Price': 2.21811}, {'Date': datetime.date(2024, 6, 26), 'Price': 2.21428}, {'Date': datetime.date(2024, 6, 27), 'Price': 2.21162}, {'Date': datetime.date(2024, 6, 28), 'Price': 2.21031}, {'Date': datetime.date(2024, 6, 29), 'Price': 2.21206}, {'Date': datetime.date(2024, 6, 30), 'Price': 2.21476}, {'Date': datetime.date(2024, 7, 1), 'Price': 2.21273}, {'Date': datetime.date(2024, 11, 17), 'Price': 3.07687}, {'Date': datetime.date(2024, 11, 18), 'Price': 3.09474}, {'Date': datetime.date(2024, 11, 19), 'Price': 3.10784}, {'Date': datetime.date(2024, 11, 20), 'Price': 3.11281}, {'Date': datetime.date(2024, 11, 21), 'Price': 3.14218}, {'Date': datetime.date(2024, 11, 22), 'Price': 3.14556}, {'Date': datetime.date(2024, 11, 23), 'Price': 3.16107}, {'Date': datetime.date(2024, 11, 24), 'Price': 3.15877}, {'Date': datetime.date(2024, 11, 25), 'Price': 3.15597}, {'Date': datetime.date(2024, 11, 26), 'Price': 3.15147}, {'Date': datetime.date(2024, 11, 27), 'Price': 3.16059}, {'Date': datetime.date(2024, 11, 28), 'Price': 3.16526}, {'Date': datetime.date(2024, 11, 29), 'Price': 3.17637}, {'Date': datetime.date(2024, 11, 30), 'Price': 3.17295}, {'Date': datetime.date(2024, 12, 1), 'Price': 3.1823}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.17752}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.17752}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Mina_MINA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.80663}]
success ya
UWAGA
db_MINAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.432849       NaN  ...              0                0       NaN
1      2023-01-02  0.435530       NaN  ...              0                0       NaN
2      2023-01-03  0.462590       NaN  ...              0                0       NaN
3      2023-01-04  0.461901       NaN  ...              0                0       NaN
4      2023-01-05  0.449567       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
30378  2024-11-26  0.762400  0.656882  ...              1                1  0.595257
30379  2024-11-27  0.793200  0.668242  ...              1                1  0.602202
30380  2024-11-28  0.777300  0.677330  ...              1                1  0.608346
30381  2024-11-29  0.803600  0.687853  ...              1                1  0.615197
30382  2024-11-30  0.852900  0.701607  ...              1                1  0.623537

[30383 rows x 8 columns]
last_db_date_data
2024-11-30
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.80663}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.80663}]
there are no available prices for all missing dates
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Mina_MINA
NECESSARRRY AAAA START
1
1
2024-09-26
2024-11-10
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
107  Mina MINA  0.80663  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Chiliz_CHZ
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10388}]
success ya
UWAGA
db_CHZUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.101065       NaN  ...              0                0       NaN
1    2023-01-02  0.101890       NaN  ...              0                0       NaN
2    2023-01-03  0.102697       NaN  ...              0                0       NaN
3    2023-01-04  0.104474       NaN  ...              0                0       NaN
4    2023-01-05  0.111890       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.093220  0.086576  ...              0                0  0.098630
557  2024-11-28  0.092500  0.087069  ...              0                0  0.098415
558  2024-11-29  0.100740  0.088208  ...              0                0  0.098497
559  2024-11-30  0.100780  0.089256  ...              0                0  0.098577
560  2024-12-01  0.108480  0.090858  ...              0                0  0.098924

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10388}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.10388}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.101065       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.101890       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.102697       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.104474       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.111890       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.092500  0.087069  ...            0.0              0.0  0.098415
558  2024-11-29  0.100740  0.088208  ...            0.0              0.0  0.098497
559  2024-11-30  0.100780  0.089256  ...            0.0              0.0  0.098577
560  2024-12-01  0.108480  0.090858  ...            0.0              0.0  0.098924
561  2024-12-02  0.103880       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Chiliz_CHZ
NECESSARRRY AAAA START
0
0
2024-06-14
2024-06-13
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
108  Chiliz CHZ  0.10388  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Curve_DAO_Token_CRV
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.76329}]
success ya
UWAGA
db_CRVUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.526655       NaN  ...              0                0       NaN
1    2023-01-02  0.533092       NaN  ...              0                0       NaN
2    2023-01-03  0.529859       NaN  ...              0                0       NaN
3    2023-01-04  0.554638       NaN  ...              0                0       NaN
4    2023-01-05  0.542809       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.503510  0.407493  ...              0                0  0.407554
557  2024-11-28  0.489930  0.414363  ...              0                1  0.410445
558  2024-11-29  0.540010  0.424833  ...              1                1  0.414991
559  2024-11-30  0.539430  0.434383  ...              1                1  0.419357
560  2024-12-01  0.660260  0.453206  ...              1                1  0.427810

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.76329}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.76329}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.526655       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.533092       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.529859       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.554638       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.542809       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.489930  0.414363  ...            0.0              1.0  0.410445
558  2024-11-29  0.540010  0.424833  ...            1.0              1.0  0.414991
559  2024-11-30  0.539430  0.434383  ...            1.0              1.0  0.419357
560  2024-12-01  0.660260  0.453206  ...            1.0              1.0  0.427810
561  2024-12-02  0.763290       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Curve_DAO_Token_CRV
NECESSARRRY AAAA START
1
1
2024-11-28
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
109  Curve DAO Token CRV  0.76329  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Nexo_NEXO
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.45583}]
success ya
UWAGA
db_NEXOUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.671644  ...              0                0
1    2023-01-02 00:00:00    0.673133  ...              0                0
2    2023-01-03 00:00:00    0.689106  ...              0                0
3    2023-01-04 00:00:00    0.737663  ...              0                0
4    2023-01-05 00:00:00    0.707262  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  132.353000  ...              1                1
469           2024-04-14  128.116000  ...              1                1
470           2024-04-15  123.567000  ...              1                1
471           2024-04-16  126.576000  ...              1                1
472           2024-04-17    1.201750  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 1.25604}, {'Date': datetime.date(2024, 5, 10), 'Price': 1.21881}, {'Date': datetime.date(2024, 5, 11), 'Price': 1.22872}, {'Date': datetime.date(2024, 5, 12), 'Price': 1.22872}, {'Date': datetime.date(2024, 5, 13), 'Price': 1.23373}, {'Date': datetime.date(2024, 5, 14), 'Price': 1.21517}, {'Date': datetime.date(2024, 5, 15), 'Price': 1.28545}, {'Date': datetime.date(2024, 5, 16), 'Price': 1.26279}, {'Date': datetime.date(2024, 5, 18), 'Price': 1.32956}, {'Date': datetime.date(2024, 5, 19), 'Price': 1.30505}, {'Date': datetime.date(2024, 5, 20), 'Price': 1.44849}, {'Date': datetime.date(2024, 5, 21), 'Price': 1.44796}, {'Date': datetime.date(2024, 5, 22), 'Price': 1.42534}, {'Date': datetime.date(2024, 5, 23), 'Price': 1.41719}, {'Date': datetime.date(2024, 5, 25), 'Price': 1.4116}, {'Date': datetime.date(2024, 5, 26), 'Price': 1.4116}, {'Date': datetime.date(2024, 5, 28), 'Price': 1.45523}, {'Date': datetime.date(2024, 5, 29), 'Price': 1.45045}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.45643}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.43581}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.42273}, {'Date': datetime.date(2024, 6, 2), 'Price': 1.40338}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.42819}, {'Date': datetime.date(2024, 6, 4), 'Price': 1.46438}, {'Date': datetime.date(2024, 6, 5), 'Price': 1.48935}, {'Date': datetime.date(2024, 6, 6), 'Price': 1.47421}, {'Date': datetime.date(2024, 6, 7), 'Price': 1.47815}, {'Date': datetime.date(2024, 6, 7), 'Price': 1.45442}, {'Date': datetime.date(2024, 6, 8), 'Price': 1.43423}, {'Date': datetime.date(2024, 6, 9), 'Price': 1.44585}, {'Date': datetime.date(2024, 6, 10), 'Price': 1.45916}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.40152}, {'Date': datetime.date(2024, 6, 12), 'Price': 1.3954}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.37141}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.36564}, {'Date': datetime.date(2024, 6, 14), 'Price': 1.33221}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.35917}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.34422}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.32274}, {'Date': datetime.date(2024, 6, 18), 'Price': 1.21592}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.27795}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.2326}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.25092}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.22448}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.2103}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.15493}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.15775}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.1988}, {'Date': datetime.date(2024, 6, 29), 'Price': 1.17326}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.19811}, {'Date': datetime.date(2024, 7, 1), 'Price': 1.22415}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.23578}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.24138}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.24592}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.23958}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.26206}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.31435}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.33319}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.37601}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.4021}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.32602}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.42471}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.40083}, {'Date': datetime.date(2024, 11, 29), 'Price': 1.43847}, {'Date': datetime.date(2024, 11, 30), 'Price': 1.43282}, {'Date': datetime.date(2024, 12, 1), 'Price': 1.47274}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.45583}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.45583}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Pendle_PENDLE
[{'Date': datetime.date(2024, 12, 2), 'Price': 5.61254}]
success ya
UWAGA
db_PENDLEUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.045861       NaN  ...              0                0       NaN
1      2023-01-02  0.047120       NaN  ...              0                0       NaN
2      2023-01-03  0.047427       NaN  ...              0                0       NaN
3      2023-01-04  0.049069       NaN  ...              0                0       NaN
4      2023-01-05  0.047927       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27358  2024-11-27  5.637300  5.179569  ...              1                1  4.807137
27359  2024-11-28  5.492600  5.205655  ...              1                1  4.831188
27360  2024-11-29  5.620800  5.240250  ...              1                1  4.858894
27361  2024-11-30  5.750000  5.282729  ...              1                1  4.890161
27362  2024-12-01  5.835500  5.328794  ...              1                1  4.923330

[27363 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 5.61254}, {'Date': datetime.date(2024, 12, 2), 'Price': 5.61254}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.045861       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.047120       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.047427       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.049069       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.047927       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27359  2024-11-28  5.492600  5.205655  ...            1.0              1.0  4.831188
27360  2024-11-29  5.620800  5.240250  ...            1.0              1.0  4.858894
27361  2024-11-30  5.750000  5.282729  ...            1.0              1.0  4.890161
27362  2024-12-01  5.835500  5.328794  ...            1.0              1.0  4.923330
27363  2024-12-02  5.612540       NaN  ...            NaN              NaN       NaN

[27364 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Pendle_PENDLE
NECESSARRRY AAAA START
1
1
2024-09-23
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
111  Pendle PENDLE  5.61254  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Wormhole_W
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.32707}]
success ya
UWAGA
db_WUSD
COINDBBB
/home/entukio/projects/scrapper_crypto_top/venv/lib/python3.11/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log10
  result = getattr(ufunc, method)(*inputs, **kwargs)
           Date    Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-04-03  1.30970       NaN  ...             0                0       NaN
1    2024-04-04  1.07490       NaN  ...             0                0       NaN
2    2024-04-05  0.96970       NaN  ...             0                0       NaN
3    2024-04-06  1.05640       NaN  ...             0                0       NaN
4    2024-04-07  1.00810       NaN  ...             0                0       NaN
..          ...      ...       ...  ...           ...              ...       ...
286  2024-11-27  0.30077  0.317459  ...             0                0  0.419513
287  2024-11-28  0.30639  0.316537  ...             0                0  0.415544
288  2024-11-29  0.30571  0.315635  ...             0                0  0.411690
289  2024-11-30  0.30288  0.314572  ...             0                0  0.407872
290  2024-12-01  0.35204  0.317694  ...             0                0  0.405913

[291 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.32707}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.32707}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-04-03  1.30970       NaN  ...           0.0              0.0       NaN
1    2024-04-04  1.07490       NaN  ...           0.0              0.0       NaN
2    2024-04-05  0.96970       NaN  ...           0.0              0.0       NaN
3    2024-04-06  1.05640       NaN  ...           0.0              0.0       NaN
4    2024-04-07  1.00810       NaN  ...           0.0              0.0       NaN
..          ...      ...       ...  ...           ...              ...       ...
287  2024-11-28  0.30639  0.316537  ...           0.0              0.0  0.415544
288  2024-11-29  0.30571  0.315635  ...           0.0              0.0  0.411690
289  2024-11-30  0.30288  0.314572  ...           0.0              0.0  0.407872
290  2024-12-01  0.35204  0.317694  ...           0.0              0.0  0.405913
291  2024-12-02  0.32707       NaN  ...           NaN              NaN       NaN

[292 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Wormhole_W
NECESSARRRY AAAA START
0
0
2024-04-18
2024-05-05
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
112  Wormhole W  0.32707  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MOG_Coin_MOG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_MOGUSD
COINDBBB
            Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0     2023-07-21  0.000000       NaN  ...              0                0       NaN
1     2023-07-22  0.000000       NaN  ...              0                0       NaN
2     2023-07-23  0.000000       NaN  ...              0                0       NaN
3     2023-07-24  0.000000       NaN  ...              0                0       NaN
4     2023-07-25  0.000000       NaN  ...              0                0       NaN
...          ...       ...       ...  ...            ...              ...       ...
2438  2024-11-27  0.000003  0.000002  ...              1                1  0.000002
2439  2024-11-28  0.000002  0.000002  ...              1                1  0.000002
2440  2024-11-29  0.000003  0.000002  ...              1                1  0.000002
2441  2024-11-30  0.000003  0.000002  ...              1                1  0.000002
2442  2024-12-01  0.000002  0.000002  ...              1                1  0.000002

[2443 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0     2023-07-21  0.000000       NaN  ...            0.0              0.0       NaN
1     2023-07-22  0.000000       NaN  ...            0.0              0.0       NaN
2     2023-07-23  0.000000       NaN  ...            0.0              0.0       NaN
3     2023-07-24  0.000000       NaN  ...            0.0              0.0       NaN
4     2023-07-25  0.000000       NaN  ...            0.0              0.0       NaN
...          ...       ...       ...  ...            ...              ...       ...
2439  2024-11-28  0.000002  0.000002  ...            1.0              1.0  0.000002
2440  2024-11-29  0.000003  0.000002  ...            1.0              1.0  0.000002
2441  2024-11-30  0.000003  0.000002  ...            1.0              1.0  0.000002
2442  2024-12-01  0.000002  0.000002  ...            1.0              1.0  0.000002
2443  2024-12-02  0.000000       NaN  ...            NaN              NaN       NaN

[2444 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted MOG_Coin_MOG
NECESSARRRY AAAA START
1
1
2024-09-30
2024-10-11
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name  Price  ...  middle_flip_date  long_flip_date
113  MOG Coin MOG    0.0  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
PancakeSwap_CAKE
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.02794}]
success ya
UWAGA
db_CAKEUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  3.164245       NaN  ...       NaN              0                0
1    2023-01-02  3.189526       NaN  ...       NaN              0                0
2    2023-01-03  3.201914       NaN  ...       NaN              0                0
3    2023-01-04  3.291019       NaN  ...       NaN              0                0
4    2023-01-05  3.268777       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
555  2024-11-27  3.072020  2.326384  ...  2.473364              1                0
556  2024-11-28  3.028470  2.384891  ...  2.492842              1                0
557  2024-11-29  3.002980  2.436398  ...  2.510741              1                0
558  2024-11-30  2.990620  2.482583  ...  2.527579              1                0
559  2024-12-01  3.033030  2.528454  ...  2.545314              1                0

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.02794}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.02794}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  3.164245       NaN  ...       NaN            0.0              0.0
1    2023-01-02  3.189526       NaN  ...       NaN            0.0              0.0
2    2023-01-03  3.201914       NaN  ...       NaN            0.0              0.0
3    2023-01-04  3.291019       NaN  ...       NaN            0.0              0.0
4    2023-01-05  3.268777       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
556  2024-11-28  3.028470  2.384891  ...  2.492842            1.0              0.0
557  2024-11-29  3.002980  2.436398  ...  2.510741            1.0              0.0
558  2024-11-30  2.990620  2.482583  ...  2.527579            1.0              0.0
559  2024-12-01  3.033030  2.528454  ...  2.545314            1.0              0.0
560  2024-12-02  3.027940       NaN  ...       NaN            NaN              NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted PancakeSwap_CAKE
NECESSARRRY AAAA START
1
1
2024-12-02
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name    Price  ...  middle_flip_date  long_flip_date
114  PancakeSwap CAKE  3.02794  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
 remove duplicates sprawdzone
duplicate info
[False, None, None]
Notcoin_NOT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00844}]
success ya
UWAGA
db_NOTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_NOTUSD': no such table: db_NOTUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Notcoin_NOT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00844}]
success ya
UWAGA
db_NOTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_NOTUSD': no such table: db_NOTUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Notcoin_NOT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00844}]
success ya
UWAGA
db_NOTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_NOTUSD': no such table: db_NOTUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Notcoin_NOT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00844}]
success ya
UWAGA
db_NOTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_NOTUSD': no such table: db_NOTUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Synthetix_SNX
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.58275}]
success ya
UWAGA
db_SNXUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.475023       NaN  ...              0                0       NaN
1      2023-01-02  1.510254       NaN  ...              0                0       NaN
2      2023-01-03  1.529932       NaN  ...              0                0       NaN
3      2023-01-04  1.605037       NaN  ...              0                0       NaN
4      2023-01-05  1.541078       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27159  2024-11-27  2.415000  1.836618  ...              1                1  1.658037
27160  2024-11-28  2.381000  1.881984  ...              1                1  1.683404
27161  2024-11-29  2.378000  1.923318  ...              1                1  1.707776
27162  2024-11-30  2.631000  1.982292  ...              1                1  1.740170
27163  2024-12-01  2.526000  2.027601  ...              1                1  1.767743

[27164 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.58275}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.58275}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.475023       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.510254       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.529932       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.605037       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.541078       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27160  2024-11-28  2.381000  1.881984  ...            1.0              1.0  1.683404
27161  2024-11-29  2.378000  1.923318  ...            1.0              1.0  1.707776
27162  2024-11-30  2.631000  1.982292  ...            1.0              1.0  1.740170
27163  2024-12-01  2.526000  2.027601  ...            1.0              1.0  1.767743
27164  2024-12-02  2.582750       NaN  ...            NaN              NaN       NaN

[27165 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Synthetix_SNX
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
117  Synthetix SNX  2.58275  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Axelar_AXL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.98026}]
success ya
UWAGA
db_AXLUSD
COINDBBB
                   Date     Close     EMA23 EMA82 SMA200
0   2022-09-26 00:00:00  0.656165       NaN  None   None
1   2022-10-03 00:00:00  0.919745       NaN  None   None
2   2022-10-10 00:00:00  0.944574       NaN  None   None
3   2022-10-17 00:00:00  0.900367       NaN  None   None
4   2022-10-24 00:00:00  0.792034       NaN  None   None
..                  ...       ...       ...   ...    ...
73  2024-02-19 00:00:00  1.450644  0.868563  None   None
74  2024-02-26 00:00:00  2.370656  0.993738  None   None
75  2024-03-04 00:00:00  2.196962  1.094007  None   None
76  2024-03-11 00:00:00  1.912585  1.162221  None   None
77  2024-03-18 00:00:00  1.935923  1.226697  None   None

[78 rows x 5 columns]
last_db_date_data
2024-03-18
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 1.10829}, {'Date': datetime.date(2024, 5, 10), 'Price': 1.07429}, {'Date': datetime.date(2024, 5, 11), 'Price': 1.08352}, {'Date': datetime.date(2024, 5, 12), 'Price': 1.08352}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.98434}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.90192}, {'Date': datetime.date(2024, 5, 15), 'Price': 1.06114}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.9946}, {'Date': datetime.date(2024, 5, 17), 'Price': 1.04807}, {'Date': datetime.date(2024, 5, 18), 'Price': 1.01959}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.96971}, {'Date': datetime.date(2024, 5, 20), 'Price': 1.03917}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.98425}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.98574}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.89924}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.88456}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.90716}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.90716}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.96755}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.99456}, {'Date': datetime.date(2024, 5, 29), 'Price': 1.02673}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.09972}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.02975}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.05197}, {'Date': datetime.date(2024, 6, 2), 'Price': 1.05991}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.00181}, {'Date': datetime.date(2024, 6, 4), 'Price': 1.02334}, {'Date': datetime.date(2024, 6, 5), 'Price': 1.01252}, {'Date': datetime.date(2024, 6, 6), 'Price': 1.00915}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.9801}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.87062}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.87684}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.86358}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.74034}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.7977}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.74622}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.74202}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.75452}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.75452}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.69979}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.64014}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.63897}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.60577}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.63399}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.61256}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.62719}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.56072}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.58157}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.58258}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.59338}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.57796}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.57806}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.62424}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.65237}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.7428}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.8115}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.75461}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.72226}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.71181}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.71595}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.75694}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.8163}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.85874}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.76394}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.87483}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.92717}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.9425}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.98525}, {'Date': datetime.date(2024, 12, 1), 'Price': 1.02438}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.98026}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.98026}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
cat_in_a_dogs_world_MEW
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00929}]
success ya
UWAGA
db_MEWUSD
COINDBBB
           Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-04-03  0.006817       NaN  ...             0                0       NaN
1    2024-04-04  0.005900       NaN  ...             0                0       NaN
2    2024-04-05  0.004295       NaN  ...             0                0       NaN
3    2024-04-06  0.005312       NaN  ...             0                0       NaN
4    2024-04-07  0.004651       NaN  ...             0                0       NaN
..          ...       ...       ...  ...           ...              ...       ...
286  2024-11-27  0.009620  0.007805  ...             1                1  0.006165
287  2024-11-28  0.009410  0.007939  ...             1                1  0.006279
288  2024-11-29  0.009700  0.008085  ...             1                1  0.006399
289  2024-11-30  0.009500  0.008203  ...             1                1  0.006508
290  2024-12-01  0.009760  0.008333  ...             1                1  0.006622

[291 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00929}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00929}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-04-03  0.006817       NaN  ...           0.0              0.0       NaN
1    2024-04-04  0.005900       NaN  ...           0.0              0.0       NaN
2    2024-04-05  0.004295       NaN  ...           0.0              0.0       NaN
3    2024-04-06  0.005312       NaN  ...           0.0              0.0       NaN
4    2024-04-07  0.004651       NaN  ...           0.0              0.0       NaN
..          ...       ...       ...  ...           ...              ...       ...
287  2024-11-28  0.009410  0.007939  ...           1.0              1.0  0.006279
288  2024-11-29  0.009700  0.008085  ...           1.0              1.0  0.006399
289  2024-11-30  0.009500  0.008203  ...           1.0              1.0  0.006508
290  2024-12-01  0.009760  0.008333  ...           1.0              1.0  0.006622
291  2024-12-02  0.009290       NaN  ...           NaN              NaN       NaN

[292 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted cat_in_a_dogs_world_MEW
NECESSARRRY AAAA START
1
1
2024-11-17
2024-07-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                        Name    Price  ...  middle_flip_date  long_flip_date
119  cat in a dogs world MEW  0.00929  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ORDI_ORDI
[{'Date': datetime.date(2024, 12, 2), 'Price': 38.9405}]
success ya
UWAGA
db_ORDIUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-05-08  17.512890  ...                0        NaN
1      2023-05-09  19.322882  ...                0        NaN
2      2023-05-10  18.031324  ...                0        NaN
3      2023-05-11  12.375215  ...                0        NaN
4      2023-05-12  12.523836  ...                0        NaN
...           ...        ...  ...              ...        ...
25789  2024-11-27  40.240000  ...                1  36.588222
25790  2024-11-28  41.440000  ...                1  36.758460
25791  2024-11-29  41.000000  ...                1  36.907286
25792  2024-11-30  43.250000  ...                1  37.129837
25793  2024-12-01  41.090000  ...                1  37.268790

[25794 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 38.9405}, {'Date': datetime.date(2024, 12, 2), 'Price': 38.9405}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-05-08  17.512890  ...              0.0        NaN
1      2023-05-09  19.322882  ...              0.0        NaN
2      2023-05-10  18.031324  ...              0.0        NaN
3      2023-05-11  12.375215  ...              0.0        NaN
4      2023-05-12  12.523836  ...              0.0        NaN
...           ...        ...  ...              ...        ...
25790  2024-11-28  41.440000  ...              1.0  36.758460
25791  2024-11-29  41.000000  ...              1.0  36.907286
25792  2024-11-30  43.250000  ...              1.0  37.129837
25793  2024-12-01  41.090000  ...              1.0  37.268790
25794  2024-12-02  38.940500  ...              NaN        NaN

[25795 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted ORDI_ORDI
NECESSARRRY AAAA START
1
1
2024-11-09
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
120  ORDI ORDI  38.9405  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
FTX_Token_FTT
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.47491}]
success ya
UWAGA
db_FTTUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.858197       NaN  ...              0                0       NaN
1      2023-01-02  0.862300       NaN  ...              0                0       NaN
2      2023-01-03  0.885161       NaN  ...              0                0       NaN
3      2023-01-04  1.002601       NaN  ...              0                0       NaN
4      2023-01-05  0.944760       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27159  2024-11-27  2.329000  2.118956  ...              1                1  1.956000
27160  2024-11-28  2.268000  2.131376  ...              1                1  1.966947
27161  2024-11-29  2.336000  2.148428  ...              1                1  1.979897
27162  2024-11-30  2.384000  2.168059  ...              1                1  1.994076
27163  2024-12-01  2.531000  2.198304  ...              1                1  2.012915

[27164 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.47491}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.47491}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.858197       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.862300       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.885161       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.002601       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.944760       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27160  2024-11-28  2.268000  2.131376  ...            1.0              1.0  1.966947
27161  2024-11-29  2.336000  2.148428  ...            1.0              1.0  1.979897
27162  2024-11-30  2.384000  2.168059  ...            1.0              1.0  1.994076
27163  2024-12-01  2.531000  2.198304  ...            1.0              1.0  2.012915
27164  2024-12-02  2.474910       NaN  ...            NaN              NaN       NaN

[27165 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted FTX_Token_FTT
NECESSARRRY AAAA START
1
1
2024-09-27
2024-09-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
121  FTX Token FTT  2.47491  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ronin_RON
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.1626}]
success ya
UWAGA
db_RONUSD
COINDBBB
                    Date     Close     EMA23     EMA82 SMA200
0    2022-01-24 00:00:00  2.524935       NaN       NaN   None
1    2022-01-31 00:00:00  2.732942       NaN       NaN   None
2    2022-02-07 00:00:00  2.602167       NaN       NaN   None
3    2022-02-14 00:00:00  2.397704       NaN       NaN   None
4    2022-02-21 00:00:00  2.014006       NaN       NaN   None
..                   ...       ...       ...       ...    ...
108  2024-02-19 00:00:00  2.977703  1.857116  1.260842   None
109  2024-02-26 00:00:00  2.972455  1.950061  1.302085   None
110  2024-03-04 00:00:00  3.690384  2.095088  1.359635   None
111  2024-03-11 00:00:00  4.001871  2.253987  1.423303   None
112  2024-03-18 00:00:00  4.219498  2.417779  1.490681   None

[113 rows x 5 columns]
last_db_date_data
2024-03-18
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 2.75189}, {'Date': datetime.date(2024, 5, 10), 'Price': 2.66849}, {'Date': datetime.date(2024, 5, 11), 'Price': 2.63595}, {'Date': datetime.date(2024, 5, 12), 'Price': 2.60586}, {'Date': datetime.date(2024, 5, 13), 'Price': 2.55979}, {'Date': datetime.date(2024, 5, 14), 'Price': 2.48194}, {'Date': datetime.date(2024, 5, 15), 'Price': 2.67257}, {'Date': datetime.date(2024, 5, 16), 'Price': 2.62387}, {'Date': datetime.date(2024, 5, 17), 'Price': 2.76971}, {'Date': datetime.date(2024, 5, 18), 'Price': 2.79053}, {'Date': datetime.date(2024, 5, 19), 'Price': 2.69326}, {'Date': datetime.date(2024, 5, 20), 'Price': 2.99779}, {'Date': datetime.date(2024, 5, 21), 'Price': 3.13484}, {'Date': datetime.date(2024, 5, 22), 'Price': 3.11642}, {'Date': datetime.date(2024, 5, 23), 'Price': 3.24142}, {'Date': datetime.date(2024, 5, 24), 'Price': 3.23053}, {'Date': datetime.date(2024, 5, 25), 'Price': 3.24052}, {'Date': datetime.date(2024, 5, 26), 'Price': 3.14311}, {'Date': datetime.date(2024, 5, 27), 'Price': 3.21834}, {'Date': datetime.date(2024, 5, 28), 'Price': 3.1733}, {'Date': datetime.date(2024, 5, 29), 'Price': 3.0687}, {'Date': datetime.date(2024, 5, 30), 'Price': 2.98319}, {'Date': datetime.date(2024, 5, 31), 'Price': 2.88924}, {'Date': datetime.date(2024, 6, 1), 'Price': 3.02724}, {'Date': datetime.date(2024, 6, 2), 'Price': 3.19529}, {'Date': datetime.date(2024, 6, 3), 'Price': 3.10135}, {'Date': datetime.date(2024, 6, 4), 'Price': 3.05955}, {'Date': datetime.date(2024, 6, 5), 'Price': 3.18183}, {'Date': datetime.date(2024, 6, 6), 'Price': 3.09014}, {'Date': datetime.date(2024, 6, 7), 'Price': 2.91522}, {'Date': datetime.date(2024, 6, 8), 'Price': 2.89305}, {'Date': datetime.date(2024, 6, 9), 'Price': 2.94174}, {'Date': datetime.date(2024, 6, 10), 'Price': 2.91333}, {'Date': datetime.date(2024, 6, 11), 'Price': 2.78581}, {'Date': datetime.date(2024, 6, 12), 'Price': 2.84781}, {'Date': datetime.date(2024, 6, 13), 'Price': 2.77711}, {'Date': datetime.date(2024, 6, 14), 'Price': 2.51723}, {'Date': datetime.date(2024, 6, 15), 'Price': 2.59312}, {'Date': datetime.date(2024, 6, 16), 'Price': 2.57427}, {'Date': datetime.date(2024, 6, 17), 'Price': 2.50578}, {'Date': datetime.date(2024, 6, 18), 'Price': 2.25505}, {'Date': datetime.date(2024, 6, 19), 'Price': 2.39729}, {'Date': datetime.date(2024, 6, 20), 'Price': 2.34079}, {'Date': datetime.date(2024, 6, 21), 'Price': 2.29892}, {'Date': datetime.date(2024, 6, 22), 'Price': 2.29752}, {'Date': datetime.date(2024, 6, 23), 'Price': 2.24755}, {'Date': datetime.date(2024, 6, 24), 'Price': 2.15219}, {'Date': datetime.date(2024, 6, 25), 'Price': 2.1978}, {'Date': datetime.date(2024, 6, 26), 'Price': 2.03282}, {'Date': datetime.date(2024, 6, 27), 'Price': 2.13737}, {'Date': datetime.date(2024, 6, 28), 'Price': 2.10851}, {'Date': datetime.date(2024, 6, 29), 'Price': 2.06418}, {'Date': datetime.date(2024, 6, 30), 'Price': 2.08817}, {'Date': datetime.date(2024, 7, 1), 'Price': 2.08199}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.46231}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.45792}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.4465}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.39995}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.42905}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.40704}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.4855}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.76034}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.78369}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.60619}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.82813}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.86108}, {'Date': datetime.date(2024, 11, 29), 'Price': 2.00374}, {'Date': datetime.date(2024, 11, 30), 'Price': 2.01106}, {'Date': datetime.date(2024, 12, 1), 'Price': 2.16059}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.1626}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.1626}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Blur_BLUR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.38369}]
success ya
UWAGA
db_BLURUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-02-14  0.653074       NaN  ...              0                0       NaN
1    2023-02-15  0.948979       NaN  ...              0                0       NaN
2    2023-02-16  0.897490       NaN  ...              0                0       NaN
3    2023-02-17  0.970991       NaN  ...              0                0       NaN
4    2023-02-18  1.184702       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
512  2024-11-27  0.318400  0.277101  ...              0                0  0.316151
513  2024-11-28  0.316880  0.280416  ...              0                0  0.316176
514  2024-11-29  0.323140  0.283977  ...              0                0  0.316421
515  2024-11-30  0.324960  0.287392  ...              0                0  0.316720
516  2024-12-01  0.365150  0.293872  ...              0                0  0.318420

[517 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.38369}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.38369}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-02-14  0.653074       NaN  ...            0.0              0.0       NaN
1    2023-02-15  0.948979       NaN  ...            0.0              0.0       NaN
2    2023-02-16  0.897490       NaN  ...            0.0              0.0       NaN
3    2023-02-17  0.970991       NaN  ...            0.0              0.0       NaN
4    2023-02-18  1.184702       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
513  2024-11-28  0.316880  0.280416  ...            0.0              0.0  0.316176
514  2024-11-29  0.323140  0.283977  ...            0.0              0.0  0.316421
515  2024-11-30  0.324960  0.287392  ...            0.0              0.0  0.316720
516  2024-12-01  0.365150  0.293872  ...            0.0              0.0  0.318420
517  2024-12-02  0.383690       NaN  ...            NaN              NaN       NaN

[518 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Blur_BLUR
NECESSARRRY AAAA START
0
0
2024-03-22
2024-04-12
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
123  Blur BLUR  0.38369  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
EigenLayer_EIGEN
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.70581}]
success ya
UWAGA
db_EIGENUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_EIGENUSD': no such table: db_EIGENUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
zkSync_ZK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21148}]
success ya
UWAGA
db_ZKUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ZKUSD': no such table: db_ZKUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Oasis_Network_ROSE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10813}]
success ya
UWAGA
db_ROSEUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.034853       NaN  ...              0                0       NaN
1    2023-01-02  0.035778       NaN  ...              0                0       NaN
2    2023-01-03  0.035716       NaN  ...              0                0       NaN
3    2023-01-04  0.036692       NaN  ...              0                0       NaN
4    2023-01-05  0.036241       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.096650  0.093344  ...              0                0  0.097791
557  2024-11-28  0.097420  0.093684  ...              0                0  0.097778
558  2024-11-29  0.100220  0.094229  ...              0                0  0.097864
559  2024-11-30  0.101200  0.094810  ...              0                0  0.097981
560  2024-12-01  0.107820  0.095894  ...              0                0  0.098326

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10813}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.10813}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.034853       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.035778       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.035716       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.036692       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.036241       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.097420  0.093684  ...            0.0              0.0  0.097778
558  2024-11-29  0.100220  0.094229  ...            0.0              0.0  0.097864
559  2024-11-30  0.101200  0.094810  ...            0.0              0.0  0.097981
560  2024-12-01  0.107820  0.095894  ...            0.0              0.0  0.098326
561  2024-12-02  0.108130       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Oasis_Network_ROSE
NECESSARRRY AAAA START
0
0
2024-06-22
2024-06-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name    Price  ...  middle_flip_date  long_flip_date
126  Oasis Network ROSE  0.10813  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Nervos_Network_CKB
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01678}]
success ya
UWAGA
db_CKBUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.002316       NaN  ...              0                0       NaN
1    2023-01-02  0.002319       NaN  ...              0                0       NaN
2    2023-01-03  0.002272       NaN  ...              0                0       NaN
3    2023-01-04  0.002289       NaN  ...              0                0       NaN
4    2023-01-05  0.002655       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
559  2024-11-27  0.015240  0.013485  ...              1                0  0.014289
560  2024-11-28  0.015690  0.013669  ...              1                0  0.014338
561  2024-11-29  0.015330  0.013807  ...              1                0  0.014373
562  2024-11-30  0.015380  0.013938  ...              1                0  0.014409
563  2024-12-01  0.016730  0.014171  ...              1                0  0.014490

[564 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01678}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01678}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.002316       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.002319       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.002272       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.002289       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.002655       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
560  2024-11-28  0.015690  0.013669  ...            1.0              0.0  0.014338
561  2024-11-29  0.015330  0.013807  ...            1.0              0.0  0.014373
562  2024-11-30  0.015380  0.013938  ...            1.0              0.0  0.014409
563  2024-12-01  0.016730  0.014171  ...            1.0              0.0  0.014490
564  2024-12-02  0.016780       NaN  ...            NaN              NaN       NaN

[565 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Nervos_Network_CKB
NECESSARRRY AAAA START
0
1
2024-05-10
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name    Price  ...  middle_flip_date  long_flip_date
127  Nervos Network CKB  0.01678  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
First_Neiro_On_Ethereum_NEIRO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00181}]
success ya
UWAGA
db_NEIROUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_NEIROUSD': no such table: db_NEIROUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Grass_GRASS
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.10901}]
success ya
UWAGA
db_GRASSUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_GRASSUSD': no such table: db_GRASSUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Terra_Classic_LUNC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00013}]
success ya
UWAGA
db_LUNCUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000150       NaN  ...              0                0       NaN
1      2023-01-02  0.000160       NaN  ...              0                0       NaN
2      2023-01-03  0.000156       NaN  ...              0                0       NaN
3      2023-01-04  0.000158       NaN  ...              0                0       NaN
4      2023-01-05  0.000152       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.000122  0.000109  ...              1                1  0.000100
27963  2024-11-28  0.000121  0.000110  ...              1                1  0.000100
27964  2024-11-29  0.000125  0.000111  ...              1                1  0.000101
27965  2024-11-30  0.000134  0.000113  ...              1                1  0.000102
27966  2024-12-01  0.000132  0.000115  ...              1                1  0.000103

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00013}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00013}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000150       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.000160       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.000156       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.000158       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.000152       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.000121  0.000110  ...            1.0              1.0  0.000100
27964  2024-11-29  0.000125  0.000111  ...            1.0              1.0  0.000101
27965  2024-11-30  0.000134  0.000113  ...            1.0              1.0  0.000102
27966  2024-12-01  0.000132  0.000115  ...            1.0              1.0  0.000103
27967  2024-12-02  0.000130       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Terra_Classic_LUNC
NECESSARRRY AAAA START
1
1
2024-09-19
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name    Price  ...  middle_flip_date  long_flip_date
130  Terra Classic LUNC  0.00013  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Goatseus_Maximus_GOAT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.70444}]
success ya
UWAGA
db_GOATUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_GOATUSD': no such table: db_GOATUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Gnosis_GNO
[{'Date': datetime.date(2024, 12, 2), 'Price': 268.225}]
success ya
UWAGA
db_GNOUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00   83.670418  ...              0                0
1    2023-01-02 00:00:00   83.607353  ...              0                0
2    2023-01-03 00:00:00   83.485474  ...              0                0
3    2023-01-04 00:00:00   86.337891  ...              0                0
4    2023-01-05 00:00:00   85.802376  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  326.281000  ...              1                1
469           2024-04-14  336.353000  ...              1                1
470           2024-04-15  331.040000  ...              1                1
471           2024-04-16  335.314000  ...              1                1
472           2024-04-17  323.975000  ...              1                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 302.199}, {'Date': datetime.date(2024, 5, 10), 'Price': 286.409}, {'Date': datetime.date(2024, 5, 10), 'Price': 285.865}, {'Date': datetime.date(2024, 5, 12), 'Price': 286.975}, {'Date': datetime.date(2024, 5, 13), 'Price': 285.593}, {'Date': datetime.date(2024, 5, 14), 'Price': 274.648}, {'Date': datetime.date(2024, 5, 14), 'Price': 271.473}, {'Date': datetime.date(2024, 5, 15), 'Price': 278.415}, {'Date': datetime.date(2024, 5, 16), 'Price': 268.636}, {'Date': datetime.date(2024, 5, 17), 'Price': 303.489}, {'Date': datetime.date(2024, 5, 18), 'Price': 301.873}, {'Date': datetime.date(2024, 5, 19), 'Price': 296.501}, {'Date': datetime.date(2024, 5, 20), 'Price': 352.668}, {'Date': datetime.date(2024, 5, 21), 'Price': 339.627}, {'Date': datetime.date(2024, 5, 22), 'Price': 332.695}, {'Date': datetime.date(2024, 5, 23), 'Price': 348.969}, {'Date': datetime.date(2024, 5, 24), 'Price': 364.888}, {'Date': datetime.date(2024, 5, 25), 'Price': 373.183}, {'Date': datetime.date(2024, 5, 26), 'Price': 362.584}, {'Date': datetime.date(2024, 5, 27), 'Price': 354.448}, {'Date': datetime.date(2024, 5, 28), 'Price': 346.981}, {'Date': datetime.date(2024, 5, 29), 'Price': 339.047}, {'Date': datetime.date(2024, 5, 30), 'Price': 335.356}, {'Date': datetime.date(2024, 5, 31), 'Price': 337.787}, {'Date': datetime.date(2024, 6, 1), 'Price': 339.923}, {'Date': datetime.date(2024, 6, 2), 'Price': 341.492}, {'Date': datetime.date(2024, 6, 3), 'Price': 326.785}, {'Date': datetime.date(2024, 6, 4), 'Price': 331.611}, {'Date': datetime.date(2024, 6, 5), 'Price': 340.49}, {'Date': datetime.date(2024, 6, 6), 'Price': 339.977}, {'Date': datetime.date(2024, 6, 7), 'Price': 334.102}, {'Date': datetime.date(2024, 6, 8), 'Price': 324.339}, {'Date': datetime.date(2024, 6, 9), 'Price': 327.046}, {'Date': datetime.date(2024, 6, 10), 'Price': 346.121}, {'Date': datetime.date(2024, 6, 11), 'Price': 337.76}, {'Date': datetime.date(2024, 6, 12), 'Price': 334.591}, {'Date': datetime.date(2024, 6, 13), 'Price': 318.286}, {'Date': datetime.date(2024, 6, 14), 'Price': 314.197}, {'Date': datetime.date(2024, 6, 15), 'Price': 326.415}, {'Date': datetime.date(2024, 6, 16), 'Price': 330.87}, {'Date': datetime.date(2024, 6, 17), 'Price': 323.725}, {'Date': datetime.date(2024, 6, 18), 'Price': 306.815}, {'Date': datetime.date(2024, 6, 19), 'Price': 327.751}, {'Date': datetime.date(2024, 6, 20), 'Price': 329.025}, {'Date': datetime.date(2024, 6, 21), 'Price': 323.348}, {'Date': datetime.date(2024, 6, 22), 'Price': 321.518}, {'Date': datetime.date(2024, 6, 23), 'Price': 318.974}, {'Date': datetime.date(2024, 6, 24), 'Price': 286.479}, {'Date': datetime.date(2024, 6, 25), 'Price': 291.161}, {'Date': datetime.date(2024, 6, 26), 'Price': 285.777}, {'Date': datetime.date(2024, 6, 27), 'Price': 297.195}, {'Date': datetime.date(2024, 6, 28), 'Price': 276.999}, {'Date': datetime.date(2024, 6, 29), 'Price': 277.869}, {'Date': datetime.date(2024, 6, 30), 'Price': 283.061}, {'Date': datetime.date(2024, 7, 1), 'Price': 290.308}, {'Date': datetime.date(2024, 11, 17), 'Price': 255.861}, {'Date': datetime.date(2024, 11, 18), 'Price': 260.595}, {'Date': datetime.date(2024, 11, 19), 'Price': 260.765}, {'Date': datetime.date(2024, 11, 20), 'Price': 257.507}, {'Date': datetime.date(2024, 11, 21), 'Price': 264.262}, {'Date': datetime.date(2024, 11, 22), 'Price': 262.293}, {'Date': datetime.date(2024, 11, 23), 'Price': 268.33}, {'Date': datetime.date(2024, 11, 24), 'Price': 276.214}, {'Date': datetime.date(2024, 11, 25), 'Price': 278.704}, {'Date': datetime.date(2024, 11, 26), 'Price': 254.887}, {'Date': datetime.date(2024, 11, 27), 'Price': 275.984}, {'Date': datetime.date(2024, 11, 28), 'Price': 266.37}, {'Date': datetime.date(2024, 11, 29), 'Price': 266.339}, {'Date': datetime.date(2024, 11, 30), 'Price': 268.377}, {'Date': datetime.date(2024, 12, 1), 'Price': 281.203}, {'Date': datetime.date(2024, 12, 2), 'Price': 268.225}, {'Date': datetime.date(2024, 12, 2), 'Price': 268.225}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
LayerZero_ZRO
[{'Date': datetime.date(2024, 12, 2), 'Price': 6.23872}]
success ya
UWAGA
db_ZROUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ZROUSD': no such table: db_ZROUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Compound_COMP
[{'Date': datetime.date(2024, 12, 2), 'Price': 76.7828}]
success ya
UWAGA
db_COMPUSD
COINDBBB
           Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2020-06-22  243.885306  ...              0                0
1    2020-06-29  207.323629  ...              0                0
2    2020-07-06  175.919110  ...              0                0
3    2020-07-13  162.871851  ...              0                0
4    2020-07-20  157.284930  ...              0                0
..          ...         ...  ...            ...              ...
307  2024-11-27   70.484900  ...              1                1
308  2024-11-28   71.218100  ...              1                1
309  2024-11-29   71.050600  ...              1                1
310  2024-11-30   70.780500  ...              1                1
311  2024-12-01   71.602400  ...              1                1

[312 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 76.7828}, {'Date': datetime.date(2024, 12, 2), 'Price': 76.7828}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2020-06-22  243.885306  ...            0.0              0.0
1    2020-06-29  207.323629  ...            0.0              0.0
2    2020-07-06  175.919110  ...            0.0              0.0
3    2020-07-13  162.871851  ...            0.0              0.0
4    2020-07-20  157.284930  ...            0.0              0.0
..          ...         ...  ...            ...              ...
308  2024-11-28   71.218100  ...            1.0              1.0
309  2024-11-29   71.050600  ...            1.0              1.0
310  2024-11-30   70.780500  ...            1.0              1.0
311  2024-12-01   71.602400  ...            1.0              1.0
312  2024-12-02   76.782800  ...            NaN              NaN

[313 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Compound_COMP
NECESSARRRY AAAA START
1
1
2024-11-25
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
134  Compound COMP  76.7828  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Tether_Gold_XAUt
[{'Date': datetime.date(2024, 12, 2), 'Price': 2643.27}]
success ya
UWAGA
db_XAUtUSD
COINDBBB
           Date        Close  ...  Middle_Trend_Up        EMA56
0    2023-01-01  1817.210083  ...                0          NaN
1    2023-01-02  1817.010986  ...                0          NaN
2    2023-01-03  1833.518555  ...                0          NaN
3    2023-01-04  1850.594238  ...                0          NaN
4    2023-01-05  1830.700317  ...                0          NaN
..          ...          ...  ...              ...          ...
486  2024-05-01  2309.680000  ...                1  2271.093774
487  2024-05-02  2305.340000  ...                1  2272.295396
488  2024-05-03  2304.460000  ...                1  2273.423978
489  2024-05-04  2303.360000  ...                1  2274.474365
490  2024-05-05  2303.360000  ...                1  2275.487896

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 2336.47}, {'Date': datetime.date(2024, 5, 10), 'Price': 2369.09}, {'Date': datetime.date(2024, 5, 11), 'Price': 2362.51}, {'Date': datetime.date(2024, 5, 12), 'Price': 2362.51}, {'Date': datetime.date(2024, 5, 13), 'Price': 2337.39}, {'Date': datetime.date(2024, 5, 14), 'Price': 2359.12}, {'Date': datetime.date(2024, 5, 15), 'Price': 2387.83}, {'Date': datetime.date(2024, 5, 16), 'Price': 2379.72}, {'Date': datetime.date(2024, 5, 17), 'Price': 2409.82}, {'Date': datetime.date(2024, 5, 18), 'Price': 2414.93}, {'Date': datetime.date(2024, 5, 19), 'Price': 2415.43}, {'Date': datetime.date(2024, 5, 20), 'Price': 2430.56}, {'Date': datetime.date(2024, 5, 21), 'Price': 2423.17}, {'Date': datetime.date(2024, 5, 22), 'Price': 2380.3}, {'Date': datetime.date(2024, 5, 23), 'Price': 2331.59}, {'Date': datetime.date(2024, 5, 24), 'Price': 2336.23}, {'Date': datetime.date(2024, 5, 25), 'Price': 2336.59}, {'Date': datetime.date(2024, 5, 26), 'Price': 2336.59}, {'Date': datetime.date(2024, 5, 27), 'Price': 2352.51}, {'Date': datetime.date(2024, 5, 28), 'Price': 2359.59}, {'Date': datetime.date(2024, 5, 29), 'Price': 2339.35}, {'Date': datetime.date(2024, 5, 30), 'Price': 2344.78}, {'Date': datetime.date(2024, 5, 31), 'Price': 2334.13}, {'Date': datetime.date(2024, 6, 1), 'Price': 2327.55}, {'Date': datetime.date(2024, 6, 2), 'Price': 2326.69}, {'Date': datetime.date(2024, 6, 3), 'Price': 2329.01}, {'Date': datetime.date(2024, 6, 4), 'Price': 2325.37}, {'Date': datetime.date(2024, 6, 5), 'Price': 2353.17}, {'Date': datetime.date(2024, 6, 6), 'Price': 2375.72}, {'Date': datetime.date(2024, 6, 7), 'Price': 2311.9}, {'Date': datetime.date(2024, 6, 8), 'Price': 2294.62}, {'Date': datetime.date(2024, 6, 9), 'Price': 2300.79}, {'Date': datetime.date(2024, 6, 10), 'Price': 2307.65}, {'Date': datetime.date(2024, 6, 11), 'Price': 2308.21}, {'Date': datetime.date(2024, 6, 12), 'Price': 2337.33}, {'Date': datetime.date(2024, 6, 13), 'Price': 2313.77}, {'Date': datetime.date(2024, 6, 14), 'Price': 2331.74}, {'Date': datetime.date(2024, 6, 15), 'Price': 2333.01}, {'Date': datetime.date(2024, 6, 16), 'Price': 2333.01}, {'Date': datetime.date(2024, 6, 17), 'Price': 2318.16}, {'Date': datetime.date(2024, 6, 18), 'Price': 2325.2}, {'Date': datetime.date(2024, 6, 19), 'Price': 2331.56}, {'Date': datetime.date(2024, 6, 20), 'Price': 2357.65}, {'Date': datetime.date(2024, 6, 21), 'Price': 2328.82}, {'Date': datetime.date(2024, 6, 22), 'Price': 2324.36}, {'Date': datetime.date(2024, 6, 23), 'Price': 2324.86}, {'Date': datetime.date(2024, 6, 24), 'Price': 2332.92}, {'Date': datetime.date(2024, 6, 25), 'Price': 2321.64}, {'Date': datetime.date(2024, 6, 26), 'Price': 2307.26}, {'Date': datetime.date(2024, 6, 27), 'Price': 2330.34}, {'Date': datetime.date(2024, 6, 28), 'Price': 2330.98}, {'Date': datetime.date(2024, 6, 29), 'Price': 2327.23}, {'Date': datetime.date(2024, 6, 30), 'Price': 2329.59}, {'Date': datetime.date(2024, 7, 1), 'Price': 2333.13}, {'Date': datetime.date(2024, 11, 17), 'Price': 2565.99}, {'Date': datetime.date(2024, 11, 18), 'Price': 2614.5}, {'Date': datetime.date(2024, 11, 19), 'Price': 2633.46}, {'Date': datetime.date(2024, 11, 20), 'Price': 2649.57}, {'Date': datetime.date(2024, 11, 21), 'Price': 2669.28}, {'Date': datetime.date(2024, 11, 22), 'Price': 2706.64}, {'Date': datetime.date(2024, 11, 23), 'Price': 2715.96}, {'Date': datetime.date(2024, 11, 24), 'Price': 2719.87}, {'Date': datetime.date(2024, 11, 25), 'Price': 2642.04}, {'Date': datetime.date(2024, 11, 26), 'Price': 2638.53}, {'Date': datetime.date(2024, 11, 27), 'Price': 2651.41}, {'Date': datetime.date(2024, 11, 28), 'Price': 2642.56}, {'Date': datetime.date(2024, 11, 29), 'Price': 2655.3}, {'Date': datetime.date(2024, 11, 30), 'Price': 2654.1}, {'Date': datetime.date(2024, 12, 1), 'Price': 2653.42}, {'Date': datetime.date(2024, 12, 2), 'Price': 2643.27}, {'Date': datetime.date(2024, 12, 2), 'Price': 2643.27}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
DOG•GO•TO•THE•MOON_DOG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00649}]
success ya
UWAGA
db_DOGUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_DOGUSD': no such table: db_DOGUSD
trying
 inicjacja duplicates
duplicate info
[False]
Frax_FRAX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.99597}]
success ya
UWAGA
db_FRAXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.999625       NaN  ...              0                0       NaN
1    2023-01-02  1.000229       NaN  ...              0                0       NaN
2    2023-01-03  0.999204       NaN  ...              0                0       NaN
3    2023-01-04  0.997869       NaN  ...              0                0       NaN
4    2023-01-05  0.996136       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.997660  0.997942  ...              0                1  0.997888
487  2024-05-02  0.998570  0.997994  ...              0                1  0.997912
488  2024-05-03  0.998770  0.998059  ...              1                1  0.997942
489  2024-05-04  0.998760  0.998117  ...              1                1  0.997971
490  2024-05-05  0.998760  0.998171  ...              1                1  0.997998

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.99717}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.99812}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.99825}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.99825}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.99787}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.99767}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.99849}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.99822}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.99859}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.99812}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.99762}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.99858}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.99821}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.99817}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.99817}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.99777}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.99792}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.99792}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.99769}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.99782}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.99744}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.9977}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.99757}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.99743}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.9979}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.99759}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.99848}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.99782}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.99765}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.99773}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.9978}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.99775}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.99751}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.99741}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.99762}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.99796}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.99796}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.99801}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.99801}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.99781}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.99774}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.99769}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.99748}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.99752}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.99748}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.99726}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.99724}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.99775}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.99725}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.99714}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.99698}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.99689}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.99703}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.99675}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.99635}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.99653}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.99619}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.99544}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.99543}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.99634}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.99633}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.99545}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.99526}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.99673}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.99745}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.99623}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.9955}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.9954}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.99604}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.99597}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.99597}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Kava_KAVA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.59245}]
success ya
UWAGA
db_KAVAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.536164       NaN  ...              0                0       NaN
1      2023-01-02  0.544366       NaN  ...              0                0       NaN
2      2023-01-03  0.621415       NaN  ...              0                0       NaN
3      2023-01-04  0.628191       NaN  ...              0                0       NaN
4      2023-01-05  0.656729       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27561  2024-11-27  0.556400  0.448625  ...              1                1  0.400532
27562  2024-11-28  0.553100  0.457331  ...              1                1  0.405885
27563  2024-11-29  0.600900  0.469295  ...              1                1  0.412728
27564  2024-11-30  0.611800  0.481170  ...              1                1  0.419713
27565  2024-12-01  0.610500  0.491948  ...              1                1  0.426407

[27566 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.59245}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.59245}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.536164       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.544366       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.621415       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.628191       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.656729       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27562  2024-11-28  0.553100  0.457331  ...            1.0              1.0  0.405885
27563  2024-11-29  0.600900  0.469295  ...            1.0              1.0  0.412728
27564  2024-11-30  0.611800  0.481170  ...            1.0              1.0  0.419713
27565  2024-12-01  0.610500  0.491948  ...            1.0              1.0  0.426407
27566  2024-12-02  0.592450       NaN  ...            NaN              NaN       NaN

[27567 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Kava_KAVA
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
138  Kava KAVA  0.59245  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
SuperVerse_SUPER
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.31301}]
success ya
UWAGA
db_SUPERUSD
COINDBBB
            Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0     2021-02-22  1.213148       NaN  ...       NaN              0                0
1     2021-03-01  1.269993       NaN  ...       NaN              0                0
2     2021-03-08  1.736309       NaN  ...       NaN              0                0
3     2021-03-15  3.276155       NaN  ...       NaN              0                0
4     2021-03-22  3.381915       NaN  ...       NaN              0                0
...          ...       ...       ...  ...       ...            ...              ...
4683  2024-11-27  1.355000  1.303133  ...  1.231861              1                1
4684  2024-11-28  1.323000  1.304788  ...  1.235059              1                1
4685  2024-11-29  1.351000  1.308639  ...  1.239127              1                1
4686  2024-11-30  1.446000  1.320086  ...  1.246385              1                1
4687  2024-12-01  1.515000  1.336329  ...  1.255810              1                1

[4688 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.31301}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.31301}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0     2021-02-22  1.213148       NaN  ...       NaN            0.0              0.0
1     2021-03-01  1.269993       NaN  ...       NaN            0.0              0.0
2     2021-03-08  1.736309       NaN  ...       NaN            0.0              0.0
3     2021-03-15  3.276155       NaN  ...       NaN            0.0              0.0
4     2021-03-22  3.381915       NaN  ...       NaN            0.0              0.0
...          ...       ...       ...  ...       ...            ...              ...
4684  2024-11-28  1.323000  1.304788  ...  1.235059            1.0              1.0
4685  2024-11-29  1.351000  1.308639  ...  1.239127            1.0              1.0
4686  2024-11-30  1.446000  1.320086  ...  1.246385            1.0              1.0
4687  2024-12-01  1.515000  1.336329  ...  1.255810            1.0              1.0
4688  2024-12-02  1.313010       NaN  ...       NaN            NaN              NaN

[4689 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted SuperVerse_SUPER
NECESSARRRY AAAA START
1
1
2024-09-09
2024-09-20
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name    Price  ...  middle_flip_date  long_flip_date
139  SuperVerse SUPER  1.31301  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Dash_DASH
[{'Date': datetime.date(2024, 12, 2), 'Price': 52.4306}]
success ya
UWAGA
db_DASHUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  42.209698  ...                0        NaN
1      2023-01-02  43.596020  ...                0        NaN
2      2023-01-03  42.890972  ...                0        NaN
3      2023-01-04  45.799442  ...                0        NaN
4      2023-01-05  44.895386  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  38.160000  ...                1  26.675108
27963  2024-11-28  36.950000  ...                1  27.035630
27964  2024-11-29  37.440000  ...                1  27.400696
27965  2024-11-30  39.460000  ...                1  27.823829
27966  2024-12-01  46.040000  ...                1  28.462993

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 52.4306}, {'Date': datetime.date(2024, 12, 2), 'Price': 52.4306}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  42.209698  ...              0.0        NaN
1      2023-01-02  43.596020  ...              0.0        NaN
2      2023-01-03  42.890972  ...              0.0        NaN
3      2023-01-04  45.799442  ...              0.0        NaN
4      2023-01-05  44.895386  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  36.950000  ...              1.0  27.035630
27964  2024-11-29  37.440000  ...              1.0  27.400696
27965  2024-11-30  39.460000  ...              1.0  27.823829
27966  2024-12-01  46.040000  ...              1.0  28.462993
27967  2024-12-02  52.430600  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Dash_DASH
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-15
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
140  Dash DASH  52.4306  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Kusama_KSM
[{'Date': datetime.date(2024, 12, 2), 'Price': 39.6844}]
success ya
UWAGA
db_KSMUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  22.505793  ...                0        NaN
1      2023-01-02  22.633251  ...                0        NaN
2      2023-01-03  23.159813  ...                0        NaN
3      2023-01-04  24.323698  ...                0        NaN
4      2023-01-05  24.670231  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  37.470000  ...                1  22.672845
27963  2024-11-28  36.850000  ...                1  23.170289
27964  2024-11-29  42.090000  ...                1  23.834139
27965  2024-11-30  41.190000  ...                1  24.443116
27966  2024-12-01  41.610000  ...                1  25.045463

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 39.6844}, {'Date': datetime.date(2024, 12, 2), 'Price': 39.6844}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  22.505793  ...              0.0        NaN
1      2023-01-02  22.633251  ...              0.0        NaN
2      2023-01-03  23.159813  ...              0.0        NaN
3      2023-01-04  24.323698  ...              0.0        NaN
4      2023-01-05  24.670231  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  36.850000  ...              1.0  23.170289
27964  2024-11-29  42.090000  ...              1.0  23.834139
27965  2024-11-30  41.190000  ...              1.0  24.443116
27966  2024-12-01  41.610000  ...              1.0  25.045463
27967  2024-12-02  39.684400  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Kusama_KSM
NECESSARRRY AAAA START
1
1
2024-11-17
2024-11-22
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
141  Kusama KSM  39.6844  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
1inch_1INCH
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.46905}]
success ya
UWAGA
db_1INCHUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.385810       NaN  ...              0                0       NaN
1    2023-01-02  0.395345       NaN  ...              0                0       NaN
2    2023-01-03  0.386393       NaN  ...              0                0       NaN
3    2023-01-04  0.395506       NaN  ...              0                0       NaN
4    2023-01-05  0.389316       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.419210  0.382808  ...              0                0  0.404331
557  2024-11-28  0.414740  0.385469  ...              0                0  0.404697
558  2024-11-29  0.421900  0.388505  ...              0                0  0.405300
559  2024-11-30  0.421780  0.391278  ...              0                0  0.405878
560  2024-12-01  0.444740  0.395733  ...              0                0  0.407242

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.46905}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.46905}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.385810       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.395345       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.386393       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.395506       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.389316       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.414740  0.385469  ...            0.0              0.0  0.404697
558  2024-11-29  0.421900  0.388505  ...            0.0              0.0  0.405300
559  2024-11-30  0.421780  0.391278  ...            0.0              0.0  0.405878
560  2024-12-01  0.444740  0.395733  ...            0.0              0.0  0.407242
561  2024-12-02  0.469050       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted 1inch_1INCH
NECESSARRRY AAAA START
0
1
2024-06-13
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
142  1inch 1INCH  0.46905  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
BOOK_OF_MEME_BOME
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00891}]
success ya
UWAGA
db_BOMEUSD
COINDBBB
            Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0     2024-03-14  0.001777       NaN  ...             0                0       NaN
1     2024-03-15  0.009152       NaN  ...             0                0       NaN
2     2024-03-16  0.020540       NaN  ...             0                0       NaN
3     2024-03-17  0.017590       NaN  ...             0                0       NaN
4     2024-03-18  0.010394       NaN  ...             0                0       NaN
...          ...       ...       ...  ...           ...              ...       ...
8348  2024-11-27  0.008987  0.009301  ...             1                1  0.008756
8349  2024-11-28  0.009044  0.009280  ...             1                1  0.008766
8350  2024-11-29  0.009473  0.009296  ...             1                1  0.008791
8351  2024-11-30  0.009536  0.009316  ...             1                1  0.008817
8352  2024-12-01  0.009693  0.009347  ...             1                1  0.008848

[8353 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00891}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00891}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0     2024-03-14  0.001777       NaN  ...           0.0              0.0       NaN
1     2024-03-15  0.009152       NaN  ...           0.0              0.0       NaN
2     2024-03-16  0.020540       NaN  ...           0.0              0.0       NaN
3     2024-03-17  0.017590       NaN  ...           0.0              0.0       NaN
4     2024-03-18  0.010394       NaN  ...           0.0              0.0       NaN
...          ...       ...       ...  ...           ...              ...       ...
8349  2024-11-28  0.009044  0.009280  ...           1.0              1.0  0.008766
8350  2024-11-29  0.009473  0.009296  ...           1.0              1.0  0.008791
8351  2024-11-30  0.009536  0.009316  ...           1.0              1.0  0.008817
8352  2024-12-01  0.009693  0.009347  ...           1.0              1.0  0.008848
8353  2024-12-02  0.008910       NaN  ...           NaN              NaN       NaN

[8354 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted BOOK_OF_MEME_BOME
NECESSARRRY AAAA START
1
1
2024-10-14
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
143  BOOK OF MEME BOME  0.00891  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Safe_SAFE
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.32411}]
success ya
UWAGA
db_SAFEUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-23  2.36000       NaN  ...       NaN              0                0
1    2024-04-24  1.89610       NaN  ...       NaN              0                0
2    2024-04-25  2.67110       NaN  ...       NaN              0                0
3    2024-04-26  2.23110       NaN  ...       NaN              0                0
4    2024-04-27  2.18690       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
218  2024-11-27  1.19720  1.102584  ...  1.206139              0                1
219  2024-11-28  1.16139  1.107485  ...  1.202769              0                1
220  2024-11-29  1.18712  1.114121  ...  1.199029              0                1
221  2024-11-30  1.16704  1.118531  ...  1.195155              0                1
222  2024-12-01  1.28807  1.132659  ...  1.191535              1                1

[223 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.32411}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.32411}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-23  2.36000       NaN  ...       NaN            0.0              0.0
1    2024-04-24  1.89610       NaN  ...       NaN            0.0              0.0
2    2024-04-25  2.67110       NaN  ...       NaN            0.0              0.0
3    2024-04-26  2.23110       NaN  ...       NaN            0.0              0.0
4    2024-04-27  2.18690       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
219  2024-11-28  1.16139  1.107485  ...  1.202769            0.0              1.0
220  2024-11-29  1.18712  1.114121  ...  1.199029            0.0              1.0
221  2024-11-30  1.16704  1.118531  ...  1.195155            0.0              1.0
222  2024-12-01  1.28807  1.132659  ...  1.191535            1.0              1.0
223  2024-12-02  1.32411       NaN  ...       NaN            NaN              NaN

[224 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Safe_SAFE
NECESSARRRY AAAA START
1
1
2024-10-11
2024-12-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
144  Safe SAFE  1.32411  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Telcoin_TEL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00655}]
success ya
UWAGA
db_TELUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.001901       NaN  ...              0                0       NaN
1    2023-01-02  0.001949       NaN  ...              0                0       NaN
2    2023-01-03  0.001920       NaN  ...              0                0       NaN
3    2023-01-04  0.001983       NaN  ...              0                0       NaN
4    2023-01-05  0.001943       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.005400  0.003195  ...              1                1  0.003078
557  2024-11-28  0.005030  0.003347  ...              1                1  0.003146
558  2024-11-29  0.005380  0.003517  ...              1                1  0.003225
559  2024-11-30  0.005500  0.003682  ...              1                1  0.003305
560  2024-12-01  0.007160  0.003972  ...              1                1  0.003440

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00655}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00655}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.001901       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.001949       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.001920       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.001983       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.001943       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.005030  0.003347  ...            1.0              1.0  0.003146
558  2024-11-29  0.005380  0.003517  ...            1.0              1.0  0.003225
559  2024-11-30  0.005500  0.003682  ...            1.0              1.0  0.003305
560  2024-12-01  0.007160  0.003972  ...            1.0              1.0  0.003440
561  2024-12-02  0.006550       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Telcoin_TEL
NECESSARRRY AAAA START
1
1
2024-11-26
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
145  Telcoin TEL  0.00655  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Bitcoin_Gold_BTG
[{'Date': datetime.date(2024, 12, 2), 'Price': 34.1959}]
success ya
UWAGA
db_BTGUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00   11.687888  ...              0                0
1    2023-01-02 00:00:00   11.827287  ...              0                0
2    2023-01-03 00:00:00   11.799753  ...              0                0
3    2023-01-04 00:00:00   12.784770  ...              0                0
4    2023-01-05 00:00:00   13.255241  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  398.155000  ...              1                1
469           2024-04-14  359.334000  ...              1                1
470           2024-04-15  370.485000  ...              1                1
471           2024-04-16  368.468000  ...              1                1
472           2024-04-17   34.660700  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 33.8083}, {'Date': datetime.date(2024, 5, 10), 'Price': 33.5675}, {'Date': datetime.date(2024, 5, 11), 'Price': 33.6076}, {'Date': datetime.date(2024, 5, 12), 'Price': 33.6076}, {'Date': datetime.date(2024, 5, 13), 'Price': 33.3792}, {'Date': datetime.date(2024, 5, 14), 'Price': 32.6555}, {'Date': datetime.date(2024, 5, 15), 'Price': 34.8786}, {'Date': datetime.date(2024, 5, 16), 'Price': 34.7877}, {'Date': datetime.date(2024, 5, 17), 'Price': 35.4057}, {'Date': datetime.date(2024, 5, 18), 'Price': 37.1575}, {'Date': datetime.date(2024, 5, 19), 'Price': 36.4484}, {'Date': datetime.date(2024, 5, 20), 'Price': 37.6506}, {'Date': datetime.date(2024, 5, 21), 'Price': 38.3774}, {'Date': datetime.date(2024, 5, 22), 'Price': 36.9227}, {'Date': datetime.date(2024, 5, 23), 'Price': 37.2136}, {'Date': datetime.date(2024, 5, 24), 'Price': 36.7534}, {'Date': datetime.date(2024, 5, 25), 'Price': 36.5648}, {'Date': datetime.date(2024, 5, 26), 'Price': 36.5648}, {'Date': datetime.date(2024, 5, 27), 'Price': 36.0471}, {'Date': datetime.date(2024, 5, 28), 'Price': 35.1596}, {'Date': datetime.date(2024, 5, 29), 'Price': 34.4542}, {'Date': datetime.date(2024, 5, 30), 'Price': 33.7173}, {'Date': datetime.date(2024, 5, 31), 'Price': 33.1955}, {'Date': datetime.date(2024, 6, 1), 'Price': 33.3467}, {'Date': datetime.date(2024, 6, 2), 'Price': 33.3554}, {'Date': datetime.date(2024, 6, 3), 'Price': 32.8631}, {'Date': datetime.date(2024, 6, 4), 'Price': 33.5941}, {'Date': datetime.date(2024, 6, 5), 'Price': 34.6335}, {'Date': datetime.date(2024, 6, 6), 'Price': 34.5652}, {'Date': datetime.date(2024, 6, 7), 'Price': 34.3846}, {'Date': datetime.date(2024, 6, 8), 'Price': 32.4617}, {'Date': datetime.date(2024, 6, 9), 'Price': 32.1567}, {'Date': datetime.date(2024, 6, 10), 'Price': 31.7417}, {'Date': datetime.date(2024, 6, 11), 'Price': 29.7473}, {'Date': datetime.date(2024, 6, 12), 'Price': 31.6478}, {'Date': datetime.date(2024, 6, 13), 'Price': 30.2242}, {'Date': datetime.date(2024, 6, 14), 'Price': 29.2026}, {'Date': datetime.date(2024, 6, 15), 'Price': 28.9703}, {'Date': datetime.date(2024, 6, 16), 'Price': 28.9703}, {'Date': datetime.date(2024, 6, 17), 'Price': 25.7407}, {'Date': datetime.date(2024, 6, 18), 'Price': 23.8369}, {'Date': datetime.date(2024, 6, 19), 'Price': 24.5246}, {'Date': datetime.date(2024, 6, 20), 'Price': 24.7774}, {'Date': datetime.date(2024, 6, 21), 'Price': 24.6823}, {'Date': datetime.date(2024, 6, 22), 'Price': 24.6347}, {'Date': datetime.date(2024, 6, 23), 'Price': 27.5219}, {'Date': datetime.date(2024, 6, 24), 'Price': 25.1683}, {'Date': datetime.date(2024, 6, 25), 'Price': 26.1531}, {'Date': datetime.date(2024, 6, 26), 'Price': 25.548}, {'Date': datetime.date(2024, 6, 27), 'Price': 25.4441}, {'Date': datetime.date(2024, 6, 28), 'Price': 25.3573}, {'Date': datetime.date(2024, 6, 29), 'Price': 25.068}, {'Date': datetime.date(2024, 6, 30), 'Price': 24.8337}, {'Date': datetime.date(2024, 7, 1), 'Price': 25.4573}, {'Date': datetime.date(2024, 11, 17), 'Price': 33.2192}, {'Date': datetime.date(2024, 11, 18), 'Price': 32.5497}, {'Date': datetime.date(2024, 11, 19), 'Price': 32.9723}, {'Date': datetime.date(2024, 11, 20), 'Price': 32.6188}, {'Date': datetime.date(2024, 11, 21), 'Price': 31.999}, {'Date': datetime.date(2024, 11, 22), 'Price': 32.1786}, {'Date': datetime.date(2024, 11, 23), 'Price': 34.2525}, {'Date': datetime.date(2024, 11, 24), 'Price': 32.9665}, {'Date': datetime.date(2024, 11, 25), 'Price': 32.6677}, {'Date': datetime.date(2024, 11, 26), 'Price': 30.9834}, {'Date': datetime.date(2024, 11, 27), 'Price': 32.4405}, {'Date': datetime.date(2024, 11, 28), 'Price': 35.2641}, {'Date': datetime.date(2024, 11, 29), 'Price': 35.1072}, {'Date': datetime.date(2024, 11, 30), 'Price': 35.4362}, {'Date': datetime.date(2024, 12, 1), 'Price': 35.3051}, {'Date': datetime.date(2024, 12, 2), 'Price': 34.1959}, {'Date': datetime.date(2024, 12, 2), 'Price': 34.1959}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
WOO_Network_WOO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.31957}]
success ya
UWAGA
db_WOOUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.125123       NaN  ...              0                0       NaN
1    2023-01-02  0.124634       NaN  ...              0                0       NaN
2    2023-01-03  0.124057       NaN  ...              0                0       NaN
3    2023-01-04  0.131255       NaN  ...              0                0       NaN
4    2023-01-05  0.131139       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.269350  0.240911  ...              0                0  0.264250
557  2024-11-28  0.266780  0.243066  ...              0                0  0.264338
558  2024-11-29  0.273020  0.245563  ...              0                0  0.264643
559  2024-11-30  0.274540  0.247977  ...              0                0  0.264990
560  2024-12-01  0.283300  0.250921  ...              0                0  0.265633

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.31957}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.31957}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.125123       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.124634       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.124057       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.131255       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.131139       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.266780  0.243066  ...            0.0              0.0  0.264338
558  2024-11-29  0.273020  0.245563  ...            0.0              0.0  0.264643
559  2024-11-30  0.274540  0.247977  ...            0.0              0.0  0.264990
560  2024-12-01  0.283300  0.250921  ...            0.0              0.0  0.265633
561  2024-12-02  0.319570       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted WOO_Network_WOO
NECESSARRRY AAAA START
0
0
2024-04-05
2024-04-12
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
147  WOO Network WOO  0.31957  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Astar_ASTR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07853}]
success ya
UWAGA
db_ASTRUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.039411       NaN  ...              0                0       NaN
1    2023-01-02  0.039299       NaN  ...              0                0       NaN
2    2023-01-03  0.039003       NaN  ...              0                0       NaN
3    2023-01-04  0.039358       NaN  ...              0                0       NaN
4    2023-01-05  0.038856       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.081450  0.073120  ...              0                0  0.080581
557  2024-11-28  0.079480  0.073650  ...              0                0  0.080543
558  2024-11-29  0.079600  0.074146  ...              0                0  0.080510
559  2024-11-30  0.079770  0.074614  ...              0                0  0.080484
560  2024-12-01  0.084250  0.075417  ...              0                0  0.080616

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07853}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.07853}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.039411       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.039299       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.039003       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.039358       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.038856       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.079480  0.073650  ...            0.0              0.0  0.080543
558  2024-11-29  0.079600  0.074146  ...            0.0              0.0  0.080510
559  2024-11-30  0.079770  0.074614  ...            0.0              0.0  0.080484
560  2024-12-01  0.084250  0.075417  ...            0.0              0.0  0.080616
561  2024-12-02  0.078530       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Astar_ASTR
NECESSARRRY AAAA START
0
0
2024-03-18
2024-04-13
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
148  Astar ASTR  0.07853  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Theta_Fuel_TFUEL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.08559}]
success ya
UWAGA
db_TFUELUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.031683       NaN  ...              0                0       NaN
1    2023-01-02  0.032257       NaN  ...              0                0       NaN
2    2023-01-03  0.032175       NaN  ...              0                0       NaN
3    2023-01-04  0.033103       NaN  ...              0                0       NaN
4    2023-01-05  0.032881       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.079080  0.075019  ...              1                0  0.081346
557  2024-11-28  0.078090  0.075275  ...              1                0  0.081232
558  2024-11-29  0.083770  0.075983  ...              1                0  0.081321
559  2024-11-30  0.082200  0.076501  ...              1                0  0.081351
560  2024-12-01  0.089480  0.077582  ...              1                0  0.081637

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.08559}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.08559}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.031683       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.032257       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.032175       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.033103       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.032881       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.078090  0.075275  ...            1.0              0.0  0.081232
558  2024-11-29  0.083770  0.075983  ...            1.0              0.0  0.081321
559  2024-11-30  0.082200  0.076501  ...            1.0              0.0  0.081351
560  2024-12-01  0.089480  0.077582  ...            1.0              0.0  0.081637
561  2024-12-02  0.085590       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Theta_Fuel_TFUEL
NECESSARRRY AAAA START
0
1
2024-06-10
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name    Price  ...  middle_flip_date  long_flip_date
149  Theta Fuel TFUEL  0.08559  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Creditcoin_CTC
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.40737}]
success ya
UWAGA
db_CTCUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.454368       NaN  ...              0                0       NaN
1      2023-01-02  0.579980       NaN  ...              0                0       NaN
2      2023-01-03  0.533953       NaN  ...              0                0       NaN
3      2023-01-04  0.539724       NaN  ...              0                0       NaN
4      2023-01-05  0.502571       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.930200  0.678136  ...              1                1  0.552920
27963  2024-11-28  0.978900  0.703200  ...              1                1  0.567867
27964  2024-11-29  1.000100  0.727942  ...              1                1  0.583033
27965  2024-11-30  1.042000  0.754113  ...              1                1  0.599137
27966  2024-12-01  1.202100  0.791445  ...              1                1  0.620294

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.40737}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.40737}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.454368       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.579980       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.533953       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.539724       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.502571       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.978900  0.703200  ...            1.0              1.0  0.567867
27964  2024-11-29  1.000100  0.727942  ...            1.0              1.0  0.583033
27965  2024-11-30  1.042000  0.754113  ...            1.0              1.0  0.599137
27966  2024-12-01  1.202100  0.791445  ...            1.0              1.0  0.620294
27967  2024-12-02  1.407370       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Creditcoin_CTC
NECESSARRRY AAAA START
1
1
2024-11-13
2024-11-13
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
150  Creditcoin CTC  1.40737  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
SPX6900_SPX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.61261}]
success ya
UWAGA
db_SPXUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_SPXUSD': no such table: db_SPXUSD
trying
 inicjacja duplicates
duplicate info
[False]
Moo_Deng_(moodengsol.com)_MOODENG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.57322}]
success ya
UWAGA
db_MOODENGUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_MOODENGUSD': no such table: db_MOODENGUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Snek_SNEK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00756}]
success ya
UWAGA
db_SNEKUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_SNEKUSD': no such table: db_SNEKUSD
trying
 inicjacja duplicates
duplicate info
[False]
Amp_AMP
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0069}]
success ya
UWAGA
db_AMPUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.003091       NaN  ...              0                0       NaN
1    2023-01-02  0.003113       NaN  ...              0                0       NaN
2    2023-01-03  0.003103       NaN  ...              0                0       NaN
3    2023-01-04  0.003125       NaN  ...              0                0       NaN
4    2023-01-05  0.003145       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.005560  0.005100  ...              0                0  0.005689
557  2024-11-28  0.008200  0.005359  ...              1                0  0.005777
558  2024-11-29  0.007470  0.005535  ...              1                0  0.005836
559  2024-11-30  0.007260  0.005678  ...              1                0  0.005886
560  2024-12-01  0.007300  0.005814  ...              1                0  0.005936

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0069}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0069}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.003091       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.003113       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.003103       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.003125       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.003145       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.008200  0.005359  ...            1.0              0.0  0.005777
558  2024-11-29  0.007470  0.005535  ...            1.0              0.0  0.005836
559  2024-11-30  0.007260  0.005678  ...            1.0              0.0  0.005886
560  2024-12-01  0.007300  0.005814  ...            1.0              0.0  0.005936
561  2024-12-02  0.006900       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Amp_AMP
NECESSARRRY AAAA START
0
1
2024-05-10
2024-11-28
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name   Price  ...  middle_flip_date  long_flip_date
154  Amp AMP  0.0069  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
SATS_1000SATS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00027}]
success ya
UWAGA
db_1000SATSUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-12-12 00:00:00  0.000552  ...              0                0
1    2023-12-13 00:00:00  0.000512  ...              0                0
2    2023-12-14 00:00:00  0.000758  ...              0                0
3    2023-12-15 00:00:00  0.000733  ...              0                0
4    2023-12-16 00:00:00  0.000777  ...              0                0
..                   ...       ...  ...            ...              ...
123           2024-04-13  0.000340  ...              0                0
124           2024-04-14  0.000300  ...              0                0
125           2024-04-15  0.000280  ...              0                0
126           2024-04-16  0.000270  ...              0                0
127           2024-04-17  0.000250  ...              0                0

[128 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.00026}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.00026}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.00025}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.00025}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.00026}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.00026}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.00028}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.00027}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.0003}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.00029}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.00028}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.0003}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.00031}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.00031}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.00029}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.00029}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.0003}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.0003}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.00032}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.00031}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.00031}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.00034}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.00032}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.00033}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.00031}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.0003}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.00032}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.00033}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.00033}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.00035}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.00031}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.00029}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.00028}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.00023}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.00025}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.00024}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.00022}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.00021}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.00021}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.0002}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.00017}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.00017}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.00017}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.00017}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.00017}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.0002}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.00016}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.00017}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.00017}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.0002}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.00019}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.0002}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.00019}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.00019}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.00024}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00026}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.00025}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00024}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00024}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00024}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.00025}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.00026}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.00026}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.00023}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.00025}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.00026}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.00026}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.00027}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.00029}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00027}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00027}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Enjin_Coin_ENJ
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.31259}]
success ya
UWAGA
db_ENJUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.243431       NaN  ...              0                0       NaN
1    2023-01-02  0.248635       NaN  ...              0                0       NaN
2    2023-01-03  0.244474       NaN  ...              0                0       NaN
3    2023-01-04  0.250187       NaN  ...              0                0       NaN
4    2023-01-05  0.250637       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.280140  0.231356  ...              0                0  0.254173
557  2024-11-28  0.298180  0.236924  ...              0                0  0.255717
558  2024-11-29  0.292940  0.241592  ...              0                0  0.257023
559  2024-11-30  0.298760  0.246356  ...              0                0  0.258487
560  2024-12-01  0.328280  0.253183  ...              0                0  0.260936

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.31259}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.31259}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.243431       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.248635       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.244474       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.250187       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.250637       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.298180  0.236924  ...            0.0              0.0  0.255717
558  2024-11-29  0.292940  0.241592  ...            0.0              0.0  0.257023
559  2024-11-30  0.298760  0.246356  ...            0.0              0.0  0.258487
560  2024-12-01  0.328280  0.253183  ...            0.0              0.0  0.260936
561  2024-12-02  0.312590       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Enjin_Coin_ENJ
NECESSARRRY AAAA START
0
0
2024-04-14
2024-05-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
156  Enjin Coin ENJ  0.31259  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
GMT_GMT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21631}]
success ya
UWAGA
db_GMTUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2022-03-14  0.576605       NaN  ...       NaN              0                0
1    2022-03-21  0.770219       NaN  ...       NaN              0                0
2    2022-03-28  2.464338       NaN  ...       NaN              0                0
3    2022-04-04  2.269289       NaN  ...       NaN              0                0
4    2022-04-11  2.434025       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
618  2024-11-27  0.206200  0.184612  ...  0.197161              0                0
619  2024-11-28  0.207900  0.186553  ...  0.197538              0                0
620  2024-11-29  0.224380  0.189705  ...  0.198480              0                0
621  2024-11-30  0.223680  0.192536  ...  0.199364              0                0
622  2024-12-01  0.224210  0.195176  ...  0.200236              0                0

[623 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21631}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.21631}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2022-03-14  0.576605       NaN  ...       NaN            0.0              0.0
1    2022-03-21  0.770219       NaN  ...       NaN            0.0              0.0
2    2022-03-28  2.464338       NaN  ...       NaN            0.0              0.0
3    2022-04-04  2.269289       NaN  ...       NaN            0.0              0.0
4    2022-04-11  2.434025       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
619  2024-11-28  0.207900  0.186553  ...  0.197538            0.0              0.0
620  2024-11-29  0.224380  0.189705  ...  0.198480            0.0              0.0
621  2024-11-30  0.223680  0.192536  ...  0.199364            0.0              0.0
622  2024-12-01  0.224210  0.195176  ...  0.200236            0.0              0.0
623  2024-12-02  0.216310       NaN  ...       NaN            NaN              NaN

[624 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted GMT_GMT
NECESSARRRY AAAA START
0
0
2024-04-13
2024-04-12
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
157  GMT GMT  0.21631  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Livepeer_LPT
[{'Date': datetime.date(2024, 12, 2), 'Price': 15.2084}]
success ya
UWAGA
db_LPTUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   4.587386  ...                0        NaN
1      2023-01-02   4.661284  ...                0        NaN
2      2023-01-03   4.706936  ...                0        NaN
3      2023-01-04   4.715937  ...                0        NaN
4      2023-01-05   4.491111  ...                0        NaN
...           ...        ...  ...              ...        ...
32386  2024-11-27  14.205600  ...                0  11.721183
32387  2024-11-28  15.243200  ...                1  11.844763
32388  2024-11-29  14.921100  ...                1  11.952704
32389  2024-11-30  15.693100  ...                1  12.083946
32390  2024-12-01  15.535300  ...                1  12.205046

[32391 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 15.2084}, {'Date': datetime.date(2024, 12, 2), 'Price': 15.2084}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   4.587386  ...              0.0        NaN
1      2023-01-02   4.661284  ...              0.0        NaN
2      2023-01-03   4.706936  ...              0.0        NaN
3      2023-01-04   4.715937  ...              0.0        NaN
4      2023-01-05   4.491111  ...              0.0        NaN
...           ...        ...  ...              ...        ...
32387  2024-11-28  15.243200  ...              1.0  11.844763
32388  2024-11-29  14.921100  ...              1.0  11.952704
32389  2024-11-30  15.693100  ...              1.0  12.083946
32390  2024-12-01  15.535300  ...              1.0  12.205046
32391  2024-12-02  15.208400  ...              NaN        NaN

[32392 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Livepeer_LPT
NECESSARRRY AAAA START
1
1
2024-11-28
2024-11-28
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
158  Livepeer LPT  15.2084  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Beldex_BDX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07966}]
success ya
UWAGA
db_BDXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.042306       NaN  ...              0                0       NaN
1    2023-01-02  0.041223       NaN  ...              0                0       NaN
2    2023-01-03  0.040638       NaN  ...              0                0       NaN
3    2023-01-04  0.040552       NaN  ...              0                0       NaN
4    2023-01-05  0.040631       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.079470  0.063507  ...              1                1  0.050636
556  2024-11-28  0.079830  0.064867  ...              1                1  0.051661
557  2024-11-29  0.080950  0.066207  ...              1                1  0.052688
558  2024-11-30  0.080900  0.067432  ...              1                1  0.053678
559  2024-12-01  0.079270  0.068418  ...              1                1  0.054576

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07966}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.07966}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.042306       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.041223       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.040638       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.040552       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.040631       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.079830  0.064867  ...            1.0              1.0  0.051661
557  2024-11-29  0.080950  0.066207  ...            1.0              1.0  0.052688
558  2024-11-30  0.080900  0.067432  ...            1.0              1.0  0.053678
559  2024-12-01  0.079270  0.068418  ...            1.0              1.0  0.054576
560  2024-12-02  0.079660       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Beldex_BDX
NECESSARRRY AAAA START
1
1
2024-06-20
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
159  Beldex BDX  0.07966  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Holo_HOT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00315}]
success ya
UWAGA
db_HOTUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00  0.000724  ...              0                0
1    2023-01-02 00:00:00  0.000700  ...              0                0
2    2023-01-03 00:00:00  0.000683  ...              0                0
3    2023-01-04 00:00:00  0.000687  ...              0                0
4    2023-01-05 00:00:00  0.000676  ...              0                0
..                   ...       ...  ...            ...              ...
468           2024-04-13  0.002490  ...              1                1
469           2024-04-14  0.002310  ...              1                1
470           2024-04-15  0.002170  ...              1                1
471           2024-04-16  0.002240  ...              1                1
472           2024-04-17  0.002100  ...              1                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
/home/entukio/projects/scrapper_crypto_top/venv/lib/python3.11/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log10
  result = getattr(ufunc, method)(*inputs, **kwargs)
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.00234}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.00226}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.00223}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.00223}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.0022}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.00213}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.00231}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.00222}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.0023}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.00225}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.00217}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.00239}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.00241}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.00245}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.00242}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.00238}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.0024}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.0024}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.00248}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.00252}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.00249}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.00243}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.00239}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.0025}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.00249}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.00247}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.00254}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.00263}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.00271}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.00264}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.00238}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.00229}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.00229}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.00209}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.00225}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.00212}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.00207}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.00202}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.00202}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.00194}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.0017}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.00179}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.00185}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.00185}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.00183}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.00187}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.00174}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.00186}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.00181}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.00184}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.00181}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.00177}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.00181}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.00186}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.00207}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00217}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.00216}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00209}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00214}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00213}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.00225}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.00252}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.00284}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.00265}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.00287}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.00282}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.00287}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.00297}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.0034}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00315}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00315}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
DeXe_DEXE
[{'Date': datetime.date(2024, 12, 2), 'Price': 9.55448}]
success ya
UWAGA
db_DEXEUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  2.389038       NaN  ...              0                0       NaN
1      2023-01-02  2.402219       NaN  ...              0                0       NaN
2      2023-01-03  2.385868       NaN  ...              0                0       NaN
3      2023-01-04  2.405730       NaN  ...              0                0       NaN
4      2023-01-05  2.409327       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
34398  2024-11-27  8.520800  8.548525  ...              0                1  8.465455
34399  2024-11-28  8.636200  8.555831  ...              0                1  8.471446
34400  2024-11-29  8.916500  8.585887  ...              0                1  8.487062
34401  2024-11-30  9.193500  8.636522  ...              0                1  8.511850
34402  2024-12-01  9.481000  8.706895  ...              1                1  8.545855

[34403 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 9.55448}, {'Date': datetime.date(2024, 12, 2), 'Price': 9.55448}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  2.389038       NaN  ...            0.0              0.0       NaN
1      2023-01-02  2.402219       NaN  ...            0.0              0.0       NaN
2      2023-01-03  2.385868       NaN  ...            0.0              0.0       NaN
3      2023-01-04  2.405730       NaN  ...            0.0              0.0       NaN
4      2023-01-05  2.409327       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
34399  2024-11-28  8.636200  8.555831  ...            0.0              1.0  8.471446
34400  2024-11-29  8.916500  8.585887  ...            0.0              1.0  8.487062
34401  2024-11-30  9.193500  8.636522  ...            0.0              1.0  8.511850
34402  2024-12-01  9.481000  8.706895  ...            1.0              1.0  8.545855
34403  2024-12-02  9.554480       NaN  ...            NaN              NaN       NaN

[34404 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted DeXe_DEXE
NECESSARRRY AAAA START
1
1
2024-11-11
2024-12-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
161  DeXe DEXE  9.55448  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
APENFT_NFT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_NFTUSD
COINDBBB
             Date         Close  ...  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  1.496300e-02  ...              0                0
1      2023-01-02  1.518000e-02  ...              0                0
2      2023-01-03  1.473000e-02  ...              0                0
3      2023-01-04  1.512800e-02  ...              0                0
4      2023-01-05  1.543600e-02  ...              0                0
...           ...           ...  ...            ...              ...
27496  2024-11-27  5.110000e-07  ...              1                1
27497  2024-11-28  5.103000e-07  ...              1                1
27498  2024-11-29  5.194000e-07  ...              1                1
27499  2024-11-30  5.147000e-07  ...              1                1
27500  2024-12-01  5.266000e-07  ...              1                1

[27501 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date         Close  ...  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  1.496300e-02  ...            0.0              0.0
1      2023-01-02  1.518000e-02  ...            0.0              0.0
2      2023-01-03  1.473000e-02  ...            0.0              0.0
3      2023-01-04  1.512800e-02  ...            0.0              0.0
4      2023-01-05  1.543600e-02  ...            0.0              0.0
...           ...           ...  ...            ...              ...
27497  2024-11-28  5.103000e-07  ...            1.0              1.0
27498  2024-11-29  5.194000e-07  ...            1.0              1.0
27499  2024-11-30  5.147000e-07  ...            1.0              1.0
27500  2024-12-01  5.266000e-07  ...            1.0              1.0
27501  2024-12-02  0.000000e+00  ...            NaN              NaN

[27502 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted APENFT_NFT
NECESSARRRY AAAA START
1
1
2024-10-28
2024-11-10
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name  Price  ...  middle_flip_date  long_flip_date
162  APENFT NFT    0.0  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Celo_CELO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.9729}]
success ya
UWAGA
db_CELOUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.480663       NaN  ...              0                0       NaN
1      2023-01-02  0.491749       NaN  ...              0                0       NaN
2      2023-01-03  0.509733       NaN  ...              0                0       NaN
3      2023-01-04  0.507278       NaN  ...              0                0       NaN
4      2023-01-05  0.493617       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.870900  0.729585  ...              1                1  0.686297
27963  2024-11-28  0.825600  0.737586  ...              1                1  0.691185
27964  2024-11-29  0.862700  0.748012  ...              1                1  0.697203
27965  2024-11-30  0.922300  0.762536  ...              1                1  0.705101
27966  2024-12-01  0.941600  0.777458  ...              1                1  0.713399

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.9729}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.9729}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.480663       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.491749       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.509733       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.507278       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.493617       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.825600  0.737586  ...            1.0              1.0  0.691185
27964  2024-11-29  0.862700  0.748012  ...            1.0              1.0  0.697203
27965  2024-11-30  0.922300  0.762536  ...            1.0              1.0  0.705101
27966  2024-12-01  0.941600  0.777458  ...            1.0              1.0  0.713399
27967  2024-12-02  0.972900       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Celo_CELO
NECESSARRRY AAAA START
1
1
2024-09-25
2024-11-16
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name   Price  ...  middle_flip_date  long_flip_date
163  Celo CELO  0.9729  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Zilliqa_ZIL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02806}]
success ya
UWAGA
db_ZILUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.016267       NaN  ...              0                0       NaN
1    2023-01-02  0.016605       NaN  ...              0                0       NaN
2    2023-01-03  0.016595       NaN  ...              0                0       NaN
3    2023-01-04  0.016883       NaN  ...              0                0       NaN
4    2023-01-05  0.016961       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.025500  0.021237  ...              1                0  0.021636
557  2024-11-28  0.024900  0.021543  ...              0                0  0.021750
558  2024-11-29  0.026750  0.021977  ...              1                1  0.021926
559  2024-11-30  0.026690  0.022369  ...              1                1  0.022093
560  2024-12-01  0.026620  0.022724  ...              1                1  0.022252

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02806}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02806}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.016267       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.016605       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.016595       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.016883       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.016961       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.024900  0.021543  ...            0.0              0.0  0.021750
558  2024-11-29  0.026750  0.021977  ...            1.0              1.0  0.021926
559  2024-11-30  0.026690  0.022369  ...            1.0              1.0  0.022093
560  2024-12-01  0.026620  0.022724  ...            1.0              1.0  0.022252
561  2024-12-02  0.028060       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Zilliqa_ZIL
NECESSARRRY AAAA START
1
1
2024-11-29
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
164  Zilliqa ZIL  0.02806  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ether.fi_ETHFI
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.55355}]
success ya
UWAGA
db_ETHFIUSD
COINDBBB
            Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0     2024-03-18  3.307485       NaN  ...             0                0       NaN
1     2024-03-19  3.010959       NaN  ...             0                0       NaN
2     2024-03-20  4.189767       NaN  ...             0                0       NaN
3     2024-03-21  3.809451       NaN  ...             0                0       NaN
4     2024-03-22  3.674786       NaN  ...             0                0       NaN
...          ...       ...       ...  ...           ...              ...       ...
8024  2024-11-27  2.533000  1.842251  ...             1                1  1.685277
8025  2024-11-28  2.390000  1.887896  ...             1                1  1.710004
8026  2024-11-29  2.350000  1.926405  ...             1                1  1.732460
8027  2024-11-30  2.566000  1.979705  ...             1                1  1.761707
8028  2024-12-01  2.524000  2.025063  ...             1                1  1.788454

[8029 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.55355}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.55355}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0     2024-03-18  3.307485       NaN  ...           0.0              0.0       NaN
1     2024-03-19  3.010959       NaN  ...           0.0              0.0       NaN
2     2024-03-20  4.189767       NaN  ...           0.0              0.0       NaN
3     2024-03-21  3.809451       NaN  ...           0.0              0.0       NaN
4     2024-03-22  3.674786       NaN  ...           0.0              0.0       NaN
...          ...       ...       ...  ...           ...              ...       ...
8025  2024-11-28  2.390000  1.887896  ...           1.0              1.0  1.710004
8026  2024-11-29  2.350000  1.926405  ...           1.0              1.0  1.732460
8027  2024-11-30  2.566000  1.979705  ...           1.0              1.0  1.761707
8028  2024-12-01  2.524000  2.025063  ...           1.0              1.0  1.788454
8029  2024-12-02  2.553550       NaN  ...           NaN              NaN       NaN

[8030 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted ether
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
165  ether.fi ETHFI  2.55355  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Cheelee_CHEEL
[{'Date': datetime.date(2024, 12, 2), 'Price': 9.39323}]
success ya
UWAGA
db_CHEELUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-02-17 00:00:00    4.316452  ...              0                0
1    2023-02-18 00:00:00    4.313484  ...              0                0
2    2023-02-19 00:00:00    4.464661  ...              0                0
3    2023-02-20 00:00:00    4.913121  ...              0                0
4    2023-02-21 00:00:00    5.193486  ...              0                0
..                   ...         ...  ...            ...              ...
421           2024-04-13   16.189000  ...              0                1
422           2024-04-14  156.443000  ...              1                1
423           2024-04-15  160.796000  ...              1                1
424           2024-04-16  156.908000  ...              1                1
425           2024-04-17   15.463700  ...              0                1

[426 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 16.5123}, {'Date': datetime.date(2024, 5, 10), 'Price': 17.9761}, {'Date': datetime.date(2024, 5, 11), 'Price': 17.9284}, {'Date': datetime.date(2024, 5, 12), 'Price': 17.9284}, {'Date': datetime.date(2024, 5, 13), 'Price': 18.6873}, {'Date': datetime.date(2024, 5, 14), 'Price': 18.3262}, {'Date': datetime.date(2024, 5, 15), 'Price': 19.0478}, {'Date': datetime.date(2024, 5, 16), 'Price': 18.7501}, {'Date': datetime.date(2024, 5, 17), 'Price': 19.0626}, {'Date': datetime.date(2024, 5, 18), 'Price': 19.0175}, {'Date': datetime.date(2024, 5, 19), 'Price': 18.9138}, {'Date': datetime.date(2024, 5, 20), 'Price': 19.5326}, {'Date': datetime.date(2024, 5, 21), 'Price': 20.2517}, {'Date': datetime.date(2024, 5, 22), 'Price': 20.22}, {'Date': datetime.date(2024, 5, 23), 'Price': 20.1803}, {'Date': datetime.date(2024, 5, 24), 'Price': 20.5438}, {'Date': datetime.date(2024, 5, 25), 'Price': 20.2587}, {'Date': datetime.date(2024, 5, 26), 'Price': 20.2587}, {'Date': datetime.date(2024, 5, 27), 'Price': 20.5424}, {'Date': datetime.date(2024, 5, 28), 'Price': 20.2165}, {'Date': datetime.date(2024, 5, 29), 'Price': 20.3525}, {'Date': datetime.date(2024, 5, 30), 'Price': 20.3534}, {'Date': datetime.date(2024, 5, 31), 'Price': 20.4398}, {'Date': datetime.date(2024, 6, 1), 'Price': 20.428}, {'Date': datetime.date(2024, 6, 2), 'Price': 20.2893}, {'Date': datetime.date(2024, 6, 3), 'Price': 20.3614}, {'Date': datetime.date(2024, 6, 4), 'Price': 20.562}, {'Date': datetime.date(2024, 6, 5), 'Price': 21.2142}, {'Date': datetime.date(2024, 6, 6), 'Price': 21.0341}, {'Date': datetime.date(2024, 6, 7), 'Price': 21.3047}, {'Date': datetime.date(2024, 6, 8), 'Price': 20.5802}, {'Date': datetime.date(2024, 6, 9), 'Price': 20.6014}, {'Date': datetime.date(2024, 6, 10), 'Price': 20.4444}, {'Date': datetime.date(2024, 6, 11), 'Price': 19.9078}, {'Date': datetime.date(2024, 6, 12), 'Price': 20.4931}, {'Date': datetime.date(2024, 6, 13), 'Price': 20.1686}, {'Date': datetime.date(2024, 6, 14), 'Price': 20.3164}, {'Date': datetime.date(2024, 6, 15), 'Price': 20.4773}, {'Date': datetime.date(2024, 6, 16), 'Price': 20.4773}, {'Date': datetime.date(2024, 6, 17), 'Price': 19.9249}, {'Date': datetime.date(2024, 6, 18), 'Price': 19.1534}, {'Date': datetime.date(2024, 6, 19), 'Price': 19.5533}, {'Date': datetime.date(2024, 6, 20), 'Price': 19.6799}, {'Date': datetime.date(2024, 6, 21), 'Price': 19.7886}, {'Date': datetime.date(2024, 6, 22), 'Price': 19.7554}, {'Date': datetime.date(2024, 6, 23), 'Price': 19.7699}, {'Date': datetime.date(2024, 6, 24), 'Price': 19.2131}, {'Date': datetime.date(2024, 6, 25), 'Price': 19.9738}, {'Date': datetime.date(2024, 6, 26), 'Price': 19.8995}, {'Date': datetime.date(2024, 6, 27), 'Price': 20.2083}, {'Date': datetime.date(2024, 6, 28), 'Price': 20.0639}, {'Date': datetime.date(2024, 6, 29), 'Price': 20.0983}, {'Date': datetime.date(2024, 6, 30), 'Price': 20.2182}, {'Date': datetime.date(2024, 7, 1), 'Price': 20.5249}, {'Date': datetime.date(2024, 11, 17), 'Price': 11.1028}, {'Date': datetime.date(2024, 11, 18), 'Price': 11.1179}, {'Date': datetime.date(2024, 11, 19), 'Price': 11.014}, {'Date': datetime.date(2024, 11, 20), 'Price': 11.2967}, {'Date': datetime.date(2024, 11, 21), 'Price': 11.3014}, {'Date': datetime.date(2024, 11, 22), 'Price': 10.1583}, {'Date': datetime.date(2024, 11, 23), 'Price': 10.2055}, {'Date': datetime.date(2024, 11, 24), 'Price': 9.8687}, {'Date': datetime.date(2024, 11, 25), 'Price': 9.48713}, {'Date': datetime.date(2024, 11, 26), 'Price': 9.52975}, {'Date': datetime.date(2024, 11, 27), 'Price': 9.51932}, {'Date': datetime.date(2024, 11, 28), 'Price': 9.48995}, {'Date': datetime.date(2024, 11, 29), 'Price': 9.49957}, {'Date': datetime.date(2024, 11, 30), 'Price': 9.49333}, {'Date': datetime.date(2024, 12, 1), 'Price': 9.48566}, {'Date': datetime.date(2024, 12, 2), 'Price': 9.39323}, {'Date': datetime.date(2024, 12, 2), 'Price': 9.39323}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
IoTeX_IOTX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05534}]
success ya
UWAGA
db_IOTXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.021464       NaN  ...              0                0       NaN
1    2023-01-02  0.021177       NaN  ...              0                0       NaN
2    2023-01-03  0.021065       NaN  ...              0                0       NaN
3    2023-01-04  0.022173       NaN  ...              0                0       NaN
4    2023-01-05  0.022045       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.046880  0.044375  ...              0                0  0.048020
557  2024-11-28  0.048150  0.044690  ...              0                0  0.048025
558  2024-11-29  0.048560  0.045012  ...              0                0  0.048043
559  2024-11-30  0.049250  0.045365  ...              0                0  0.048086
560  2024-12-01  0.052580  0.045967  ...              0                0  0.048243

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05534}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.05534}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.021464       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.021177       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.021065       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.022173       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.022045       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.048150  0.044690  ...            0.0              0.0  0.048025
558  2024-11-29  0.048560  0.045012  ...            0.0              0.0  0.048043
559  2024-11-30  0.049250  0.045365  ...            0.0              0.0  0.048086
560  2024-12-01  0.052580  0.045967  ...            0.0              0.0  0.048243
561  2024-12-02  0.055340       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted IoTeX_IOTX
NECESSARRRY AAAA START
0
1
2024-06-08
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
167  IoTeX IOTX  0.05534  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
PAX_Gold_PAXG
[{'Date': datetime.date(2024, 12, 2), 'Price': 2638.29}]
success ya
UWAGA
db_PAXGUSD
COINDBBB
           Date        Close  ...  Middle_Trend_Up        EMA56
0    2023-01-01  1822.371338  ...                0          NaN
1    2023-01-02  1822.265991  ...                0          NaN
2    2023-01-03  1841.511475  ...                0          NaN
3    2023-01-04  1851.679688  ...                0          NaN
4    2023-01-05  1834.508423  ...                0          NaN
..          ...          ...  ...              ...          ...
556  2024-11-27  2646.000000  ...                1  2429.266903
557  2024-11-28  2640.600000  ...                1  2436.682100
558  2024-11-29  2646.830000  ...                1  2444.055710
559  2024-11-30  2639.210000  ...                1  2450.903229
560  2024-12-01  2645.180000  ...                1  2457.719958

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2638.29}, {'Date': datetime.date(2024, 12, 2), 'Price': 2638.29}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date        Close  ...  Middle_Trend_Up        EMA56
0    2023-01-01  1822.371338  ...              0.0          NaN
1    2023-01-02  1822.265991  ...              0.0          NaN
2    2023-01-03  1841.511475  ...              0.0          NaN
3    2023-01-04  1851.679688  ...              0.0          NaN
4    2023-01-05  1834.508423  ...              0.0          NaN
..          ...          ...  ...              ...          ...
557  2024-11-28  2640.600000  ...              1.0  2436.682100
558  2024-11-29  2646.830000  ...              1.0  2444.055710
559  2024-11-30  2639.210000  ...              1.0  2450.903229
560  2024-12-01  2645.180000  ...              1.0  2457.719958
561  2024-12-02  2638.290000  ...              NaN          NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted PAX_Gold_PAXG
NECESSARRRY AAAA START
1
1
2024-11-17
2023-11-14
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
168  PAX Gold PAXG  2638.29  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Trust_Wallet_Token_TWT
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.24832}]
success ya
UWAGA
db_TWTUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.418106       NaN  ...              0                0       NaN
1      2023-01-02  1.483983       NaN  ...              0                0       NaN
2      2023-01-03  1.448692       NaN  ...              0                0       NaN
3      2023-01-04  1.448471       NaN  ...              0                0       NaN
4      2023-01-05  1.401426       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.108700  1.017274  ...              1                1  1.007708
27963  2024-11-28  1.129000  1.026584  ...              1                1  1.011964
27964  2024-11-29  1.167600  1.038335  ...              1                1  1.017425
27965  2024-11-30  1.200700  1.051866  ...              1                1  1.023856
27966  2024-12-01  1.187000  1.063127  ...              1                1  1.029580

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.24832}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.24832}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.418106       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.483983       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.448692       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.448471       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.401426       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.129000  1.026584  ...            1.0              1.0  1.011964
27964  2024-11-29  1.167600  1.038335  ...            1.0              1.0  1.017425
27965  2024-11-30  1.200700  1.051866  ...            1.0              1.0  1.023856
27966  2024-12-01  1.187000  1.063127  ...            1.0              1.0  1.029580
27967  2024-12-02  1.248320       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Trust_Wallet_Token_TWT
NECESSARRRY AAAA START
1
1
2024-11-25
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                       Name    Price  ...  middle_flip_date  long_flip_date
169  Trust Wallet Token TWT  1.24832  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
WEMIX_WEMIX
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.22685}]
success ya
UWAGA
db_WEMIXUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.362182       NaN  ...              0                0       NaN
1      2023-01-02  0.362543       NaN  ...              0                0       NaN
2      2023-01-03  0.359080       NaN  ...              0                0       NaN
3      2023-01-04  0.361061       NaN  ...              0                0       NaN
4      2023-01-05  0.366471       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.267300  1.013060  ...              1                1  0.916206
27963  2024-11-28  1.257000  1.033388  ...              1                1  0.928164
27964  2024-11-29  1.240000  1.050606  ...              1                1  0.939106
27965  2024-11-30  1.239600  1.066355  ...              1                1  0.949649
27966  2024-12-01  1.335800  1.088809  ...              1                1  0.963199

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.22685}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.22685}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.362182       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.362543       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.359080       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.361061       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.366471       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.257000  1.033388  ...            1.0              1.0  0.928164
27964  2024-11-29  1.240000  1.050606  ...            1.0              1.0  0.939106
27965  2024-11-30  1.239600  1.066355  ...            1.0              1.0  0.949649
27966  2024-12-01  1.335800  1.088809  ...            1.0              1.0  0.963199
27967  2024-12-02  1.226850       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted WEMIX_WEMIX
NECESSARRRY AAAA START
1
1
2024-11-19
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
170  WEMIX WEMIX  1.22685  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Act_I_:_The_AI_Prophecy_ACT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.5335}]
success ya
UWAGA
db_ACTUSD
COINDBBB
           Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-24  0.001356       NaN  ...       NaN              0                0
1    2023-10-25  0.001380       NaN  ...       NaN              0                0
2    2023-10-26  0.001195       NaN  ...       NaN              0                0
3    2023-10-27  0.001186       NaN  ...       NaN              0                0
4    2023-10-28  0.001193       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
219  2024-05-30  0.000924  0.001311  ...  0.001397              0                0
220  2024-05-31  0.000802  0.001269  ...  0.001395              0                0
221  2024-06-01  0.000806  0.001230  ...  0.001393              0                0
222  2024-06-02  0.000756  0.001191  ...  0.001390              0                0
223  2024-06-03  0.000731  0.001152  ...  0.001387              0                0

[224 rows x 7 columns]
last_db_date_data
2024-06-03
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 11, 17), 'Price': 0.62854}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.61923}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.62445}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.53913}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.51323}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.45689}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.44001}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.46337}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.4407}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.40642}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.4396}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.42464}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.66372}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.66976}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.61069}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.5335}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.5335}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Memecoin_MEME
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01549}]
success ya
UWAGA
db_MEMEUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.169410       NaN  ...              0                0       NaN
1      2023-01-02  0.159709       NaN  ...              0                0       NaN
2      2023-01-03  0.156791       NaN  ...              0                0       NaN
3      2023-01-04  0.171836       NaN  ...              0                0       NaN
4      2023-01-05  0.167020       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
17714  2024-11-27  0.014395  0.013474  ...              0                1  0.012779
17715  2024-11-28  0.014946  0.013596  ...              0                1  0.012855
17716  2024-11-29  0.015196  0.013730  ...              1                1  0.012937
17717  2024-11-30  0.016097  0.013927  ...              1                1  0.013048
17718  2024-12-01  0.016298  0.014125  ...              1                1  0.013162

[17719 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01549}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01549}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.169410       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.159709       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.156791       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.171836       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.167020       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
17715  2024-11-28  0.014946  0.013596  ...            0.0              1.0  0.012855
17716  2024-11-29  0.015196  0.013730  ...            1.0              1.0  0.012937
17717  2024-11-30  0.016097  0.013927  ...            1.0              1.0  0.013048
17718  2024-12-01  0.016298  0.014125  ...            1.0              1.0  0.013162
17719  2024-12-02  0.015490       NaN  ...            NaN              NaN       NaN

[17720 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Memecoin_MEME
NECESSARRRY AAAA START
1
1
2024-10-17
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
172  Memecoin MEME  0.01549  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Reserve_Rights_RSR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00941}]
success ya
UWAGA
db_RSRUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.002863       NaN  ...              0                0       NaN
1    2023-01-02  0.002934       NaN  ...              0                0       NaN
2    2023-01-03  0.002973       NaN  ...              0                0       NaN
3    2023-01-04  0.003014       NaN  ...              0                0       NaN
4    2023-01-05  0.003091       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.008900  0.007380  ...              1                1  0.007105
557  2024-11-28  0.008970  0.007513  ...              1                1  0.007170
558  2024-11-29  0.009480  0.007677  ...              1                1  0.007251
559  2024-11-30  0.009440  0.007824  ...              1                1  0.007328
560  2024-12-01  0.009960  0.008002  ...              1                1  0.007420

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00941}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00941}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.002863       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.002934       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.002973       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.003014       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.003091       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.008970  0.007513  ...            1.0              1.0  0.007170
558  2024-11-29  0.009480  0.007677  ...            1.0              1.0  0.007251
559  2024-11-30  0.009440  0.007824  ...            1.0              1.0  0.007328
560  2024-12-01  0.009960  0.008002  ...            1.0              1.0  0.007420
561  2024-12-02  0.009410       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Reserve_Rights_RSR
NECESSARRRY AAAA START
1
1
2024-11-24
2024-06-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name    Price  ...  middle_flip_date  long_flip_date
173  Reserve Rights RSR  0.00941  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Arkham_ARKM
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.19495}]
success ya
UWAGA
db_ARKMUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-07-18  0.654144       NaN  ...              0                0       NaN
1      2023-07-19  0.618793       NaN  ...              0                0       NaN
2      2023-07-20  0.593207       NaN  ...              0                0       NaN
3      2023-07-21  0.626520       NaN  ...              0                0       NaN
4      2023-07-22  0.621196       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
18488  2024-11-27  2.211800  2.046574  ...              1                1  1.850155
18489  2024-11-28  2.379600  2.074326  ...              1                1  1.868732
18490  2024-11-29  2.327800  2.095449  ...              1                1  1.884840
18491  2024-11-30  2.410700  2.121720  ...              1                1  1.903291
18492  2024-12-01  2.335800  2.139560  ...              1                1  1.918467

[18493 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.19495}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.19495}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-07-18  0.654144       NaN  ...            0.0              0.0       NaN
1      2023-07-19  0.618793       NaN  ...            0.0              0.0       NaN
2      2023-07-20  0.593207       NaN  ...            0.0              0.0       NaN
3      2023-07-21  0.626520       NaN  ...            0.0              0.0       NaN
4      2023-07-22  0.621196       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
18489  2024-11-28  2.379600  2.074326  ...            1.0              1.0  1.868732
18490  2024-11-29  2.327800  2.095449  ...            1.0              1.0  1.884840
18491  2024-11-30  2.410700  2.121720  ...            1.0              1.0  1.903291
18492  2024-12-01  2.335800  2.139560  ...            1.0              1.0  1.918467
18493  2024-12-02  2.194950       NaN  ...            NaN              NaN       NaN

[18494 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Arkham_ARKM
NECESSARRRY AAAA START
1
1
2024-09-27
2024-11-05
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
174  Arkham ARKM  2.19495  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Qubic_QUBIC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_QUBICUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_QUBICUSD': no such table: db_QUBICUSD
trying
 inicjacja duplicates
duplicate info
[False]
0x_ZRX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.58108}]
success ya
UWAGA
db_ZRXUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.150536       NaN  ...              0                0       NaN
1      2023-01-02  0.156269       NaN  ...              0                0       NaN
2      2023-01-03  0.154424       NaN  ...              0                0       NaN
3      2023-01-04  0.158332       NaN  ...              0                0       NaN
4      2023-01-05  0.157024       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
16422  2024-11-27  0.577100  0.432651  ...              1                1  0.380048
16423  2024-11-28  0.548500  0.442305  ...              1                1  0.385959
16424  2024-11-29  0.570900  0.453021  ...              1                1  0.392448
16425  2024-11-30  0.583600  0.463903  ...              1                1  0.399155
16426  2024-12-01  0.595100  0.474836  ...              1                1  0.406030

[16427 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.58108}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.58108}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.150536       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.156269       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.154424       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.158332       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.157024       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
16423  2024-11-28  0.548500  0.442305  ...            1.0              1.0  0.385959
16424  2024-11-29  0.570900  0.453021  ...            1.0              1.0  0.392448
16425  2024-11-30  0.583600  0.463903  ...            1.0              1.0  0.399155
16426  2024-12-01  0.595100  0.474836  ...            1.0              1.0  0.406030
16427  2024-12-02  0.581080       NaN  ...            NaN              NaN       NaN

[16428 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted 0x_ZRX
NECESSARRRY AAAA START
1
1
2024-11-10
2024-11-16
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
       Name    Price  ...  middle_flip_date  long_flip_date
176  0x ZRX  0.58108  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Convex_Finance_CVX
[{'Date': datetime.date(2024, 12, 2), 'Price': 5.07785}]
success ya
UWAGA
db_CVXUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  3.204904       NaN  ...              0                0       NaN
1      2023-01-02  3.223753       NaN  ...              0                0       NaN
2      2023-01-03  3.182438       NaN  ...              0                0       NaN
3      2023-01-04  3.194904       NaN  ...              0                0       NaN
4      2023-01-05  3.096894       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  3.184100  2.496434  ...              1                1  2.198840
27963  2024-11-28  2.993500  2.537856  ...              1                1  2.226722
27964  2024-11-29  3.102800  2.584934  ...              1                1  2.257462
27965  2024-11-30  3.738200  2.681040  ...              1                1  2.309418
27966  2024-12-01  5.135400  2.885570  ...              1                1  2.408575

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 5.07785}, {'Date': datetime.date(2024, 12, 2), 'Price': 5.07785}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  3.204904       NaN  ...            0.0              0.0       NaN
1      2023-01-02  3.223753       NaN  ...            0.0              0.0       NaN
2      2023-01-03  3.182438       NaN  ...            0.0              0.0       NaN
3      2023-01-04  3.194904       NaN  ...            0.0              0.0       NaN
4      2023-01-05  3.096894       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  2.993500  2.537856  ...            1.0              1.0  2.226722
27964  2024-11-29  3.102800  2.584934  ...            1.0              1.0  2.257462
27965  2024-11-30  3.738200  2.681040  ...            1.0              1.0  2.309418
27966  2024-12-01  5.135400  2.885570  ...            1.0              1.0  2.408575
27967  2024-12-02  5.077850       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Convex_Finance_CVX
NECESSARRRY AAAA START
1
1
2024-11-19
2024-11-19
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name    Price  ...  middle_flip_date  long_flip_date
177  Convex Finance CVX  5.07785  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Echelon_Prime_PRIME
[{'Date': datetime.date(2024, 12, 2), 'Price': 13.5424}]
success ya
UWAGA
db_PRIMEUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.087473  ...              0                0
1    2023-01-02 00:00:00    0.087580  ...              0                0
2    2023-01-03 00:00:00    0.088979  ...              0                0
3    2023-01-04 00:00:00    0.087379  ...              0                0
4    2023-01-05 00:00:00    0.088773  ...              0                0
..                   ...         ...  ...            ...              ...
464           2024-04-13  203.835000  ...              1                1
465           2024-04-14  216.757000  ...              1                1
466           2024-04-15   20.549000  ...              1                1
467           2024-04-16  194.296000  ...              1                1
468           2024-04-17   17.347500  ...              0                1

[469 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 15.3822}, {'Date': datetime.date(2024, 5, 10), 'Price': 15.2353}, {'Date': datetime.date(2024, 5, 11), 'Price': 15.4787}, {'Date': datetime.date(2024, 5, 12), 'Price': 15.4787}, {'Date': datetime.date(2024, 5, 13), 'Price': 14.7961}, {'Date': datetime.date(2024, 5, 14), 'Price': 13.768}, {'Date': datetime.date(2024, 5, 15), 'Price': 16.1358}, {'Date': datetime.date(2024, 5, 16), 'Price': 15.7666}, {'Date': datetime.date(2024, 5, 17), 'Price': 16.937}, {'Date': datetime.date(2024, 5, 18), 'Price': 17.7071}, {'Date': datetime.date(2024, 5, 19), 'Price': 16.9854}, {'Date': datetime.date(2024, 5, 20), 'Price': 19.8091}, {'Date': datetime.date(2024, 5, 21), 'Price': 19.6141}, {'Date': datetime.date(2024, 5, 22), 'Price': 18.3758}, {'Date': datetime.date(2024, 5, 23), 'Price': 16.9564}, {'Date': datetime.date(2024, 5, 24), 'Price': 16.7163}, {'Date': datetime.date(2024, 5, 25), 'Price': 17.7307}, {'Date': datetime.date(2024, 5, 26), 'Price': 17.7307}, {'Date': datetime.date(2024, 5, 27), 'Price': 20.0239}, {'Date': datetime.date(2024, 5, 28), 'Price': 17.9596}, {'Date': datetime.date(2024, 5, 29), 'Price': 17.5026}, {'Date': datetime.date(2024, 5, 30), 'Price': 17.4609}, {'Date': datetime.date(2024, 5, 31), 'Price': 16.9983}, {'Date': datetime.date(2024, 6, 1), 'Price': 16.6302}, {'Date': datetime.date(2024, 6, 2), 'Price': 16.0917}, {'Date': datetime.date(2024, 6, 3), 'Price': 16.6004}, {'Date': datetime.date(2024, 6, 4), 'Price': 16.8721}, {'Date': datetime.date(2024, 6, 5), 'Price': 18.6927}, {'Date': datetime.date(2024, 6, 6), 'Price': 17.2138}, {'Date': datetime.date(2024, 6, 7), 'Price': 16.0186}, {'Date': datetime.date(2024, 6, 8), 'Price': 15.0178}, {'Date': datetime.date(2024, 6, 9), 'Price': 13.8996}, {'Date': datetime.date(2024, 6, 10), 'Price': 12.5251}, {'Date': datetime.date(2024, 6, 11), 'Price': 12.4667}, {'Date': datetime.date(2024, 6, 12), 'Price': 13.5182}, {'Date': datetime.date(2024, 6, 13), 'Price': 11.4183}, {'Date': datetime.date(2024, 6, 14), 'Price': 10.8678}, {'Date': datetime.date(2024, 6, 15), 'Price': 10.3483}, {'Date': datetime.date(2024, 6, 16), 'Price': 10.3483}, {'Date': datetime.date(2024, 6, 17), 'Price': 9.30054}, {'Date': datetime.date(2024, 6, 18), 'Price': 9.11186}, {'Date': datetime.date(2024, 6, 19), 'Price': 10.3}, {'Date': datetime.date(2024, 6, 20), 'Price': 10.5273}, {'Date': datetime.date(2024, 6, 21), 'Price': 10.349}, {'Date': datetime.date(2024, 6, 22), 'Price': 10.5769}, {'Date': datetime.date(2024, 6, 23), 'Price': 10.4899}, {'Date': datetime.date(2024, 6, 24), 'Price': 8.98845}, {'Date': datetime.date(2024, 6, 25), 'Price': 9.50916}, {'Date': datetime.date(2024, 6, 26), 'Price': 8.7504}, {'Date': datetime.date(2024, 6, 27), 'Price': 8.84409}, {'Date': datetime.date(2024, 6, 28), 'Price': 8.39036}, {'Date': datetime.date(2024, 6, 29), 'Price': 8.58488}, {'Date': datetime.date(2024, 6, 30), 'Price': 8.83281}, {'Date': datetime.date(2024, 7, 1), 'Price': 9.26114}, {'Date': datetime.date(2024, 11, 17), 'Price': 8.78733}, {'Date': datetime.date(2024, 11, 18), 'Price': 9.25397}, {'Date': datetime.date(2024, 11, 19), 'Price': 8.53701}, {'Date': datetime.date(2024, 11, 20), 'Price': 8.23019}, {'Date': datetime.date(2024, 11, 21), 'Price': 8.19282}, {'Date': datetime.date(2024, 11, 22), 'Price': 7.67356}, {'Date': datetime.date(2024, 11, 23), 'Price': 8.1015}, {'Date': datetime.date(2024, 11, 24), 'Price': 8.92685}, {'Date': datetime.date(2024, 11, 25), 'Price': 9.75564}, {'Date': datetime.date(2024, 11, 26), 'Price': 9.7917}, {'Date': datetime.date(2024, 11, 27), 'Price': 11.7531}, {'Date': datetime.date(2024, 11, 28), 'Price': 11.9479}, {'Date': datetime.date(2024, 11, 29), 'Price': 11.4892}, {'Date': datetime.date(2024, 11, 30), 'Price': 11.5199}, {'Date': datetime.date(2024, 12, 1), 'Price': 14.2215}, {'Date': datetime.date(2024, 12, 2), 'Price': 13.5424}, {'Date': datetime.date(2024, 12, 2), 'Price': 13.5424}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Dymension_DYM
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.22525}]
success ya
UWAGA
db_DYMUSD
COINDBBB
             Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0      2024-01-29  4.673118       NaN  ...             0                0       NaN
1      2024-01-30  4.702418       NaN  ...             0                0       NaN
2      2024-01-31  4.624220       NaN  ...             0                0       NaN
3      2024-02-01  4.699581       NaN  ...             0                0       NaN
4      2024-02-02  4.683134       NaN  ...             0                0       NaN
...           ...       ...       ...  ...           ...              ...       ...
10861  2024-11-27  2.275800  1.843813  ...             1                1  1.704460
10862  2024-11-28  2.258200  1.878345  ...             1                1  1.723889
10863  2024-11-29  2.310500  1.914358  ...             1                1  1.744472
10864  2024-11-30  2.422200  1.956678  ...             1                1  1.768252
10865  2024-12-01  2.382300  1.992147  ...             1                1  1.789798

[10866 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.22525}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.22525}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0      2024-01-29  4.673118       NaN  ...           0.0              0.0       NaN
1      2024-01-30  4.702418       NaN  ...           0.0              0.0       NaN
2      2024-01-31  4.624220       NaN  ...           0.0              0.0       NaN
3      2024-02-01  4.699581       NaN  ...           0.0              0.0       NaN
4      2024-02-02  4.683134       NaN  ...           0.0              0.0       NaN
...           ...       ...       ...  ...           ...              ...       ...
10862  2024-11-28  2.258200  1.878345  ...           1.0              1.0  1.723889
10863  2024-11-29  2.310500  1.914358  ...           1.0              1.0  1.744472
10864  2024-11-30  2.422200  1.956678  ...           1.0              1.0  1.768252
10865  2024-12-01  2.382300  1.992147  ...           1.0              1.0  1.789798
10866  2024-12-02  2.225250       NaN  ...           NaN              NaN       NaN

[10867 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Dymension_DYM
NECESSARRRY AAAA START
1
1
2024-11-21
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
179  Dymension DYM  2.22525  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
VerusCoin_VRSC
[{'Date': datetime.date(2024, 12, 2), 'Price': 6.13817}]
success ya
UWAGA
db_VRSCUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_VRSCUSD': no such table: db_VRSCUSD
trying
 inicjacja duplicates
duplicate info
[False]
ZetaChain_ZETA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.82812}]
success ya
UWAGA
db_ZETAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-11-29  0.004043       NaN  ...              0                0       NaN
1      2023-11-30  0.003908       NaN  ...              0                0       NaN
2      2023-12-01  0.003981       NaN  ...              0                0       NaN
3      2023-12-02  0.003843       NaN  ...              0                0       NaN
4      2023-12-03  0.004818       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
11261  2024-11-27  0.795900  0.710728  ...              1                1  0.677338
11262  2024-11-28  0.828500  0.720542  ...              1                1  0.682642
11263  2024-11-29  0.817300  0.728605  ...              1                1  0.687367
11264  2024-11-30  0.856600  0.739272  ...              1                1  0.693305
11265  2024-12-01  0.881200  0.751099  ...              1                1  0.699898

[11266 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.82812}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.82812}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-11-29  0.004043       NaN  ...            0.0              0.0       NaN
1      2023-11-30  0.003908       NaN  ...            0.0              0.0       NaN
2      2023-12-01  0.003981       NaN  ...            0.0              0.0       NaN
3      2023-12-02  0.003843       NaN  ...            0.0              0.0       NaN
4      2023-12-03  0.004818       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
11262  2024-11-28  0.828500  0.720542  ...            1.0              1.0  0.682642
11263  2024-11-29  0.817300  0.728605  ...            1.0              1.0  0.687367
11264  2024-11-30  0.856600  0.739272  ...            1.0              1.0  0.693305
11265  2024-12-01  0.881200  0.751099  ...            1.0              1.0  0.699898
11266  2024-12-02  0.828120       NaN  ...            NaN              NaN       NaN

[11267 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted ZetaChain_ZETA
NECESSARRRY AAAA START
1
1
2024-10-15
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
181  ZetaChain ZETA  0.82812  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Turbo_TURBO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00725}]
success ya
UWAGA
db_TURBOUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_TURBOUSD': no such table: db_TURBOUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
PepeCoin_PEPECOIN
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.57997}]
success ya
UWAGA
db_PEPECOINUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PEPECOINUSD': no such table: db_PEPECOINUSD
trying
 inicjacja duplicates
duplicate info
[False]
Golem_GLM
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.46859}]
success ya
UWAGA
db_GLMUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.180077       NaN  ...              0                0       NaN
1    2023-01-02  0.181658       NaN  ...              0                0       NaN
2    2023-01-03  0.179190       NaN  ...              0                0       NaN
3    2023-01-04  0.183506       NaN  ...              0                0       NaN
4    2023-01-05  0.183057       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.493110  0.404514  ...              1                0  0.422550
557  2024-11-28  0.474790  0.410370  ...              1                0  0.424383
558  2024-11-29  0.490980  0.417088  ...              1                0  0.426720
559  2024-11-30  0.500050  0.424001  ...              1                0  0.429293
560  2024-12-01  0.486000  0.429168  ...              1                0  0.431283

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.46859}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.46859}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.180077       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.181658       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.179190       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.183506       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.183057       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.474790  0.410370  ...            1.0              0.0  0.424383
558  2024-11-29  0.490980  0.417088  ...            1.0              0.0  0.426720
559  2024-11-30  0.500050  0.424001  ...            1.0              0.0  0.429293
560  2024-12-01  0.486000  0.429168  ...            1.0              0.0  0.431283
561  2024-12-02  0.468590       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Golem_GLM
NECESSARRRY AAAA START
0
1
2024-06-11
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
184  Golem GLM  0.46859  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Meta_Games_Coin_MGC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.42262}]
success ya
UWAGA
db_MGCUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_MGCUSD': no such table: db_MGCUSD
trying
 inicjacja duplicates
duplicate info
[False]
Basic_Attention_Token_BAT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.30996}]
success ya
UWAGA
db_BATUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.168227       NaN  ...              0                0       NaN
1    2023-01-02  0.173279       NaN  ...              0                0       NaN
2    2023-01-03  0.173310       NaN  ...              0                0       NaN
3    2023-01-04  0.180471       NaN  ...              0                0       NaN
4    2023-01-05  0.175743       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.300000  0.230598  ...              1                1  0.229037
557  2024-11-28  0.300150  0.236394  ...              1                1  0.231532
558  2024-11-29  0.325900  0.243853  ...              1                1  0.234844
559  2024-11-30  0.325980  0.250697  ...              1                1  0.238041
560  2024-12-01  0.321630  0.256608  ...              1                1  0.240974

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.30996}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.30996}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.168227       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.173279       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.173310       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.180471       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.175743       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.300150  0.236394  ...            1.0              1.0  0.231532
558  2024-11-29  0.325900  0.243853  ...            1.0              1.0  0.234844
559  2024-11-30  0.325980  0.250697  ...            1.0              1.0  0.238041
560  2024-12-01  0.321630  0.256608  ...            1.0              1.0  0.240974
561  2024-12-02  0.309960       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Basic_Attention_Token_BAT
NECESSARRRY AAAA START
1
1
2024-11-27
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                          Name    Price  ...  middle_flip_date  long_flip_date
186  Basic Attention Token BAT  0.30996  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
EthereumPoW_ETHW
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.2339}]
success ya
UWAGA
db_ETHWUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  2.974909       NaN  ...              0                0       NaN
1      2023-01-02  3.033698       NaN  ...              0                0       NaN
2      2023-01-03  3.095129       NaN  ...              0                0       NaN
3      2023-01-04  3.366906       NaN  ...              0                0       NaN
4      2023-01-05  3.343753       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  4.340600  3.514949  ...              1                1  3.262089
27963  2024-11-28  4.130100  3.566211  ...              1                1  3.292545
27964  2024-11-29  4.159300  3.615635  ...              1                1  3.322958
27965  2024-11-30  4.481700  3.687807  ...              1                1  3.363615
27966  2024-12-01  4.523200  3.757424  ...              1                1  3.404302

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.2339}, {'Date': datetime.date(2024, 12, 2), 'Price': 4.2339}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  2.974909       NaN  ...            0.0              0.0       NaN
1      2023-01-02  3.033698       NaN  ...            0.0              0.0       NaN
2      2023-01-03  3.095129       NaN  ...            0.0              0.0       NaN
3      2023-01-04  3.366906       NaN  ...            0.0              0.0       NaN
4      2023-01-05  3.343753       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  4.130100  3.566211  ...            1.0              1.0  3.292545
27964  2024-11-29  4.159300  3.615635  ...            1.0              1.0  3.322958
27965  2024-11-30  4.481700  3.687807  ...            1.0              1.0  3.363615
27966  2024-12-01  4.523200  3.757424  ...            1.0              1.0  3.404302
27967  2024-12-02  4.233900       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted EthereumPoW_ETHW
NECESSARRRY AAAA START
1
1
2024-09-28
2024-11-05
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name   Price  ...  middle_flip_date  long_flip_date
187  EthereumPoW ETHW  4.2339  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Jito_JTO
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.44076}]
success ya
UWAGA
db_JTOUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-12-07  2.399561       NaN  ...              0                0       NaN
1      2023-12-08  3.520627       NaN  ...              0                0       NaN
2      2023-12-09  3.341142       NaN  ...              0                0       NaN
3      2023-12-10  3.450210       NaN  ...              0                0       NaN
4      2023-12-11  2.989762       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
15062  2024-11-27  3.671000  3.095246  ...              1                1  2.731543
15063  2024-11-28  3.559000  3.133892  ...              1                1  2.760577
15064  2024-11-29  3.711000  3.181984  ...              1                1  2.793925
15065  2024-11-30  3.691000  3.224402  ...              1                1  2.825401
15066  2024-12-01  3.796000  3.272036  ...              1                1  2.859457

[15067 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.44076}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.44076}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-12-07  2.399561       NaN  ...            0.0              0.0       NaN
1      2023-12-08  3.520627       NaN  ...            0.0              0.0       NaN
2      2023-12-09  3.341142       NaN  ...            0.0              0.0       NaN
3      2023-12-10  3.450210       NaN  ...            0.0              0.0       NaN
4      2023-12-11  2.989762       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
15063  2024-11-28  3.559000  3.133892  ...            1.0              1.0  2.760577
15064  2024-11-29  3.711000  3.181984  ...            1.0              1.0  2.793925
15065  2024-11-30  3.691000  3.224402  ...            1.0              1.0  2.825401
15066  2024-12-01  3.796000  3.272036  ...            1.0              1.0  2.859457
15067  2024-12-02  3.440760       NaN  ...            NaN              NaN       NaN

[15068 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Jito_JTO
NECESSARRRY AAAA START
1
1
2024-11-07
2024-11-07
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
188  Jito JTO  3.44076  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Destra_Network_DSYNC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.46667}]
success ya
UWAGA
db_DSYNCUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_DSYNCUSD': no such table: db_DSYNCUSD
trying
 inicjacja duplicates
duplicate info
[False]
Chia_Network_XCH
[{'Date': datetime.date(2024, 12, 2), 'Price': 32.3944}]
success ya
UWAGA
db_XCHUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  28.574203  ...                0        NaN
1      2023-01-02  29.185020  ...                0        NaN
2      2023-01-03  29.201750  ...                0        NaN
3      2023-01-04  29.915522  ...                0        NaN
4      2023-01-05  29.669994  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  24.126000  ...                1  16.168512
27963  2024-11-28  23.899000  ...                1  16.439757
27964  2024-11-29  29.420000  ...                1  16.895205
27965  2024-11-30  29.879000  ...                1  17.350776
27966  2024-12-01  31.110000  ...                1  17.833556

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 32.3944}, {'Date': datetime.date(2024, 12, 2), 'Price': 32.3944}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  28.574203  ...              0.0        NaN
1      2023-01-02  29.185020  ...              0.0        NaN
2      2023-01-03  29.201750  ...              0.0        NaN
3      2023-01-04  29.915522  ...              0.0        NaN
4      2023-01-05  29.669994  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  23.899000  ...              1.0  16.439757
27964  2024-11-29  29.420000  ...              1.0  16.895205
27965  2024-11-30  29.879000  ...              1.0  17.350776
27966  2024-12-01  31.110000  ...              1.0  17.833556
27967  2024-12-02  32.394400  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Chia_Network_XCH
NECESSARRRY AAAA START
1
1
2024-11-22
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name    Price  ...  middle_flip_date  long_flip_date
190  Chia Network XCH  32.3944  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
aevo_AEVO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.50207}]
success ya
UWAGA
db_AEVOUSD
COINDBBB
            Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0     2024-03-13  3.255682       NaN  ...             0                0       NaN
1     2024-03-14  3.035255       NaN  ...             0                0       NaN
2     2024-03-15  2.749664       NaN  ...             0                0       NaN
3     2024-03-16  2.882306       NaN  ...             0                0       NaN
4     2024-03-17  2.784009       NaN  ...             0                0       NaN
...          ...       ...       ...  ...           ...              ...       ...
8203  2024-11-27  0.469000  0.384144  ...             0                1  0.367981
8204  2024-11-28  0.465000  0.390882  ...             0                1  0.371385
8205  2024-11-29  0.475000  0.397892  ...             1                1  0.375020
8206  2024-11-30  0.507000  0.406984  ...             1                1  0.379651
8207  2024-12-01  0.518000  0.416236  ...             1                1  0.384506

[8208 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.50207}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.50207}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0     2024-03-13  3.255682       NaN  ...           0.0              0.0       NaN
1     2024-03-14  3.035255       NaN  ...           0.0              0.0       NaN
2     2024-03-15  2.749664       NaN  ...           0.0              0.0       NaN
3     2024-03-16  2.882306       NaN  ...           0.0              0.0       NaN
4     2024-03-17  2.784009       NaN  ...           0.0              0.0       NaN
...          ...       ...       ...  ...           ...              ...       ...
8204  2024-11-28  0.465000  0.390882  ...           0.0              1.0  0.371385
8205  2024-11-29  0.475000  0.397892  ...           1.0              1.0  0.375020
8206  2024-11-30  0.507000  0.406984  ...           1.0              1.0  0.379651
8207  2024-12-01  0.518000  0.416236  ...           1.0              1.0  0.384506
8208  2024-12-02  0.502070       NaN  ...           NaN              NaN       NaN

[8209 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted aevo_AEVO
NECESSARRRY AAAA START
1
1
2024-11-23
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
191  aevo AEVO  0.50207  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
SPACE_ID_ID
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.56297}]
success ya
UWAGA
db_IDUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.033561       NaN  ...              0                0       NaN
1      2023-01-02  0.033461       NaN  ...              0                0       NaN
2      2023-01-03  0.033000       NaN  ...              0                0       NaN
3      2023-01-04  0.032751       NaN  ...              0                0       NaN
4      2023-01-05  0.033405       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.567600  0.460487  ...              1                1  0.427425
27963  2024-11-28  0.556000  0.468447  ...              1                1  0.431936
27964  2024-11-29  0.569400  0.476859  ...              1                1  0.436759
27965  2024-11-30  0.584200  0.485804  ...              1                1  0.441933
27966  2024-12-01  0.599000  0.495237  ...              1                1  0.447444

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.56297}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.56297}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.033561       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.033461       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.033000       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.032751       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.033405       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.556000  0.468447  ...            1.0              1.0  0.431936
27964  2024-11-29  0.569400  0.476859  ...            1.0              1.0  0.436759
27965  2024-11-30  0.584200  0.485804  ...            1.0              1.0  0.441933
27966  2024-12-01  0.599000  0.495237  ...            1.0              1.0  0.447444
27967  2024-12-02  0.562970       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted SPACE_ID_ID
NECESSARRRY AAAA START
1
1
2024-10-22
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
192  SPACE ID ID  0.56297  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Aleo_ALEO
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.67506}]
success ya
UWAGA
db_ALEOUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ALEOUSD': no such table: db_ALEOUSD
trying
 inicjacja duplicates
duplicate info
[False]
Manta_Network_MANTA
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.16215}]
success ya
UWAGA
db_MANTAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2024-01-18  2.152857       NaN  ...              0                0       NaN
1      2024-01-19  2.344775       NaN  ...              0                0       NaN
2      2024-01-20  2.267328       NaN  ...              0                0       NaN
3      2024-01-21  2.677541       NaN  ...              0                0       NaN
4      2024-01-22  2.436931       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
12164  2024-11-27  1.113700  0.882169  ...              1                1  0.812939
12165  2024-11-28  1.173500  0.906447  ...              1                1  0.825590
12166  2024-11-29  1.192800  0.930310  ...              1                1  0.838475
12167  2024-11-30  1.192500  0.952159  ...              1                1  0.850896
12168  2024-12-01  1.195000  0.972396  ...              1                1  0.862970

[12169 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.16215}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.16215}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2024-01-18  2.152857       NaN  ...            0.0              0.0       NaN
1      2024-01-19  2.344775       NaN  ...            0.0              0.0       NaN
2      2024-01-20  2.267328       NaN  ...            0.0              0.0       NaN
3      2024-01-21  2.677541       NaN  ...            0.0              0.0       NaN
4      2024-01-22  2.436931       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
12165  2024-11-28  1.173500  0.906447  ...            1.0              1.0  0.825590
12166  2024-11-29  1.192800  0.930310  ...            1.0              1.0  0.838475
12167  2024-11-30  1.192500  0.952159  ...            1.0              1.0  0.850896
12168  2024-12-01  1.195000  0.972396  ...            1.0              1.0  0.862970
12169  2024-12-02  1.162150       NaN  ...            NaN              NaN       NaN

[12170 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Manta_Network_MANTA
NECESSARRRY AAAA START
1
1
2024-11-16
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
194  Manta Network MANTA  1.16215  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Chintai_CHEX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.45391}]
success ya
UWAGA
db_CHEXUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_CHEXUSD': no such table: db_CHEXUSD
trying
 inicjacja duplicates
duplicate info
[False]
Qtum_QTUM
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.04568}]
success ya
UWAGA
db_QTUMUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  1.877460       NaN  ...              0                0       NaN
1    2023-01-02  1.907205       NaN  ...              0                0       NaN
2    2023-01-03  1.889939       NaN  ...              0                0       NaN
3    2023-01-04  1.945411       NaN  ...              0                0       NaN
4    2023-01-05  1.929643       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
692  2024-11-27  3.753000  3.377992  ...              1                0  3.397428
693  2024-11-28  3.681000  3.403242  ...              1                0  3.407378
694  2024-11-29  3.909000  3.445389  ...              1                1  3.424978
695  2024-11-30  3.919000  3.484857  ...              1                1  3.442312
696  2024-12-01  4.018000  3.529285  ...              1                1  3.462512

[697 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.04568}, {'Date': datetime.date(2024, 12, 2), 'Price': 4.04568}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  1.877460       NaN  ...            0.0              0.0       NaN
1    2023-01-02  1.907205       NaN  ...            0.0              0.0       NaN
2    2023-01-03  1.889939       NaN  ...            0.0              0.0       NaN
3    2023-01-04  1.945411       NaN  ...            0.0              0.0       NaN
4    2023-01-05  1.929643       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
693  2024-11-28  3.681000  3.403242  ...            1.0              0.0  3.407378
694  2024-11-29  3.909000  3.445389  ...            1.0              1.0  3.424978
695  2024-11-30  3.919000  3.484857  ...            1.0              1.0  3.442312
696  2024-12-01  4.018000  3.529285  ...            1.0              1.0  3.462512
697  2024-12-02  4.045680       NaN  ...            NaN              NaN       NaN

[698 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Qtum_QTUM
NECESSARRRY AAAA START
1
1
2024-11-27
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
196  Qtum QTUM  4.04568  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ankr_ANKR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04212}]
success ya
UWAGA
db_ANKRUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.015655       NaN  ...              0                0       NaN
1    2023-01-02  0.015924       NaN  ...              0                0       NaN
2    2023-01-03  0.015844       NaN  ...              0                0       NaN
3    2023-01-04  0.016412       NaN  ...              0                0       NaN
4    2023-01-05  0.016170       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.042760  0.035770  ...              1                0  0.037728
557  2024-11-28  0.041580  0.036255  ...              1                0  0.037863
558  2024-11-29  0.042400  0.036767  ...              1                0  0.038022
559  2024-11-30  0.042900  0.037278  ...              1                0  0.038193
560  2024-12-01  0.045290  0.037945  ...              1                0  0.038442

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04212}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.04212}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.015655       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.015924       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.015844       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.016412       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.016170       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.041580  0.036255  ...            1.0              0.0  0.037863
558  2024-11-29  0.042400  0.036767  ...            1.0              0.0  0.038022
559  2024-11-30  0.042900  0.037278  ...            1.0              0.0  0.038193
560  2024-12-01  0.045290  0.037945  ...            1.0              0.0  0.038442
561  2024-12-02  0.042120       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Ankr_ANKR
NECESSARRRY AAAA START
0
1
2024-05-13
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
197  Ankr ANKR  0.04212  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Just_a_chill_guy_CHILLGUY
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.41663}]
success ya
UWAGA
db_CHILLGUYUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_CHILLGUYUSD': no such table: db_CHILLGUYUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
SKALE_Network_SKL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.075}]
success ya
UWAGA
db_SKLUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.020400       NaN  ...              0                0       NaN
1    2023-01-02  0.021070       NaN  ...              0                0       NaN
2    2023-01-03  0.021394       NaN  ...              0                0       NaN
3    2023-01-04  0.022087       NaN  ...              0                0       NaN
4    2023-01-05  0.022238       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.066450  0.056062  ...              0                0  0.063514
557  2024-11-28  0.074960  0.057637  ...              0                0  0.063915
558  2024-11-29  0.077540  0.059296  ...              0                0  0.064393
559  2024-11-30  0.078290  0.060879  ...              0                0  0.064881
560  2024-12-01  0.078840  0.062375  ...              0                0  0.065371

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.075}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.075}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.020400       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.021070       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.021394       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.022087       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.022238       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.074960  0.057637  ...            0.0              0.0  0.063915
558  2024-11-29  0.077540  0.059296  ...            0.0              0.0  0.064393
559  2024-11-30  0.078290  0.060879  ...            0.0              0.0  0.064881
560  2024-12-01  0.078840  0.062375  ...            0.0              0.0  0.065371
561  2024-12-02  0.075000       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted SKALE_Network_SKL
NECESSARRRY AAAA START
0
0
2024-04-26
2024-06-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name  Price  ...  middle_flip_date  long_flip_date
199  SKALE Network SKL  0.075  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Osmosis_OSMO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.5905}]
success ya
UWAGA
db_OSMOUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.687365       NaN  ...              0                0       NaN
1      2023-01-02  0.713486       NaN  ...              0                0       NaN
2      2023-01-03  0.727482       NaN  ...              0                0       NaN
3      2023-01-04  0.732577       NaN  ...              0                0       NaN
4      2023-01-05  0.716384       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.587000  0.533650  ...              1                1  0.508965
27963  2024-11-28  0.584500  0.537888  ...              1                1  0.511616
27964  2024-11-29  0.598700  0.542955  ...              1                1  0.514671
27965  2024-11-30  0.617400  0.549159  ...              1                1  0.518276
27966  2024-12-01  0.620400  0.555096  ...              1                1  0.521859

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.5905}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.5905}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.687365       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.713486       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.727482       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.732577       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.716384       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.584500  0.537888  ...            1.0              1.0  0.511616
27964  2024-11-29  0.598700  0.542955  ...            1.0              1.0  0.514671
27965  2024-11-30  0.617400  0.549159  ...            1.0              1.0  0.518276
27966  2024-12-01  0.620400  0.555096  ...            1.0              1.0  0.521859
27967  2024-12-02  0.590500       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Osmosis_OSMO
NECESSARRRY AAAA START
1
1
2024-11-20
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name   Price  ...  middle_flip_date  long_flip_date
200  Osmosis OSMO  0.5905  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Siacoin_SC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00707}]
success ya
UWAGA
db_SCUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.002267       NaN  ...              0                0       NaN
1    2023-01-02  0.002300       NaN  ...              0                0       NaN
2    2023-01-03  0.002282       NaN  ...              0                0       NaN
3    2023-01-04  0.002323       NaN  ...              0                0       NaN
4    2023-01-05  0.002347       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.006490  0.007708  ...              0                0  0.008577
487  2024-05-02  0.006840  0.007636  ...              0                0  0.008516
488  2024-05-03  0.007220  0.007601  ...              0                0  0.008470
489  2024-05-04  0.007200  0.007568  ...              0                0  0.008426
490  2024-05-05  0.007200  0.007537  ...              0                0  0.008383

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.00705}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.00687}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.00686}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.00686}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.00658}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.00667}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.00707}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.00692}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.00719}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.00737}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.00714}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.00743}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.00739}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.00741}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.00717}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.00717}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.0072}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.0072}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.00727}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.0072}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.00712}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.00695}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.00676}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.00677}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.00671}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.00649}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.00668}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.00661}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.00661}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.00653}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.00609}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.00606}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.00607}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.00569}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.00583}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.00571}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.00556}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.00547}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.00547}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.00471}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.0043}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.00451}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.00458}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.00458}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.00455}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.00461}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.0043}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.00463}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.00467}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.00469}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.00466}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.00468}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.00462}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.00467}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.00542}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00584}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.00621}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00604}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00599}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00605}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.00628}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.0067}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.00677}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.00688}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.00725}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.00703}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.00714}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.00719}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.00723}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00707}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00707}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
aelf_ELF
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.55202}]
success ya
UWAGA
db_ELFUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.157235       NaN  ...              0                0       NaN
1    2023-01-02  0.162542       NaN  ...              0                0       NaN
2    2023-01-03  0.162129       NaN  ...              0                0       NaN
3    2023-01-04  0.168805       NaN  ...              0                0       NaN
4    2023-01-05  0.167528       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.576400  0.455200  ...              1                0  0.460666
557  2024-11-28  0.555250  0.463538  ...              0                0  0.463984
558  2024-11-29  0.583260  0.473515  ...              1                1  0.468169
559  2024-11-30  0.582270  0.482578  ...              1                1  0.472173
560  2024-12-01  0.580210  0.490714  ...              1                1  0.475964

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.55202}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.55202}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.157235       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.162542       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.162129       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.168805       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.167528       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.555250  0.463538  ...            0.0              0.0  0.463984
558  2024-11-29  0.583260  0.473515  ...            1.0              1.0  0.468169
559  2024-11-30  0.582270  0.482578  ...            1.0              1.0  0.472173
560  2024-12-01  0.580210  0.490714  ...            1.0              1.0  0.475964
561  2024-12-02  0.552020       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted aelf_ELF
NECESSARRRY AAAA START
1
0
2024-11-29
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
202  aelf ELF  0.55202  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Harmony_ONE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02813}]
success ya
UWAGA
db_ONEUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000601       NaN  ...              0                0       NaN
1      2023-01-02  0.000600       NaN  ...              0                0       NaN
2      2023-01-03  0.000599       NaN  ...              0                0       NaN
3      2023-01-04  0.000608       NaN  ...              0                0       NaN
4      2023-01-05  0.000606       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.023933  0.017499  ...              1                1  0.015167
27963  2024-11-28  0.024155  0.018054  ...              1                1  0.015482
27964  2024-11-29  0.026702  0.018774  ...              1                1  0.015876
27965  2024-11-30  0.028408  0.019577  ...              1                1  0.016315
27966  2024-12-01  0.029444  0.020399  ...              1                1  0.016776

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02813}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02813}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000601       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.000600       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.000599       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.000608       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.000606       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.024155  0.018054  ...            1.0              1.0  0.015482
27964  2024-11-29  0.026702  0.018774  ...            1.0              1.0  0.015876
27965  2024-11-30  0.028408  0.019577  ...            1.0              1.0  0.016315
27966  2024-12-01  0.029444  0.020399  ...            1.0              1.0  0.016776
27967  2024-12-02  0.028130       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Harmony_ONE
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
203  Harmony ONE  0.02813  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
OriginTrail_TRAC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.96289}]
success ya
UWAGA
db_TRACUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.159252       NaN  ...              0                0       NaN
1      2023-01-02  0.161246       NaN  ...              0                0       NaN
2      2023-01-03  0.160985       NaN  ...              0                0       NaN
3      2023-01-04  0.169760       NaN  ...              0                0       NaN
4      2023-01-05  0.166645       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.004900  0.822295  ...              1                1  0.704537
27963  2024-11-28  1.031900  0.839762  ...              1                1  0.716023
27964  2024-11-29  1.051200  0.857382  ...              1                1  0.727784
27965  2024-11-30  1.061800  0.874417  ...              1                1  0.739504
27966  2024-12-01  1.032700  0.887607  ...              1                1  0.749791

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.96289}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.96289}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.159252       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.161246       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.160985       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.169760       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.166645       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.031900  0.839762  ...            1.0              1.0  0.716023
27964  2024-11-29  1.051200  0.857382  ...            1.0              1.0  0.727784
27965  2024-11-30  1.061800  0.874417  ...            1.0              1.0  0.739504
27966  2024-12-01  1.032700  0.887607  ...            1.0              1.0  0.749791
27967  2024-12-02  0.962890       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted OriginTrail_TRAC
NECESSARRRY AAAA START
1
1
2024-11-05
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name    Price  ...  middle_flip_date  long_flip_date
204  OriginTrail TRAC  0.96289  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Terra_LUNA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.55286}]
success ya
UWAGA
db_LUNAUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2022-05-30  4.845585       NaN  ...       NaN              0                0
1    2022-06-06  2.656999       NaN  ...       NaN              0                0
2    2022-06-13  2.115945       NaN  ...       NaN              0                0
3    2022-06-20  2.012508       NaN  ...       NaN              0                0
4    2022-06-27  2.150663       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
607  2024-11-27  0.487910  0.465064  ...  0.516385              0                0
608  2024-11-28  0.488430  0.467011  ...  0.515404              0                0
609  2024-11-29  0.510660  0.470649  ...  0.515238              0                0
610  2024-11-30  0.518390  0.474627  ...  0.515348              0                0
611  2024-12-01  0.578140  0.483253  ...  0.517552              0                0

[612 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.55286}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.55286}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2022-05-30  4.845585       NaN  ...       NaN            0.0              0.0
1    2022-06-06  2.656999       NaN  ...       NaN            0.0              0.0
2    2022-06-13  2.115945       NaN  ...       NaN            0.0              0.0
3    2022-06-20  2.012508       NaN  ...       NaN            0.0              0.0
4    2022-06-27  2.150663       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
608  2024-11-28  0.488430  0.467011  ...  0.515404            0.0              0.0
609  2024-11-29  0.510660  0.470649  ...  0.515238            0.0              0.0
610  2024-11-30  0.518390  0.474627  ...  0.515348            0.0              0.0
611  2024-12-01  0.578140  0.483253  ...  0.517552            0.0              0.0
612  2024-12-02  0.552860       NaN  ...       NaN            NaN              NaN

[613 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Terra_LUNA
NECESSARRRY AAAA START
0
0
2024-04-14
2024-04-12
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
205  Terra LUNA  0.55286  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Gigachad_GIGA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04205}]
success ya
UWAGA
db_GIGAUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_GIGAUSD': no such table: db_GIGAUSD
trying
 inicjacja duplicates
duplicate info
[False]
SafePal_SFP
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.79873}]
success ya
UWAGA
db_SFPUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.398622       NaN  ...              0                0       NaN
1    2023-01-02  0.395322       NaN  ...              0                0       NaN
2    2023-01-03  0.389766       NaN  ...              0                0       NaN
3    2023-01-04  0.388493       NaN  ...              0                0       NaN
4    2023-01-05  0.391153       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.761320  0.732476  ...              0                0  0.759498
557  2024-11-28  0.719220  0.731371  ...              0                0  0.758085
558  2024-11-29  0.736960  0.731837  ...              0                0  0.757344
559  2024-11-30  0.761720  0.734327  ...              0                0  0.757497
560  2024-12-01  0.767770  0.737114  ...              1                0  0.757858

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.79873}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.79873}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.398622       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.395322       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.389766       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.388493       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.391153       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.719220  0.731371  ...            0.0              0.0  0.758085
558  2024-11-29  0.736960  0.731837  ...            0.0              0.0  0.757344
559  2024-11-30  0.761720  0.734327  ...            0.0              0.0  0.757497
560  2024-12-01  0.767770  0.737114  ...            1.0              0.0  0.757858
561  2024-12-02  0.798730       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted SafePal_SFP
NECESSARRRY AAAA START
0
1
2024-06-11
2024-12-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
207  SafePal SFP  0.79873  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Gas_GAS
[{'Date': datetime.date(2024, 12, 2), 'Price': 5.97305}]
success ya
UWAGA
db_GASUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  2.004425       NaN  ...              0                0       NaN
1      2023-01-02  2.034270       NaN  ...              0                0       NaN
2      2023-01-03  2.010298       NaN  ...              0                0       NaN
3      2023-01-04  2.037084       NaN  ...              0                0       NaN
4      2023-01-05  2.028100       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  5.929100  4.942326  ...              1                1  4.457800
27963  2024-11-28  5.749200  5.009565  ...              1                1  4.503113
27964  2024-11-29  6.007500  5.092727  ...              1                1  4.555898
27965  2024-11-30  6.128700  5.179058  ...              1                1  4.611084
27966  2024-12-01  6.112700  5.256861  ...              1                1  4.663772

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 5.97305}, {'Date': datetime.date(2024, 12, 2), 'Price': 5.97305}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  2.004425       NaN  ...            0.0              0.0       NaN
1      2023-01-02  2.034270       NaN  ...            0.0              0.0       NaN
2      2023-01-03  2.010298       NaN  ...            0.0              0.0       NaN
3      2023-01-04  2.037084       NaN  ...            0.0              0.0       NaN
4      2023-01-05  2.028100       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  5.749200  5.009565  ...            1.0              1.0  4.503113
27964  2024-11-29  6.007500  5.092727  ...            1.0              1.0  4.555898
27965  2024-11-30  6.128700  5.179058  ...            1.0              1.0  4.611084
27966  2024-12-01  6.112700  5.256861  ...            1.0              1.0  4.663772
27967  2024-12-02  5.973050       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Gas_GAS
NECESSARRRY AAAA START
1
1
2024-09-23
2024-11-09
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
208  Gas GAS  5.97305  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ravencoin_RVN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02641}]
success ya
UWAGA
db_RVNUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.019229       NaN  ...              0                0       NaN
1    2023-01-02  0.019227       NaN  ...              0                0       NaN
2    2023-01-03  0.019248       NaN  ...              0                0       NaN
3    2023-01-04  0.019989       NaN  ...              0                0       NaN
4    2023-01-05  0.019723       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.024220  0.022745  ...              0                0  0.024430
557  2024-11-28  0.024630  0.022902  ...              0                0  0.024437
558  2024-11-29  0.025330  0.023104  ...              0                0  0.024469
559  2024-11-30  0.025260  0.023284  ...              0                0  0.024496
560  2024-12-01  0.026910  0.023586  ...              1                0  0.024581

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02641}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02641}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.019229       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.019227       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.019248       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.019989       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.019723       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.024630  0.022902  ...            0.0              0.0  0.024437
558  2024-11-29  0.025330  0.023104  ...            0.0              0.0  0.024469
559  2024-11-30  0.025260  0.023284  ...            0.0              0.0  0.024496
560  2024-12-01  0.026910  0.023586  ...            1.0              0.0  0.024581
561  2024-12-02  0.026410       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Ravencoin_RVN
NECESSARRRY AAAA START
0
1
2024-05-05
2024-12-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
209  Ravencoin RVN  0.02641  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Baby_Doge_Coin_BabyDoge
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_BabyDogeUSD
COINDBBB
                    Date  Close  EMA23  ...  SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.0    NaN  ...     NaN              0                0
1    2023-01-02 00:00:00    0.0    NaN  ...     NaN              0                0
2    2023-01-03 00:00:00    0.0    NaN  ...     NaN              0                0
3    2023-01-04 00:00:00    0.0    NaN  ...     NaN              0                0
4    2023-01-05 00:00:00    0.0    NaN  ...     NaN              0                0
..                   ...    ...    ...  ...     ...            ...              ...
468           2024-04-13    0.0    0.0  ...     0.0              0                0
469           2024-04-14    0.0    0.0  ...     0.0              0                0
470           2024-04-15    0.0    0.0  ...     0.0              0                0
471           2024-04-16    0.0    0.0  ...     0.0              0                0
472           2024-04-17    0.0    0.0  ...     0.0              0                0

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.0}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.0}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.0}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
io.net_IO
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.14097}]
success ya
UWAGA
db_IOUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_IOUSD': no such table: db_IOUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
dYdX_(ethDYDX)_ETHDYDX
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.7121}]
success ya
UWAGA
db_ETHDYDXUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-10-26 00:00:00    2.319767  ...              0                0
1    2023-10-27 00:00:00    2.339510  ...              0                0
2    2023-10-28 00:00:00    2.423307  ...              0                0
3    2023-10-29 00:00:00    2.479425  ...              0                0
4    2023-10-30 00:00:00    2.445009  ...              0                0
..                   ...         ...  ...            ...              ...
170           2024-04-13  231.458000  ...              0                1
171           2024-04-14  206.149000  ...              0                1
172           2024-04-15  206.594000  ...              0                1
173           2024-04-16  212.698000  ...              0                1
174           2024-04-17    2.005040  ...              0                1

[175 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 2.11961}, {'Date': datetime.date(2024, 5, 10), 'Price': 2.03447}, {'Date': datetime.date(2024, 5, 11), 'Price': 2.02439}, {'Date': datetime.date(2024, 5, 12), 'Price': 2.02439}, {'Date': datetime.date(2024, 5, 13), 'Price': 1.97207}, {'Date': datetime.date(2024, 5, 14), 'Price': 1.88484}, {'Date': datetime.date(2024, 5, 15), 'Price': 2.03445}, {'Date': datetime.date(2024, 5, 16), 'Price': 2.02802}, {'Date': datetime.date(2024, 5, 17), 'Price': 2.06125}, {'Date': datetime.date(2024, 5, 18), 'Price': 2.04784}, {'Date': datetime.date(2024, 5, 19), 'Price': 1.93817}, {'Date': datetime.date(2024, 5, 20), 'Price': 2.13054}, {'Date': datetime.date(2024, 5, 21), 'Price': 2.12782}, {'Date': datetime.date(2024, 5, 22), 'Price': 2.01989}, {'Date': datetime.date(2024, 5, 23), 'Price': 1.94192}, {'Date': datetime.date(2024, 5, 24), 'Price': 2.01331}, {'Date': datetime.date(2024, 5, 25), 'Price': 2.0973}, {'Date': datetime.date(2024, 5, 26), 'Price': 2.0973}, {'Date': datetime.date(2024, 5, 27), 'Price': 2.08264}, {'Date': datetime.date(2024, 5, 28), 'Price': 2.08394}, {'Date': datetime.date(2024, 5, 29), 'Price': 2.0249}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.99407}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.98797}, {'Date': datetime.date(2024, 6, 1), 'Price': 2.02829}, {'Date': datetime.date(2024, 6, 2), 'Price': 2.00081}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.98931}, {'Date': datetime.date(2024, 6, 4), 'Price': 2.02729}, {'Date': datetime.date(2024, 6, 5), 'Price': 2.08677}, {'Date': datetime.date(2024, 6, 6), 'Price': 2.15995}, {'Date': datetime.date(2024, 6, 7), 'Price': 2.10758}, {'Date': datetime.date(2024, 6, 8), 'Price': 1.89077}, {'Date': datetime.date(2024, 6, 9), 'Price': 1.88447}, {'Date': datetime.date(2024, 6, 10), 'Price': 1.90313}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.67643}, {'Date': datetime.date(2024, 6, 12), 'Price': 1.79347}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.677}, {'Date': datetime.date(2024, 6, 14), 'Price': 1.60616}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.54317}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.54317}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.43413}, {'Date': datetime.date(2024, 6, 18), 'Price': 1.32528}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.4476}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.44976}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.43735}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.41638}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.41847}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.35621}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.40807}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.37128}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.39914}, {'Date': datetime.date(2024, 6, 28), 'Price': 1.36303}, {'Date': datetime.date(2024, 6, 29), 'Price': 1.34882}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.3766}, {'Date': datetime.date(2024, 7, 1), 'Price': 1.35533}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.28426}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.32999}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.26304}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.24397}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.28944}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.28839}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.36207}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.54845}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.54918}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.42771}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.62634}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.59091}, {'Date': datetime.date(2024, 11, 29), 'Price': 1.63991}, {'Date': datetime.date(2024, 11, 30), 'Price': 1.64502}, {'Date': datetime.date(2024, 12, 1), 'Price': 1.69676}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.7121}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.7121}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
JUST_JST
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03795}]
success ya
UWAGA
db_JSTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.019942       NaN  ...              0                0       NaN
1    2023-01-02  0.020144       NaN  ...              0                0       NaN
2    2023-01-03  0.020027       NaN  ...              0                0       NaN
3    2023-01-04  0.020248       NaN  ...              0                0       NaN
4    2023-01-05  0.020206       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.038090  0.032950  ...              1                1  0.031906
557  2024-11-28  0.038290  0.033395  ...              1                1  0.032130
558  2024-11-29  0.038280  0.033802  ...              1                1  0.032346
559  2024-11-30  0.038210  0.034169  ...              1                1  0.032552
560  2024-12-01  0.038600  0.034538  ...              1                1  0.032764

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03795}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.03795}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.019942       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.020144       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.020027       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.020248       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.020206       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.038290  0.033395  ...            1.0              1.0  0.032130
558  2024-11-29  0.038280  0.033802  ...            1.0              1.0  0.032346
559  2024-11-30  0.038210  0.034169  ...            1.0              1.0  0.032552
560  2024-12-01  0.038600  0.034538  ...            1.0              1.0  0.032764
561  2024-12-02  0.037950       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted JUST_JST
NECESSARRRY AAAA START
1
1
2024-11-22
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
213  JUST JST  0.03795  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ai16z_AI16Z
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.33932}]
success ya
UWAGA
db_AI16ZUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_AI16ZUSD': no such table: db_AI16ZUSD
trying
 inicjacja duplicates
duplicate info
[False]
Aethir_ATH
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07089}]
success ya
UWAGA
db_ATHUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ATHUSD': no such table: db_ATHUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
SushiSwap_SUSHI
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.40134}]
success ya
UWAGA
db_SUSHIUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.939976       NaN  ...              0                0       NaN
1      2023-01-02  0.957542       NaN  ...              0                0       NaN
2      2023-01-03  0.964187       NaN  ...              0                0       NaN
3      2023-01-04  0.990836       NaN  ...              0                0       NaN
4      2023-01-05  0.984202       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.208500  0.882234  ...              1                1  0.794744
27963  2024-11-28  1.144700  0.904106  ...              1                1  0.807023
27964  2024-11-29  1.190400  0.927964  ...              1                1  0.820475
27965  2024-11-30  1.335900  0.961958  ...              1                1  0.838560
27966  2024-12-01  1.318800  0.991695  ...              1                1  0.855411

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.40134}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.40134}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.939976       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.957542       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.964187       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.990836       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.984202       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.144700  0.904106  ...            1.0              1.0  0.807023
27964  2024-11-29  1.190400  0.927964  ...            1.0              1.0  0.820475
27965  2024-11-30  1.335900  0.961958  ...            1.0              1.0  0.838560
27966  2024-12-01  1.318800  0.991695  ...            1.0              1.0  0.855411
27967  2024-12-02  1.401340       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted SushiSwap_SUSHI
NECESSARRRY AAAA START
1
1
2024-11-10
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
216  SushiSwap SUSHI  1.40134  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Mask_Network_MASK
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.6571}]
success ya
UWAGA
db_MASKUSD
COINDBBB
           Date      Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2021-02-22   8.508567       NaN  ...       NaN              0                0
1    2021-03-01  15.825343       NaN  ...       NaN              0                0
2    2021-03-08  14.196384       NaN  ...       NaN              0                0
3    2021-03-15  13.427653       NaN  ...       NaN              0                0
4    2021-03-22  12.104553       NaN  ...       NaN              0                0
..          ...        ...       ...  ...       ...            ...              ...
272  2024-11-27   3.504020  2.993369  ...  3.083417              1                0
273  2024-11-28   3.648130  3.047933  ...  3.103232              1                0
274  2024-11-29   3.766730  3.107832  ...  3.126513              1                0
275  2024-11-30   3.806520  3.166056  ...  3.150372              1                1
276  2024-12-01   3.916920  3.228628  ...  3.177269              1                1

[277 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.6571}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.6571}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date      Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2021-02-22   8.508567       NaN  ...       NaN            0.0              0.0
1    2021-03-01  15.825343       NaN  ...       NaN            0.0              0.0
2    2021-03-08  14.196384       NaN  ...       NaN            0.0              0.0
3    2021-03-15  13.427653       NaN  ...       NaN            0.0              0.0
4    2021-03-22  12.104553       NaN  ...       NaN            0.0              0.0
..          ...        ...       ...  ...       ...            ...              ...
273  2024-11-28   3.648130  3.047933  ...  3.103232            1.0              0.0
274  2024-11-29   3.766730  3.107832  ...  3.126513            1.0              0.0
275  2024-11-30   3.806520  3.166056  ...  3.150372            1.0              1.0
276  2024-12-01   3.916920  3.228628  ...  3.177269            1.0              1.0
277  2024-12-02   3.657100       NaN  ...       NaN            NaN              NaN

[278 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Mask_Network_MASK
NECESSARRRY AAAA START
1
1
2024-11-30
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name   Price  ...  middle_flip_date  long_flip_date
217  Mask Network MASK  3.6571  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Metis_METIS
[{'Date': datetime.date(2024, 12, 2), 'Price': 59.7548}]
success ya
UWAGA
db_METISUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  16.236757  ...                0        NaN
1      2023-01-02  16.415895  ...                0        NaN
2      2023-01-03  16.464565  ...                0        NaN
3      2023-01-04  17.396175  ...                0        NaN
4      2023-01-05  16.954409  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  61.200000  ...                1  44.812523
27963  2024-11-28  58.310000  ...                1  45.286119
27964  2024-11-29  56.860000  ...                1  45.692220
27965  2024-11-30  63.300000  ...                1  46.310037
27966  2024-12-01  61.250000  ...                1  46.834246

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 59.7548}, {'Date': datetime.date(2024, 12, 2), 'Price': 59.7548}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  16.236757  ...              0.0        NaN
1      2023-01-02  16.415895  ...              0.0        NaN
2      2023-01-03  16.464565  ...              0.0        NaN
3      2023-01-04  17.396175  ...              0.0        NaN
4      2023-01-05  16.954409  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  58.310000  ...              1.0  45.286119
27964  2024-11-29  56.860000  ...              1.0  45.692220
27965  2024-11-30  63.300000  ...              1.0  46.310037
27966  2024-12-01  61.250000  ...              1.0  46.834246
27967  2024-12-02  59.754800  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Metis_METIS
NECESSARRRY AAAA START
1
1
2024-10-16
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
218  Metis METIS  59.7548  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ssv.network_SSV
[{'Date': datetime.date(2024, 12, 2), 'Price': 31.3716}]
success ya
UWAGA
db_SSVUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  10.043355  ...                0        NaN
1      2023-01-02  11.135715  ...                0        NaN
2      2023-01-03  10.756827  ...                0        NaN
3      2023-01-04  11.723813  ...                0        NaN
4      2023-01-05  12.081448  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  28.820000  ...                1  21.273183
27963  2024-11-28  27.660000  ...                1  21.497282
27964  2024-11-29  27.570000  ...                1  21.710359
27965  2024-11-30  32.000000  ...                1  22.071399
27966  2024-12-01  32.200000  ...                1  22.426789

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 31.3716}, {'Date': datetime.date(2024, 12, 2), 'Price': 31.3716}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  10.043355  ...              0.0        NaN
1      2023-01-02  11.135715  ...              0.0        NaN
2      2023-01-03  10.756827  ...              0.0        NaN
3      2023-01-04  11.723813  ...              0.0        NaN
4      2023-01-05  12.081448  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  27.660000  ...              1.0  21.497282
27964  2024-11-29  27.570000  ...              1.0  21.710359
27965  2024-11-30  32.000000  ...              1.0  22.071399
27966  2024-12-01  32.200000  ...              1.0  22.426789
27967  2024-12-02  31.371600  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted ssv
NECESSARRRY AAAA START
1
1
2024-11-26
2024-11-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
219  ssv.network SSV  31.3716  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
DOGS_DOGS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0007}]
success ya
UWAGA
db_DOGSUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_DOGSUSD': no such table: db_DOGSUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Baby_Doge_Coin_1MBABYDOGE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00236}]
success ya
UWAGA
db_1MBABYDOGEUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_1MBABYDOGEUSD': no such table: db_1MBABYDOGEUSD
trying
 inicjacja duplicates
duplicate info
[False]
Drift_DRIFT
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.36792}]
success ya
UWAGA
db_DRIFTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_DRIFTUSD': no such table: db_DRIFTUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Orbler_ORBR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.34807}]
success ya
UWAGA
db_ORBRUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  6.865260       NaN  ...              0                0       NaN
1    2023-01-02  6.334117       NaN  ...              0                0       NaN
2    2023-01-03  6.313064       NaN  ...              0                0       NaN
3    2023-01-04  7.560971       NaN  ...              0                0       NaN
4    2023-01-05  7.109031       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.385080  0.443980  ...              1                0  0.479987
487  2024-05-02  0.425160  0.442412  ...              1                0  0.478063
488  2024-05-03  0.441320  0.442321  ...              1                0  0.476774
489  2024-05-04  0.462730  0.444022  ...              1                0  0.476281
490  2024-05-05  0.462730  0.445581  ...              1                0  0.475806

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.44286}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.41423}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.41077}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.41077}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.44525}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.42253}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.45082}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.42803}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.43564}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.4503}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.43721}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.41246}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.43342}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.43512}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.43528}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.39668}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.40087}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.40087}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.39942}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.37673}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.38699}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.39834}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.41344}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.39071}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.395}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.39412}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.38756}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.39754}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.40089}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.39328}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.39516}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.39487}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.39785}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.39905}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.3883}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.38646}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.36358}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.37845}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.37845}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.36041}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.35814}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.34581}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.33757}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.35695}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.3553}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.35384}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.32578}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.32097}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.31026}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.3241}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.33115}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.33647}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.33083}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.34062}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.31985}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.36642}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.37577}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.37402}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.3737}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.37367}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.37307}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.3733}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.36873}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.3686}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.36381}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.35909}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.3748}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.36775}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.34695}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.34807}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.34807}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Altlayer_ALT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15432}]
success ya
UWAGA
db_ALTUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2024-01-25  0.323151       NaN  ...              0                0       NaN
1      2024-01-26  0.359796       NaN  ...              0                0       NaN
2      2024-01-27  0.405056       NaN  ...              0                0       NaN
3      2024-01-28  0.394876       NaN  ...              0                0       NaN
4      2024-01-29  0.448130       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
21805  2024-06-26  0.010920  0.012479  ...              0                0  0.014284
21806  2024-06-27  0.011290  0.012380  ...              0                0  0.014179
21807  2024-06-28  0.011140  0.012277  ...              0                0  0.014072
21808  2024-06-29  0.012730  0.012314  ...              0                0  0.014025
21809  2024-06-30  0.012150  0.012301  ...              0                0  0.013959

[21810 rows x 8 columns]
last_db_date_data
2024-06-30
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 7, 1), 'Price': 0.17183}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.11244}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.11659}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.11332}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.10978}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.11619}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.11345}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.11545}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.12729}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.1372}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.12214}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.13967}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.14175}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.13934}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.13955}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.15723}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15432}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15432}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
BICONOMY_BICO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.38024}]
success ya
UWAGA
db_BICOUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.270101       NaN  ...              0                0       NaN
1    2023-01-02  0.270443       NaN  ...              0                0       NaN
2    2023-01-03  0.274587       NaN  ...              0                0       NaN
3    2023-01-04  0.280583       NaN  ...              0                0       NaN
4    2023-01-05  0.274560       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.375400  0.358792  ...              0                0  0.421743
557  2024-11-28  0.392550  0.361605  ...              0                0  0.420719
558  2024-11-29  0.389230  0.363907  ...              0                0  0.419614
559  2024-11-30  0.389290  0.366022  ...              0                0  0.418550
560  2024-12-01  0.412650  0.369908  ...              0                0  0.418343

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.38024}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.38024}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.270101       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.270443       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.274587       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.280583       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.274560       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.392550  0.361605  ...            0.0              0.0  0.420719
558  2024-11-29  0.389230  0.363907  ...            0.0              0.0  0.419614
559  2024-11-30  0.389290  0.366022  ...            0.0              0.0  0.418550
560  2024-12-01  0.412650  0.369908  ...            0.0              0.0  0.418343
561  2024-12-02  0.380240       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted BICONOMY_BICO
NECESSARRRY AAAA START
0
0
2024-06-17
2024-06-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
225  BICONOMY BICO  0.38024  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Kadena_KDA
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.13391}]
success ya
UWAGA
db_KDAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.873257       NaN  ...              0                0       NaN
1      2023-01-02  0.883628       NaN  ...              0                0       NaN
2      2023-01-03  0.871797       NaN  ...              0                0       NaN
3      2023-01-04  0.900261       NaN  ...              0                0       NaN
4      2023-01-05  0.891520       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.197200  0.749177  ...              1                1  0.652636
27963  2024-11-28  1.156900  0.783154  ...              1                1  0.670330
27964  2024-11-29  1.231400  0.820508  ...              1                1  0.690017
27965  2024-11-30  1.183800  0.850782  ...              1                1  0.707342
27966  2024-12-01  1.167000  0.877134  ...              1                1  0.723471

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.13391}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.13391}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.873257       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.883628       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.871797       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.900261       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.891520       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.156900  0.783154  ...            1.0              1.0  0.670330
27964  2024-11-29  1.231400  0.820508  ...            1.0              1.0  0.690017
27965  2024-11-30  1.183800  0.850782  ...            1.0              1.0  0.707342
27966  2024-12-01  1.167000  0.877134  ...            1.0              1.0  0.723471
27967  2024-12-02  1.133910       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Kadena_KDA
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-15
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
226  Kadena KDA  1.13391  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
SwissBorg_BORG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.3416}]
success ya
UWAGA
db_BORGUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-10-26 00:00:00  0.195422  ...              0                0
1    2023-10-27 00:00:00  0.197958  ...              0                0
2    2023-10-28 00:00:00  0.258293  ...              0                0
3    2023-10-29 00:00:00  0.202653  ...              0                0
4    2023-10-30 00:00:00  0.202680  ...              0                0
..                   ...       ...  ...            ...              ...
170           2024-04-13  0.226580  ...              0                1
171           2024-04-14  0.211290  ...              0                1
172           2024-04-15  0.204040  ...              0                1
173           2024-04-16  0.205190  ...              0                1
174           2024-04-17  0.194750  ...              0                1

[175 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.25274}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.25486}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.25354}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.25354}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.23967}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.226}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.23253}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.22131}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.21963}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.22096}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.21653}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.22365}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.22827}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.22848}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.22194}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.22014}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.21656}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.21656}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.21489}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.21702}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.21665}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.22074}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.21911}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.2217}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.2169}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.22121}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.22124}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.2169}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.22075}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.21853}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.20662}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.20123}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.20113}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.19509}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.19871}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.19156}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.18998}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.18406}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.18406}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.19107}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.17496}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.18766}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.17826}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.17232}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.17266}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.17856}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.16981}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.18258}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.19019}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.19227}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.19615}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.19026}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.18877}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.1861}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.19906}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.20633}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.21419}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.20736}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.2157}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.22929}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.2336}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.22789}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.21576}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.21576}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.23943}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.26363}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.31079}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.30453}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.31484}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.3416}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.3416}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Decred_DCR
[{'Date': datetime.date(2024, 12, 2), 'Price': 20.1944}]
success ya
UWAGA
db_DCRUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  18.463186  ...                0        NaN
1      2023-01-02  19.045910  ...                0        NaN
2      2023-01-03  18.616446  ...                0        NaN
3      2023-01-04  18.743250  ...                0        NaN
4      2023-01-05  18.676928  ...                0        NaN
...           ...        ...  ...              ...        ...
16422  2024-11-27  16.990000  ...                1  13.223772
16423  2024-11-28  16.430000  ...                1  13.336271
16424  2024-11-29  16.370000  ...                1  13.442718
16425  2024-11-30  17.460000  ...                1  13.583675
16426  2024-12-01  17.080000  ...                1  13.706353

[16427 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 20.1944}, {'Date': datetime.date(2024, 12, 2), 'Price': 20.1944}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  18.463186  ...              0.0        NaN
1      2023-01-02  19.045910  ...              0.0        NaN
2      2023-01-03  18.616446  ...              0.0        NaN
3      2023-01-04  18.743250  ...              0.0        NaN
4      2023-01-05  18.676928  ...              0.0        NaN
...           ...        ...  ...              ...        ...
16423  2024-11-28  16.430000  ...              1.0  13.336271
16424  2024-11-29  16.370000  ...              1.0  13.442718
16425  2024-11-30  17.460000  ...              1.0  13.583675
16426  2024-12-01  17.080000  ...              1.0  13.706353
16427  2024-12-02  20.194400  ...              NaN        NaN

[16428 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Decred_DCR
NECESSARRRY AAAA START
1
1
2024-11-09
2024-11-22
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
228  Decred DCR  20.1944  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Polymesh_POLYX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.36097}]
success ya
UWAGA
db_POLYXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.120190       NaN  ...              0                0       NaN
1    2023-01-02  0.122292       NaN  ...              0                0       NaN
2    2023-01-03  0.120636       NaN  ...              0                0       NaN
3    2023-01-04  0.123231       NaN  ...              0                0       NaN
4    2023-01-05  0.124195       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.376160  0.340148  ...              1                0  0.366595
557  2024-11-28  0.365550  0.342265  ...              1                0  0.366558
558  2024-11-29  0.375140  0.345005  ...              1                0  0.366859
559  2024-11-30  0.375560  0.347551  ...              1                0  0.367164
560  2024-12-01  0.383480  0.350545  ...              1                0  0.367737

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.36097}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.36097}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.120190       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.122292       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.120636       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.123231       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.124195       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.365550  0.342265  ...            1.0              0.0  0.366558
558  2024-11-29  0.375140  0.345005  ...            1.0              0.0  0.366859
559  2024-11-30  0.375560  0.347551  ...            1.0              0.0  0.367164
560  2024-12-01  0.383480  0.350545  ...            1.0              0.0  0.367737
561  2024-12-02  0.360970       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Polymesh_POLYX
NECESSARRRY AAAA START
0
1
2024-06-19
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
229  Polymesh POLYX  0.36097  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
FLEX_FLEX
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.30167}]
success ya
UWAGA
db_FLEXUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.057357  ...              0                0
1    2023-01-02 00:00:00    0.058835  ...              0                0
2    2023-01-03 00:00:00    0.061173  ...              0                0
3    2023-01-04 00:00:00    0.062746  ...              0                0
4    2023-01-05 00:00:00    0.054596  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  162.565000  ...              1                1
469           2024-04-14  184.118000  ...              1                1
470           2024-04-15   17.753000  ...              1                1
471           2024-04-16  179.165000  ...              1                1
472           2024-04-17    1.165570  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 1.78883}, {'Date': datetime.date(2024, 5, 10), 'Price': 1.79556}, {'Date': datetime.date(2024, 5, 11), 'Price': 1.79274}, {'Date': datetime.date(2024, 5, 12), 'Price': 1.79274}, {'Date': datetime.date(2024, 5, 13), 'Price': 1.49101}, {'Date': datetime.date(2024, 5, 14), 'Price': 1.78926}, {'Date': datetime.date(2024, 5, 15), 'Price': 1.79179}, {'Date': datetime.date(2024, 5, 16), 'Price': 1.7988}, {'Date': datetime.date(2024, 5, 17), 'Price': 1.79888}, {'Date': datetime.date(2024, 5, 18), 'Price': 1.79562}, {'Date': datetime.date(2024, 5, 19), 'Price': 1.80039}, {'Date': datetime.date(2024, 5, 20), 'Price': 1.79699}, {'Date': datetime.date(2024, 5, 21), 'Price': 1.79616}, {'Date': datetime.date(2024, 5, 22), 'Price': 1.79686}, {'Date': datetime.date(2024, 5, 23), 'Price': 1.80466}, {'Date': datetime.date(2024, 5, 24), 'Price': 1.7978}, {'Date': datetime.date(2024, 5, 25), 'Price': 1.78951}, {'Date': datetime.date(2024, 5, 26), 'Price': 1.78951}, {'Date': datetime.date(2024, 5, 27), 'Price': 1.805}, {'Date': datetime.date(2024, 5, 28), 'Price': 1.79103}, {'Date': datetime.date(2024, 5, 29), 'Price': 1.7872}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.80385}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.79853}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.79351}, {'Date': datetime.date(2024, 6, 2), 'Price': 1.7961}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.79462}, {'Date': datetime.date(2024, 6, 4), 'Price': 1.79159}, {'Date': datetime.date(2024, 6, 5), 'Price': 1.79025}, {'Date': datetime.date(2024, 6, 6), 'Price': 1.794}, {'Date': datetime.date(2024, 6, 7), 'Price': 1.79014}, {'Date': datetime.date(2024, 6, 8), 'Price': 1.79906}, {'Date': datetime.date(2024, 6, 9), 'Price': 1.79574}, {'Date': datetime.date(2024, 6, 10), 'Price': 1.79842}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.7982}, {'Date': datetime.date(2024, 6, 12), 'Price': 1.79774}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.79696}, {'Date': datetime.date(2024, 6, 14), 'Price': 1.80199}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.8025}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.8025}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.80408}, {'Date': datetime.date(2024, 6, 18), 'Price': 1.78929}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.85521}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.85835}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.83683}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.83318}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.83487}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.83437}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.82589}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.83575}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.83151}, {'Date': datetime.date(2024, 6, 28), 'Price': 1.84001}, {'Date': datetime.date(2024, 6, 29), 'Price': 1.82376}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.8241}, {'Date': datetime.date(2024, 7, 1), 'Price': 1.82486}, {'Date': datetime.date(2024, 11, 17), 'Price': 3.30147}, {'Date': datetime.date(2024, 11, 18), 'Price': 3.3022}, {'Date': datetime.date(2024, 11, 19), 'Price': 3.30427}, {'Date': datetime.date(2024, 11, 20), 'Price': 3.30287}, {'Date': datetime.date(2024, 11, 21), 'Price': 3.30107}, {'Date': datetime.date(2024, 11, 22), 'Price': 3.30377}, {'Date': datetime.date(2024, 11, 23), 'Price': 3.30378}, {'Date': datetime.date(2024, 11, 24), 'Price': 3.30315}, {'Date': datetime.date(2024, 11, 25), 'Price': 3.3006}, {'Date': datetime.date(2024, 11, 26), 'Price': 3.30045}, {'Date': datetime.date(2024, 11, 27), 'Price': 3.30319}, {'Date': datetime.date(2024, 11, 28), 'Price': 3.30088}, {'Date': datetime.date(2024, 11, 29), 'Price': 3.30312}, {'Date': datetime.date(2024, 11, 30), 'Price': 3.30121}, {'Date': datetime.date(2024, 12, 1), 'Price': 3.30213}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.30167}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.30167}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
MX_Token_MX
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.36315}]
success ya
UWAGA
db_MXUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.819131  ...              0                0
1    2023-01-02 00:00:00    0.859489  ...              0                0
2    2023-01-03 00:00:00    0.862675  ...              0                0
3    2023-01-04 00:00:00    0.870173  ...              0                0
4    2023-01-05 00:00:00    0.857362  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13   52.713000  ...              1                1
469           2024-04-14  519.748000  ...              1                1
470           2024-04-15  531.951000  ...              1                1
471           2024-04-16  541.742000  ...              1                1
472           2024-04-17    5.349690  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 4.94384}, {'Date': datetime.date(2024, 5, 10), 'Price': 4.88653}, {'Date': datetime.date(2024, 5, 11), 'Price': 4.94277}, {'Date': datetime.date(2024, 5, 12), 'Price': 4.94277}, {'Date': datetime.date(2024, 5, 13), 'Price': 4.85967}, {'Date': datetime.date(2024, 5, 14), 'Price': 4.8948}, {'Date': datetime.date(2024, 5, 15), 'Price': 4.90256}, {'Date': datetime.date(2024, 5, 16), 'Price': 4.58977}, {'Date': datetime.date(2024, 5, 17), 'Price': 4.63574}, {'Date': datetime.date(2024, 5, 18), 'Price': 4.6162}, {'Date': datetime.date(2024, 5, 19), 'Price': 4.58618}, {'Date': datetime.date(2024, 5, 20), 'Price': 4.71104}, {'Date': datetime.date(2024, 5, 21), 'Price': 4.61576}, {'Date': datetime.date(2024, 5, 22), 'Price': 4.64771}, {'Date': datetime.date(2024, 5, 23), 'Price': 4.54391}, {'Date': datetime.date(2024, 5, 24), 'Price': 4.5642}, {'Date': datetime.date(2024, 5, 25), 'Price': 4.51635}, {'Date': datetime.date(2024, 5, 26), 'Price': 4.51635}, {'Date': datetime.date(2024, 5, 27), 'Price': 4.44259}, {'Date': datetime.date(2024, 5, 28), 'Price': 4.39664}, {'Date': datetime.date(2024, 5, 29), 'Price': 4.40527}, {'Date': datetime.date(2024, 5, 30), 'Price': 4.48578}, {'Date': datetime.date(2024, 5, 31), 'Price': 4.3094}, {'Date': datetime.date(2024, 6, 1), 'Price': 4.38878}, {'Date': datetime.date(2024, 6, 2), 'Price': 4.29584}, {'Date': datetime.date(2024, 6, 3), 'Price': 3.96551}, {'Date': datetime.date(2024, 6, 4), 'Price': 4.0679}, {'Date': datetime.date(2024, 6, 5), 'Price': 4.28277}, {'Date': datetime.date(2024, 6, 6), 'Price': 4.21324}, {'Date': datetime.date(2024, 6, 7), 'Price': 4.16202}, {'Date': datetime.date(2024, 6, 8), 'Price': 4.0539}, {'Date': datetime.date(2024, 6, 9), 'Price': 4.01398}, {'Date': datetime.date(2024, 6, 10), 'Price': 3.99861}, {'Date': datetime.date(2024, 6, 11), 'Price': 3.83829}, {'Date': datetime.date(2024, 6, 12), 'Price': 3.96025}, {'Date': datetime.date(2024, 6, 13), 'Price': 3.90251}, {'Date': datetime.date(2024, 6, 14), 'Price': 3.85252}, {'Date': datetime.date(2024, 6, 15), 'Price': 3.80143}, {'Date': datetime.date(2024, 6, 16), 'Price': 3.80143}, {'Date': datetime.date(2024, 6, 17), 'Price': 3.75727}, {'Date': datetime.date(2024, 6, 18), 'Price': 3.72767}, {'Date': datetime.date(2024, 6, 19), 'Price': 3.72377}, {'Date': datetime.date(2024, 6, 20), 'Price': 3.68758}, {'Date': datetime.date(2024, 6, 21), 'Price': 3.74916}, {'Date': datetime.date(2024, 6, 22), 'Price': 3.75934}, {'Date': datetime.date(2024, 6, 23), 'Price': 3.73321}, {'Date': datetime.date(2024, 6, 24), 'Price': 3.73711}, {'Date': datetime.date(2024, 6, 25), 'Price': 3.9686}, {'Date': datetime.date(2024, 6, 26), 'Price': 4.10407}, {'Date': datetime.date(2024, 6, 27), 'Price': 4.14263}, {'Date': datetime.date(2024, 6, 28), 'Price': 4.11608}, {'Date': datetime.date(2024, 6, 29), 'Price': 4.57007}, {'Date': datetime.date(2024, 6, 30), 'Price': 4.29497}, {'Date': datetime.date(2024, 7, 1), 'Price': 4.43168}, {'Date': datetime.date(2024, 11, 17), 'Price': 2.83948}, {'Date': datetime.date(2024, 11, 18), 'Price': 2.86309}, {'Date': datetime.date(2024, 11, 19), 'Price': 2.97555}, {'Date': datetime.date(2024, 11, 20), 'Price': 2.9523}, {'Date': datetime.date(2024, 11, 21), 'Price': 2.96308}, {'Date': datetime.date(2024, 11, 22), 'Price': 2.9786}, {'Date': datetime.date(2024, 11, 23), 'Price': 2.9797}, {'Date': datetime.date(2024, 11, 24), 'Price': 3.09285}, {'Date': datetime.date(2024, 11, 25), 'Price': 3.21199}, {'Date': datetime.date(2024, 11, 26), 'Price': 3.14606}, {'Date': datetime.date(2024, 11, 27), 'Price': 3.25976}, {'Date': datetime.date(2024, 11, 28), 'Price': 3.40234}, {'Date': datetime.date(2024, 11, 29), 'Price': 3.46945}, {'Date': datetime.date(2024, 11, 30), 'Price': 3.45868}, {'Date': datetime.date(2024, 12, 1), 'Price': 3.54195}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.36315}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.36315}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
ConstitutionDAO_PEOPLE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.06412}]
success ya
UWAGA
db_PEOPLEUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.020216       NaN  ...              0                0       NaN
1    2023-01-02  0.020526       NaN  ...              0                0       NaN
2    2023-01-03  0.020305       NaN  ...              0                0       NaN
3    2023-01-04  0.021171       NaN  ...              0                0       NaN
4    2023-01-05  0.021095       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.061270  0.073523  ...              1                0  0.075042
557  2024-11-28  0.061360  0.072509  ...              1                0  0.074562
558  2024-11-29  0.062600  0.071683  ...              1                0  0.074142
559  2024-11-30  0.062580  0.070925  ...              1                0  0.073737
560  2024-12-01  0.066200  0.070531  ...              1                0  0.073472

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.06412}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.06412}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.020216       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.020526       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.020305       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.021171       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.021095       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.061360  0.072509  ...            1.0              0.0  0.074562
558  2024-11-29  0.062600  0.071683  ...            1.0              0.0  0.074142
559  2024-11-30  0.062580  0.070925  ...            1.0              0.0  0.073737
560  2024-12-01  0.066200  0.070531  ...            1.0              0.0  0.073472
561  2024-12-02  0.064120       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted ConstitutionDAO_PEOPLE
NECESSARRRY AAAA START
0
1
2024-11-26
2024-05-03
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                       Name    Price  ...  middle_flip_date  long_flip_date
232  ConstitutionDAO PEOPLE  0.06412  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Threshold_T
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03225}]
success ya
UWAGA
db_TUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.015827       NaN  ...              0                0       NaN
1    2023-01-02  0.016134       NaN  ...              0                0       NaN
2    2023-01-03  0.015909       NaN  ...              0                0       NaN
3    2023-01-04  0.016256       NaN  ...              0                0       NaN
4    2023-01-05  0.016253       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.033960  0.028200  ...              1                0  0.029746
557  2024-11-28  0.032370  0.028548  ...              0                0  0.029838
558  2024-11-29  0.033290  0.028943  ...              1                0  0.029959
559  2024-11-30  0.033460  0.029319  ...              1                0  0.030082
560  2024-12-01  0.034350  0.029739  ...              1                0  0.030232

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03225}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.03225}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.015827       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.016134       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.015909       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.016256       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.016253       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.032370  0.028548  ...            0.0              0.0  0.029838
558  2024-11-29  0.033290  0.028943  ...            1.0              0.0  0.029959
559  2024-11-30  0.033460  0.029319  ...            1.0              0.0  0.030082
560  2024-12-01  0.034350  0.029739  ...            1.0              0.0  0.030232
561  2024-12-02  0.032250       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Threshold_T
NECESSARRRY AAAA START
0
0
2024-05-30
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
233  Threshold T  0.03225  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Loopring_LRC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.23549}]
success ya
UWAGA
db_LRCUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.189346       NaN  ...              0                0       NaN
1    2023-01-02  0.192244       NaN  ...              0                0       NaN
2    2023-01-03  0.194253       NaN  ...              0                0       NaN
3    2023-01-04  0.198459       NaN  ...              0                0       NaN
4    2023-01-05  0.198554       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.230280  0.198448  ...              0                0  0.215981
557  2024-11-28  0.236130  0.201588  ...              0                0  0.216688
558  2024-11-29  0.236530  0.204500  ...              0                0  0.217384
559  2024-11-30  0.235800  0.207108  ...              0                0  0.218031
560  2024-12-01  0.241490  0.209973  ...              0                0  0.218854

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.23549}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.23549}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.189346       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.192244       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.194253       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.198459       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.198554       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.236130  0.201588  ...            0.0              0.0  0.216688
558  2024-11-29  0.236530  0.204500  ...            0.0              0.0  0.217384
559  2024-11-30  0.235800  0.207108  ...            0.0              0.0  0.218031
560  2024-12-01  0.241490  0.209973  ...            0.0              0.0  0.218854
561  2024-12-02  0.235490       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Loopring_LRC
NECESSARRRY AAAA START
0
0
2024-04-15
2024-05-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
234  Loopring LRC  0.23549  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MimbleWimbleCoin_MWC
[{'Date': datetime.date(2024, 12, 2), 'Price': 28.951}]
success ya
UWAGA
db_MWCUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.819450  ...              0                0
1    2023-01-02 00:00:00    0.782689  ...              0                0
2    2023-01-03 00:00:00    0.875526  ...              0                0
3    2023-01-04 00:00:00    0.835911  ...              0                0
4    2023-01-05 00:00:00    0.829041  ...              0                0
..                   ...         ...  ...            ...              ...
253           2024-04-13  143.566000  ...              1                1
254           2024-04-14  135.884000  ...              1                1
255           2024-04-15  140.802000  ...              1                1
256           2024-04-16  146.112000  ...              1                1
257           2024-04-17   14.055100  ...              0                1

[258 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 15.6941}, {'Date': datetime.date(2024, 5, 10), 'Price': 15.1377}, {'Date': datetime.date(2024, 5, 11), 'Price': 15.136}, {'Date': datetime.date(2024, 5, 12), 'Price': 15.136}, {'Date': datetime.date(2024, 5, 13), 'Price': 15.8545}, {'Date': datetime.date(2024, 5, 14), 'Price': 15.4578}, {'Date': datetime.date(2024, 5, 15), 'Price': 16.4838}, {'Date': datetime.date(2024, 5, 16), 'Price': 15.4353}, {'Date': datetime.date(2024, 5, 17), 'Price': 16.095}, {'Date': datetime.date(2024, 5, 18), 'Price': 15.7838}, {'Date': datetime.date(2024, 5, 19), 'Price': 16.5847}, {'Date': datetime.date(2024, 5, 20), 'Price': 17.0392}, {'Date': datetime.date(2024, 5, 21), 'Price': 18.1262}, {'Date': datetime.date(2024, 5, 22), 'Price': 17.5818}, {'Date': datetime.date(2024, 5, 23), 'Price': 17.1694}, {'Date': datetime.date(2024, 5, 24), 'Price': 17.1776}, {'Date': datetime.date(2024, 5, 25), 'Price': 17.1473}, {'Date': datetime.date(2024, 5, 26), 'Price': 17.1473}, {'Date': datetime.date(2024, 5, 27), 'Price': 17.8029}, {'Date': datetime.date(2024, 5, 28), 'Price': 17.4236}, {'Date': datetime.date(2024, 5, 29), 'Price': 17.4379}, {'Date': datetime.date(2024, 5, 30), 'Price': 17.4842}, {'Date': datetime.date(2024, 5, 31), 'Price': 16.9142}, {'Date': datetime.date(2024, 6, 1), 'Price': 17.0565}, {'Date': datetime.date(2024, 6, 2), 'Price': 17.0969}, {'Date': datetime.date(2024, 6, 3), 'Price': 17.8635}, {'Date': datetime.date(2024, 6, 4), 'Price': 18.5338}, {'Date': datetime.date(2024, 6, 5), 'Price': 18.4228}, {'Date': datetime.date(2024, 6, 6), 'Price': 19.0552}, {'Date': datetime.date(2024, 6, 7), 'Price': 18.1842}, {'Date': datetime.date(2024, 6, 8), 'Price': 17.8979}, {'Date': datetime.date(2024, 6, 9), 'Price': 18.1215}, {'Date': datetime.date(2024, 6, 10), 'Price': 18.3009}, {'Date': datetime.date(2024, 6, 11), 'Price': 17.2795}, {'Date': datetime.date(2024, 6, 12), 'Price': 18.3867}, {'Date': datetime.date(2024, 6, 13), 'Price': 18.1759}, {'Date': datetime.date(2024, 6, 14), 'Price': 17.5028}, {'Date': datetime.date(2024, 6, 15), 'Price': 17.2547}, {'Date': datetime.date(2024, 6, 16), 'Price': 17.2547}, {'Date': datetime.date(2024, 6, 17), 'Price': 17.2671}, {'Date': datetime.date(2024, 6, 18), 'Price': 16.7877}, {'Date': datetime.date(2024, 6, 19), 'Price': 17.0433}, {'Date': datetime.date(2024, 6, 20), 'Price': 16.8174}, {'Date': datetime.date(2024, 6, 21), 'Price': 16.4314}, {'Date': datetime.date(2024, 6, 22), 'Price': 16.5826}, {'Date': datetime.date(2024, 6, 23), 'Price': 16.6966}, {'Date': datetime.date(2024, 6, 24), 'Price': 15.3557}, {'Date': datetime.date(2024, 6, 25), 'Price': 15.7772}, {'Date': datetime.date(2024, 6, 26), 'Price': 15.5574}, {'Date': datetime.date(2024, 6, 27), 'Price': 15.7526}, {'Date': datetime.date(2024, 6, 28), 'Price': 16.4863}, {'Date': datetime.date(2024, 6, 29), 'Price': 18.4687}, {'Date': datetime.date(2024, 6, 30), 'Price': 18.3634}, {'Date': datetime.date(2024, 7, 1), 'Price': 18.0965}, {'Date': datetime.date(2024, 11, 17), 'Price': 28.5125}, {'Date': datetime.date(2024, 11, 18), 'Price': 28.6659}, {'Date': datetime.date(2024, 11, 19), 'Price': 29.2841}, {'Date': datetime.date(2024, 11, 20), 'Price': 30.1452}, {'Date': datetime.date(2024, 11, 21), 'Price': 30.0299}, {'Date': datetime.date(2024, 11, 22), 'Price': 30.5181}, {'Date': datetime.date(2024, 11, 23), 'Price': 30.2692}, {'Date': datetime.date(2024, 11, 24), 'Price': 29.4572}, {'Date': datetime.date(2024, 11, 25), 'Price': 28.6262}, {'Date': datetime.date(2024, 11, 26), 'Price': 27.5872}, {'Date': datetime.date(2024, 11, 27), 'Price': 28.8915}, {'Date': datetime.date(2024, 11, 28), 'Price': 28.5378}, {'Date': datetime.date(2024, 11, 29), 'Price': 28.8924}, {'Date': datetime.date(2024, 11, 30), 'Price': 28.8344}, {'Date': datetime.date(2024, 12, 1), 'Price': 28.9544}, {'Date': datetime.date(2024, 12, 2), 'Price': 28.951}, {'Date': datetime.date(2024, 12, 2), 'Price': 28.951}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Radix_XRD
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02927}]
success ya
UWAGA
db_XRDUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.034220       NaN  ...              0                0       NaN
1    2023-01-02  0.034026       NaN  ...              0                0       NaN
2    2023-01-03  0.033908       NaN  ...              0                0       NaN
3    2023-01-04  0.033968       NaN  ...              0                0       NaN
4    2023-01-05  0.033849       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.029410  0.025542  ...              0                0  0.032418
557  2024-11-28  0.027520  0.025707  ...              0                0  0.032246
558  2024-11-29  0.030780  0.026129  ...              0                0  0.032194
559  2024-11-30  0.029490  0.026410  ...              0                0  0.032100
560  2024-12-01  0.030270  0.026731  ...              0                0  0.032035

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02927}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02927}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.034220       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.034026       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.033908       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.033968       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.033849       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.027520  0.025707  ...            0.0              0.0  0.032246
558  2024-11-29  0.030780  0.026129  ...            0.0              0.0  0.032194
559  2024-11-30  0.029490  0.026410  ...            0.0              0.0  0.032100
560  2024-12-01  0.030270  0.026731  ...            0.0              0.0  0.032035
561  2024-12-02  0.029270       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Radix_XRD
NECESSARRRY AAAA START
0
0
2024-04-25
2024-04-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
236  Radix XRD  0.02927  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
GMX_GMX
[{'Date': datetime.date(2024, 12, 2), 'Price': 31.1451}]
success ya
UWAGA
db_GMXUSD
COINDBBB
             Date      Close  ...  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01   0.000037  ...              0                0
1      2023-01-02   0.000037  ...              0                0
2      2023-01-03   0.000037  ...              0                0
3      2023-01-04   0.000037  ...              0                0
4      2023-01-05   0.000037  ...              0                0
...           ...        ...  ...            ...              ...
27450  2024-11-27  29.980000  ...              1                1
27451  2024-11-28  29.180000  ...              1                1
27452  2024-11-29  30.240000  ...              1                1
27453  2024-11-30  31.690000  ...              1                1
27454  2024-12-01  31.380000  ...              1                1

[27455 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 31.1451}, {'Date': datetime.date(2024, 12, 2), 'Price': 31.1451}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01   0.000037  ...            0.0              0.0
1      2023-01-02   0.000037  ...            0.0              0.0
2      2023-01-03   0.000037  ...            0.0              0.0
3      2023-01-04   0.000037  ...            0.0              0.0
4      2023-01-05   0.000037  ...            0.0              0.0
...           ...        ...  ...            ...              ...
27451  2024-11-28  29.180000  ...            1.0              1.0
27452  2024-11-29  30.240000  ...            1.0              1.0
27453  2024-11-30  31.690000  ...            1.0              1.0
27454  2024-12-01  31.380000  ...            1.0              1.0
27455  2024-12-02  31.145100  ...            NaN              NaN

[27456 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted GMX_GMX
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-13
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
237  GMX GMX  31.1451  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Gravity_G
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03738}]
success ya
UWAGA
db_GUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_GUSD': no such table: db_GUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Ponke_PONKE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.54813}]
success ya
UWAGA
db_PONKEUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PONKEUSD': no such table: db_PONKEUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Illuvium_ILV
[{'Date': datetime.date(2024, 12, 2), 'Price': 57.7639}]
success ya
UWAGA
db_ILVUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  38.466263  ...                0        NaN
1      2023-01-02  39.194630  ...                0        NaN
2      2023-01-03  38.626396  ...                0        NaN
3      2023-01-04  39.811886  ...                0        NaN
4      2023-01-05  39.167290  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  56.642000  ...                1  41.652546
27963  2024-11-28  57.016000  ...                1  42.191615
27964  2024-11-29  58.683000  ...                1  42.770260
27965  2024-11-30  60.852000  ...                1  43.404707
27966  2024-12-01  60.127000  ...                1  43.991454

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 57.7639}, {'Date': datetime.date(2024, 12, 2), 'Price': 57.7639}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  38.466263  ...              0.0        NaN
1      2023-01-02  39.194630  ...              0.0        NaN
2      2023-01-03  38.626396  ...              0.0        NaN
3      2023-01-04  39.811886  ...              0.0        NaN
4      2023-01-05  39.167290  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  57.016000  ...              1.0  42.191615
27964  2024-11-29  58.683000  ...              1.0  42.770260
27965  2024-11-30  60.852000  ...              1.0  43.404707
27966  2024-12-01  60.127000  ...              1.0  43.991454
27967  2024-12-02  57.763900  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Illuvium_ILV
NECESSARRRY AAAA START
1
1
2024-11-18
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
240  Illuvium ILV  57.7639  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Xai_XAI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.37282}]
success ya
UWAGA
db_XAIUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.115900       NaN  ...              0                0       NaN
1      2023-01-02  0.115923       NaN  ...              0                0       NaN
2      2023-01-03  0.114309       NaN  ...              0                0       NaN
3      2023-01-04  0.110418       NaN  ...              0                0       NaN
4      2023-01-05  0.115225       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
13158  2024-11-27  0.352000  0.258982  ...              1                1  0.237075
13159  2024-11-28  0.357000  0.267150  ...              1                1  0.241283
13160  2024-11-29  0.355000  0.274471  ...              1                1  0.245273
13161  2024-11-30  0.390000  0.284098  ...              1                1  0.250351
13162  2024-12-01  0.384000  0.292423  ...              1                1  0.255040

[13163 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.37282}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.37282}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.115900       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.115923       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.114309       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.110418       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.115225       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
13159  2024-11-28  0.357000  0.267150  ...            1.0              1.0  0.241283
13160  2024-11-29  0.355000  0.274471  ...            1.0              1.0  0.245273
13161  2024-11-30  0.390000  0.284098  ...            1.0              1.0  0.250351
13162  2024-12-01  0.384000  0.292423  ...            1.0              1.0  0.255040
13163  2024-12-02  0.372820       NaN  ...            NaN              NaN       NaN

[13164 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Xai_XAI
NECESSARRRY AAAA START
1
1
2024-11-15
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
241  Xai XAI  0.37282  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Flux_FLUX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.78577}]
success ya
UWAGA
db_FLUXUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.497838       NaN  ...              0                0       NaN
1      2023-01-02  0.505567       NaN  ...              0                0       NaN
2      2023-01-03  0.495144       NaN  ...              0                0       NaN
3      2023-01-04  0.510232       NaN  ...              0                0       NaN
4      2023-01-05  0.508734       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.745200  0.614895  ...              1                1  0.580138
27963  2024-11-28  0.780100  0.628663  ...              1                1  0.587154
27964  2024-11-29  0.790300  0.642132  ...              1                1  0.594282
27965  2024-11-30  0.793400  0.654738  ...              1                1  0.601269
27966  2024-12-01  0.784600  0.665560  ...              1                1  0.607701

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.78577}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.78577}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.497838       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.505567       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.495144       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.510232       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.508734       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.780100  0.628663  ...            1.0              1.0  0.587154
27964  2024-11-29  0.790300  0.642132  ...            1.0              1.0  0.594282
27965  2024-11-30  0.793400  0.654738  ...            1.0              1.0  0.601269
27966  2024-12-01  0.784600  0.665560  ...            1.0              1.0  0.607701
27967  2024-12-02  0.785770       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Flux_FLUX
NECESSARRRY AAAA START
1
1
2024-11-18
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
242  Flux FLUX  0.78577  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Zerebro_ZEREBRO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.2998}]
success ya
UWAGA
db_ZEREBROUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ZEREBROUSD': no such table: db_ZEREBROUSD
trying
 inicjacja duplicates
duplicate info
[False]
Frax_Share_FXS
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.42832}]
success ya
UWAGA
db_FXSUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  4.428278       NaN  ...              0                0       NaN
1      2023-01-02  4.642400       NaN  ...              0                0       NaN
2      2023-01-03  4.871851       NaN  ...              0                0       NaN
3      2023-01-04  5.040675       NaN  ...              0                0       NaN
4      2023-01-05  5.002373       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  3.249000  2.477551  ...              1                1  2.246695
27963  2024-11-28  3.154000  2.533921  ...              1                1  2.278530
27964  2024-11-29  3.087000  2.580011  ...              1                1  2.306898
27965  2024-11-30  3.343000  2.643594  ...              1                1  2.343252
27966  2024-12-01  3.718000  2.733128  ...              1                1  2.391489

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.42832}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.42832}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  4.428278       NaN  ...            0.0              0.0       NaN
1      2023-01-02  4.642400       NaN  ...            0.0              0.0       NaN
2      2023-01-03  4.871851       NaN  ...            0.0              0.0       NaN
3      2023-01-04  5.040675       NaN  ...            0.0              0.0       NaN
4      2023-01-05  5.002373       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  3.154000  2.533921  ...            1.0              1.0  2.278530
27964  2024-11-29  3.087000  2.580011  ...            1.0              1.0  2.306898
27965  2024-11-30  3.343000  2.643594  ...            1.0              1.0  2.343252
27966  2024-12-01  3.718000  2.733128  ...            1.0              1.0  2.391489
27967  2024-12-02  3.428320       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Frax_Share_FXS
NECESSARRRY AAAA START
1
1
2024-11-14
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
244  Frax Share FXS  3.42832  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Moonbeam_GLMR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.3137}]
success ya
UWAGA
db_GLMRUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.328818       NaN  ...              0                0       NaN
1    2023-01-02  0.332623       NaN  ...              0                0       NaN
2    2023-01-03  0.322073       NaN  ...              0                0       NaN
3    2023-01-04  0.333928       NaN  ...              0                0       NaN
4    2023-01-05  0.320723       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.280000  0.243842  ...              0                0  0.263377
557  2024-11-28  0.288480  0.247562  ...              0                0  0.264258
558  2024-11-29  0.297550  0.251727  ...              0                0  0.265426
559  2024-11-30  0.302250  0.255938  ...              0                0  0.266718
560  2024-12-01  0.325050  0.261697  ...              0                0  0.268765

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.3137}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.3137}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.328818       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.332623       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.322073       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.333928       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.320723       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.288480  0.247562  ...            0.0              0.0  0.264258
558  2024-11-29  0.297550  0.251727  ...            0.0              0.0  0.265426
559  2024-11-30  0.302250  0.255938  ...            0.0              0.0  0.266718
560  2024-12-01  0.325050  0.261697  ...            0.0              0.0  0.268765
561  2024-12-02  0.313700       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Moonbeam_GLMR
NECESSARRRY AAAA START
0
0
2024-04-10
2024-04-12
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name   Price  ...  middle_flip_date  long_flip_date
245  Moonbeam GLMR  0.3137  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Rocket_Pool_RPL
[{'Date': datetime.date(2024, 12, 2), 'Price': 13.7747}]
success ya
UWAGA
db_RPLUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  20.588713  ...                0        NaN
1      2023-01-02  21.421335  ...                0        NaN
2      2023-01-03  21.200556  ...                0        NaN
3      2023-01-04  22.621529  ...                0        NaN
4      2023-01-05  22.191929  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  14.050000  ...                1  11.020523
27963  2024-11-28  14.130000  ...                1  11.129627
27964  2024-11-29  13.990000  ...                1  11.229991
27965  2024-11-30  14.760000  ...                1  11.353851
27966  2024-12-01  14.470000  ...                1  11.463190

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 13.7747}, {'Date': datetime.date(2024, 12, 2), 'Price': 13.7747}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  20.588713  ...              0.0        NaN
1      2023-01-02  21.421335  ...              0.0        NaN
2      2023-01-03  21.200556  ...              0.0        NaN
3      2023-01-04  22.621529  ...              0.0        NaN
4      2023-01-05  22.191929  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  14.130000  ...              1.0  11.129627
27964  2024-11-29  13.990000  ...              1.0  11.229991
27965  2024-11-30  14.760000  ...              1.0  11.353851
27966  2024-12-01  14.470000  ...              1.0  11.463190
27967  2024-12-02  13.774700  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Rocket_Pool_RPL
NECESSARRRY AAAA START
1
0
2024-11-26
2024-12-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
246  Rocket Pool RPL  13.7747  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
UMA_UMA
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.30321}]
success ya
UWAGA
db_UMAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.507401       NaN  ...              0                0       NaN
1      2023-01-02  1.514553       NaN  ...              0                0       NaN
2      2023-01-03  1.521095       NaN  ...              0                0       NaN
3      2023-01-04  1.550161       NaN  ...              0                0       NaN
4      2023-01-05  1.551180       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  3.154000  2.678255  ...              1                1  2.587621
27963  2024-11-28  3.106000  2.713900  ...              1                1  2.605810
27964  2024-11-29  3.226000  2.756575  ...              1                1  2.627571
27965  2024-11-30  3.232000  2.796194  ...              1                1  2.648779
27966  2024-12-01  3.280000  2.836511  ...              1                1  2.670927

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.30321}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.30321}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.507401       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.514553       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.521095       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.550161       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.551180       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  3.106000  2.713900  ...            1.0              1.0  2.605810
27964  2024-11-29  3.226000  2.756575  ...            1.0              1.0  2.627571
27965  2024-11-30  3.232000  2.796194  ...            1.0              1.0  2.648779
27966  2024-12-01  3.280000  2.836511  ...            1.0              1.0  2.670927
27967  2024-12-02  3.303210       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted UMA_UMA
NECESSARRRY AAAA START
1
1
2024-11-22
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
247  UMA UMA  3.30321  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
NEM_XEM
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03153}]
success ya
UWAGA
db_XEMUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.028817       NaN  ...              0                0       NaN
1    2023-01-02  0.029385       NaN  ...              0                0       NaN
2    2023-01-03  0.029081       NaN  ...              0                0       NaN
3    2023-01-04  0.029163       NaN  ...              0                0       NaN
4    2023-01-05  0.029077       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.028460  0.021884  ...              0                0  0.024560
557  2024-11-28  0.027630  0.022363  ...              0                0  0.024668
558  2024-11-29  0.029480  0.022956  ...              0                0  0.024836
559  2024-11-30  0.034670  0.023932  ...              0                0  0.025181
560  2024-12-01  0.033540  0.024733  ...              0                0  0.025475

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03153}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.03153}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.028817       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.029385       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.029081       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.029163       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.029077       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.027630  0.022363  ...            0.0              0.0  0.024668
558  2024-11-29  0.029480  0.022956  ...            0.0              0.0  0.024836
559  2024-11-30  0.034670  0.023932  ...            0.0              0.0  0.025181
560  2024-12-01  0.033540  0.024733  ...            0.0              0.0  0.025475
561  2024-12-02  0.031530       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted NEM_XEM
NECESSARRRY AAAA START
0
0
2024-04-15
2024-04-25
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
248  NEM XEM  0.03153  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Band_Protocol_BAND
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.8394}]
success ya
UWAGA
db_BANDUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.404027       NaN  ...              0                0       NaN
1      2023-01-02  1.424134       NaN  ...              0                0       NaN
2      2023-01-03  1.430210       NaN  ...              0                0       NaN
3      2023-01-04  1.480270       NaN  ...              0                0       NaN
4      2023-01-05  1.435189       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.661000  1.352537  ...              1                1  1.253524
27963  2024-11-28  1.687900  1.380484  ...              1                1  1.268765
27964  2024-11-29  1.765300  1.412552  ...              1                1  1.286187
27965  2024-11-30  1.876300  1.451198  ...              1                1  1.306893
27966  2024-12-01  1.874800  1.486498  ...              1                1  1.326820

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.8394}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.8394}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.404027       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.424134       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.430210       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.480270       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.435189       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.687900  1.380484  ...            1.0              1.0  1.268765
27964  2024-11-29  1.765300  1.412552  ...            1.0              1.0  1.286187
27965  2024-11-30  1.876300  1.451198  ...            1.0              1.0  1.306893
27966  2024-12-01  1.874800  1.486498  ...            1.0              1.0  1.326820
27967  2024-12-02  1.839400       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Band_Protocol_BAND
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name   Price  ...  middle_flip_date  long_flip_date
249  Band Protocol BAND  1.8394  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Yield_Guild_Games_YGG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.68059}]
success ya
UWAGA
db_YGGUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.164962       NaN  ...              0                0       NaN
1      2023-01-02  0.168876       NaN  ...              0                0       NaN
2      2023-01-03  0.165667       NaN  ...              0                0       NaN
3      2023-01-04  0.177085       NaN  ...              0                0       NaN
4      2023-01-05  0.174195       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.666300  0.546350  ...              1                1  0.508921
27963  2024-11-28  0.662100  0.555996  ...              1                1  0.514296
27964  2024-11-29  0.677200  0.566096  ...              1                1  0.520012
27965  2024-11-30  0.696200  0.576938  ...              1                1  0.526194
27966  2024-12-01  0.688000  0.586193  ...              1                1  0.531871

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.68059}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.68059}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.164962       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.168876       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.165667       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.177085       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.174195       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.662100  0.555996  ...            1.0              1.0  0.514296
27964  2024-11-29  0.677200  0.566096  ...            1.0              1.0  0.520012
27965  2024-11-30  0.696200  0.576938  ...            1.0              1.0  0.526194
27966  2024-12-01  0.688000  0.586193  ...            1.0              1.0  0.531871
27967  2024-12-02  0.680590       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Yield_Guild_Games_YGG
NECESSARRRY AAAA START
1
1
2024-09-27
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                      Name    Price  ...  middle_flip_date  long_flip_date
250  Yield Guild Games YGG  0.68059  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
0x0.ai_0x0
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.32447}]
success ya
UWAGA
db_0x0USD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-31  0.000318       NaN  ...              0                0       NaN
1    2023-02-01  0.000412       NaN  ...              0                0       NaN
2    2023-02-02  0.000735       NaN  ...              0                0       NaN
3    2023-02-03  0.000517       NaN  ...              0                0       NaN
4    2023-02-04  0.000418       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
456  2024-05-01  0.239560  0.284361  ...              1                0  0.299040
457  2024-05-02  0.273070  0.283420  ...              1                0  0.298128
458  2024-05-03  0.311930  0.285796  ...              1                0  0.298613
459  2024-05-04  0.313770  0.288127  ...              1                0  0.299145
460  2024-05-05  0.313770  0.290264  ...              1                0  0.299658

[461 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.35194}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.34135}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.3383}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.3383}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.31869}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.29816}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.34155}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.31857}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.33643}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.32607}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.32004}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.36749}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.35799}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.35386}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.31712}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.31032}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.30482}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.30482}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.28674}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.27779}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.26453}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.26852}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.26705}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.25778}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.25771}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.27305}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.28843}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.29409}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.29794}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.27044}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.26086}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.24365}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.22249}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.21462}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.25513}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.24056}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.21738}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.21275}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.21275}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.19568}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.19038}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.22754}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.25585}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.22501}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.22729}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.22745}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.19883}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.21526}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.21376}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.21292}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.21424}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.21503}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.21244}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.20117}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.13478}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.12364}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.11965}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.11052}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.12597}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.11475}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.11302}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.14494}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.14206}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.13409}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.21683}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.24823}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.29531}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.3066}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.34582}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.32447}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.32447}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Pixels_PIXEL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.24382}]
success ya
UWAGA
db_PIXELUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000390       NaN  ...              0                0       NaN
1      2023-01-02  0.000386       NaN  ...              0                0       NaN
2      2023-01-03  0.000377       NaN  ...              0                0       NaN
3      2023-01-04  0.000394       NaN  ...              0                0       NaN
4      2023-01-05  0.000400       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
10370  2024-11-27  0.239960  0.201172  ...              1                1  0.180531
10371  2024-11-28  0.239920  0.204401  ...              1                1  0.182615
10372  2024-11-29  0.246610  0.207919  ...              1                1  0.184860
10373  2024-11-30  0.254700  0.211817  ...              1                1  0.187311
10374  2024-12-01  0.259310  0.215775  ...              1                1  0.189837

[10375 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.24382}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.24382}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000390       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.000386       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.000377       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.000394       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.000400       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
10371  2024-11-28  0.239920  0.204401  ...            1.0              1.0  0.182615
10372  2024-11-29  0.246610  0.207919  ...            1.0              1.0  0.184860
10373  2024-11-30  0.254700  0.211817  ...            1.0              1.0  0.187311
10374  2024-12-01  0.259310  0.215775  ...            1.0              1.0  0.189837
10375  2024-12-02  0.243820       NaN  ...            NaN              NaN       NaN

[10376 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Pixels_PIXEL
NECESSARRRY AAAA START
1
1
2024-10-24
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
252  Pixels PIXEL  0.24382  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Tribe_TRIBE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.51164}]
success ya
UWAGA
db_TRIBEUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.201431       NaN  ...              0                0       NaN
1    2023-01-02  0.204441       NaN  ...              0                0       NaN
2    2023-01-03  0.200852       NaN  ...              0                0       NaN
3    2023-01-04  0.208524       NaN  ...              0                0       NaN
4    2023-01-05  0.205131       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.442030  0.419985  ...              1                1  0.397641
487  2024-05-02  0.433700  0.421128  ...              1                1  0.398906
488  2024-05-03  0.434660  0.422255  ...              1                1  0.400160
489  2024-05-04  0.436110  0.423410  ...              1                1  0.401422
490  2024-05-05  0.436110  0.424468  ...              1                1  0.402639

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.42942}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.42379}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.42434}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.42434}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.42183}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.41853}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.41964}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.42038}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.41647}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.41738}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.41774}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.48989}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.51111}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.47898}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.50147}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.50993}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.5027}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.5027}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.52565}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.51968}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.52188}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.52364}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.52548}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.51966}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.51248}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.51415}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.5092}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.51586}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.51809}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.50899}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.50238}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.49523}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.506}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.5088}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.49705}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.49407}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.48907}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.4931}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.4931}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.4898}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.46846}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.49107}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.48292}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.47895}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.46971}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.4754}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.47528}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.48496}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.48604}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.48656}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.48549}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.48592}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.48733}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.4887}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.61239}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.60045}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.61749}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.6625}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.54311}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.60037}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.62535}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.58625}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.52434}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.63855}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.56719}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.56938}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.66504}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.67395}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.63734}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.51164}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.51164}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
COTI_COTI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15404}]
success ya
UWAGA
db_COTIUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.051679       NaN  ...              0                0       NaN
1    2023-01-02  0.051703       NaN  ...              0                0       NaN
2    2023-01-03  0.051946       NaN  ...              0                0       NaN
3    2023-01-04  0.053548       NaN  ...              0                0       NaN
4    2023-01-05  0.053801       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.138700  0.115090  ...              1                0  0.116603
557  2024-11-28  0.143680  0.117472  ...              1                0  0.117553
558  2024-11-29  0.147600  0.119983  ...              1                1  0.118607
559  2024-11-30  0.148430  0.122353  ...              1                1  0.119654
560  2024-12-01  0.152520  0.124867  ...              1                1  0.120807

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15404}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15404}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.051679       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.051703       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.051946       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.053548       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.053801       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.143680  0.117472  ...            1.0              0.0  0.117553
558  2024-11-29  0.147600  0.119983  ...            1.0              1.0  0.118607
559  2024-11-30  0.148430  0.122353  ...            1.0              1.0  0.119654
560  2024-12-01  0.152520  0.124867  ...            1.0              1.0  0.120807
561  2024-12-02  0.154040       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted COTI_COTI
NECESSARRRY AAAA START
1
1
2024-11-29
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
254  COTI COTI  0.15404  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Simon’s_Cat_CAT
[{'Date': datetime.date(2024, 12, 2), 'Price': 4e-05}]
success ya
UWAGA
db_CATUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_CATUSD': no such table: db_CATUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Rollbit_Coin_RLB
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11784}]
success ya
UWAGA
db_RLBUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00  0.002102  ...              0                0
1    2023-01-02 00:00:00  0.002132  ...              0                0
2    2023-01-03 00:00:00  0.002321  ...              0                0
3    2023-01-04 00:00:00  0.002549  ...              0                0
4    2023-01-05 00:00:00  0.002433  ...              0                0
..                   ...       ...  ...            ...              ...
468           2024-04-13  0.109790  ...              0                0
469           2024-04-14  0.096660  ...              0                0
470           2024-04-15  0.099950  ...              0                0
471           2024-04-16  0.101320  ...              0                0
472           2024-04-17  0.099850  ...              0                0

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.09511}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.09622}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.097}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.097}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.08694}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.07926}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.07686}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.07745}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.07511}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.07702}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.07587}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.08245}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.08758}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.08486}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.07932}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.07758}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.07274}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.07274}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.08308}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.08025}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.07943}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.07984}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.07828}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.07311}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.07764}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.06625}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.06507}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.0666}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.07019}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.06423}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.06292}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.06333}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.06257}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.0595}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.0604}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.05667}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.06554}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.06969}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.06969}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.06672}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.05918}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.05488}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.0658}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.06319}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.06369}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.06639}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.0755}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.08472}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.0805}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.07839}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.07739}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.07672}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.08232}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.08643}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.08086}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.07886}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.08152}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.07916}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.082}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.07365}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.07013}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.07081}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.09371}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.12621}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.11579}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.12961}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.11799}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.11908}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.1132}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.11784}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.11784}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Solar_SXP
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.43718}]
success ya
UWAGA
db_SXPUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.202349       NaN  ...              0                0       NaN
1    2023-01-02  0.204593       NaN  ...              0                0       NaN
2    2023-01-03  0.205867       NaN  ...              0                0       NaN
3    2023-01-04  0.209686       NaN  ...              0                0       NaN
4    2023-01-05  0.209948       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.410360  0.335710  ...              1                1  0.326109
557  2024-11-28  0.393470  0.340523  ...              1                1  0.328473
558  2024-11-29  0.420820  0.347215  ...              1                1  0.331713
559  2024-11-30  0.413630  0.352749  ...              1                1  0.334587
560  2024-12-01  0.425320  0.358797  ...              1                1  0.337771

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.43718}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.43718}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.202349       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.204593       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.205867       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.209686       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.209948       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.393470  0.340523  ...            1.0              1.0  0.328473
558  2024-11-29  0.420820  0.347215  ...            1.0              1.0  0.331713
559  2024-11-30  0.413630  0.352749  ...            1.0              1.0  0.334587
560  2024-12-01  0.425320  0.358797  ...            1.0              1.0  0.337771
561  2024-12-02  0.437180       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Solar_SXP
NECESSARRRY AAAA START
1
1
2024-11-24
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
257  Solar SXP  0.43718  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Apu_Apustaja_APU
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00085}]
success ya
UWAGA
db_APUUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_APUUSD': no such table: db_APUUSD
trying
 inicjacja duplicates
duplicate info
[False]
Blast_BLAST
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0119}]
success ya
UWAGA
db_BLASTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BLASTUSD': no such table: db_BLASTUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Department_Of_Government_Efficiency_(dogegov.com)_DOGE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.27726}]
success ya
UWAGA
db_DOGEUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  0.05985       NaN  ...       NaN              0                0
1    2023-10-15  0.05930       NaN  ...       NaN              0                0
2    2023-10-16  0.06001       NaN  ...       NaN              0                0
3    2023-10-17  0.05905       NaN  ...       NaN              0                0
4    2023-10-18  0.05860       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
410  2024-11-27  0.20942  0.252907  ...  0.141844              1                1
411  2024-11-28  0.17001  0.245999  ...  0.141988              1                1
412  2024-11-29  0.22695  0.244411  ...  0.142379              1                1
413  2024-11-30  0.24744  0.244664  ...  0.142889              1                1
414  2024-12-01  0.26002  0.245943  ...  0.143413              1                1

[415 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.27726}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.27726}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  0.05985       NaN  ...       NaN            0.0              0.0
1    2023-10-15  0.05930       NaN  ...       NaN            0.0              0.0
2    2023-10-16  0.06001       NaN  ...       NaN            0.0              0.0
3    2023-10-17  0.05905       NaN  ...       NaN            0.0              0.0
4    2023-10-18  0.05860       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
411  2024-11-28  0.17001  0.245999  ...  0.141988            1.0              1.0
412  2024-11-29  0.22695  0.244411  ...  0.142379            1.0              1.0
413  2024-11-30  0.24744  0.244664  ...  0.142889            1.0              1.0
414  2024-12-01  0.26002  0.245943  ...  0.143413            1.0              1.0
415  2024-12-02  0.27726       NaN  ...       NaN            NaN              NaN

[416 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Department_Of_Government_Efficiency_(dogegov
NECESSARRRY AAAA START
1
1
2024-09-28
2024-10-18
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                                                  Name  ...  long_flip_date
260  Department Of Government Efficiency (dogegov.c...  ...            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
yearn.finance_YFI
[{'Date': datetime.date(2024, 12, 2), 'Price': 8065.38}]
success ya
UWAGA
db_YFIUSD
COINDBBB
           Date        Close  ...  Middle_Trend_Up        EMA56
0    2023-01-01  5137.622070  ...                0          NaN
1    2023-01-02  5369.373535  ...                0          NaN
2    2023-01-03  5331.855957  ...                0          NaN
3    2023-01-04  5379.364258  ...                0          NaN
4    2023-01-05  5389.466797  ...                0          NaN
..          ...          ...  ...              ...          ...
556  2024-11-27  7553.020000  ...                0  6664.703365
557  2024-11-28  7409.300000  ...                1  6690.829563
558  2024-11-29  7649.730000  ...                1  6724.475192
559  2024-11-30  7623.590000  ...                1  6756.023080
560  2024-12-01  7942.610000  ...                1  6797.657709

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 8065.38}, {'Date': datetime.date(2024, 12, 2), 'Price': 8065.38}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date        Close  ...  Middle_Trend_Up        EMA56
0    2023-01-01  5137.622070  ...              0.0          NaN
1    2023-01-02  5369.373535  ...              0.0          NaN
2    2023-01-03  5331.855957  ...              0.0          NaN
3    2023-01-04  5379.364258  ...              0.0          NaN
4    2023-01-05  5389.466797  ...              0.0          NaN
..          ...          ...  ...              ...          ...
557  2024-11-28  7409.300000  ...              1.0  6690.829563
558  2024-11-29  7649.730000  ...              1.0  6724.475192
559  2024-11-30  7623.590000  ...              1.0  6756.023080
560  2024-12-01  7942.610000  ...              1.0  6797.657709
561  2024-12-02  8065.380000  ...              NaN          NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted yearn
NECESSARRRY AAAA START
1
1
2024-11-28
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
261  yearn.finance YFI  8065.38  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Hivemapper_HONEY
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.09162}]
success ya
UWAGA
db_HONEYUSD
COINDBBB
                   Date     Close     EMA23 EMA82 SMA200
0   2022-12-05 00:00:00  0.203213       NaN  None   None
1   2022-12-12 00:00:00  0.175744       NaN  None   None
2   2022-12-19 00:00:00  0.130464       NaN  None   None
3   2022-12-26 00:00:00  0.071889       NaN  None   None
4   2023-01-02 00:00:00  0.118616       NaN  None   None
..                  ...       ...       ...   ...    ...
63  2024-02-19 00:00:00  0.184709  0.132380  None   None
64  2024-02-26 00:00:00  0.219989  0.139681  None   None
65  2024-03-04 00:00:00  0.184877  0.143447  None   None
66  2024-03-11 00:00:00  0.147835  0.143813  None   None
67  2024-03-18 00:00:00  0.156257  0.144850  None   None

[68 rows x 5 columns]
last_db_date_data
2024-03-18
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.08444}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.08323}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.08217}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.08217}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.08071}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.07937}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.08227}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.07667}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.079}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.07916}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.07739}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.07892}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.08003}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.0789}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.07753}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.07718}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.07663}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.07663}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.07498}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.07512}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.07505}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.07459}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.07487}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.0751}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.0732}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.07846}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.07881}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.07665}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.07478}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.08352}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.07707}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.07455}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.0757}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.07369}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.0771}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.07391}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.07465}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.07092}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.07092}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.0618}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.05814}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.06155}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.05983}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.05732}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.05857}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.06403}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.05523}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.05765}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.05691}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.05465}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.05534}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.0543}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.0544}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.0586}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.07292}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.07099}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.07312}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.06558}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.06494}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.06422}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.06276}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.0676}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.06716}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.06306}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.06448}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.06298}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.06494}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.06616}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.07543}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.09162}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.09162}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Ontology_ONT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.29464}]
success ya
UWAGA
db_ONTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.153601       NaN  ...              0                0       NaN
1    2023-01-02  0.154138       NaN  ...              0                0       NaN
2    2023-01-03  0.154865       NaN  ...              0                0       NaN
3    2023-01-04  0.158946       NaN  ...              0                0       NaN
4    2023-01-05  0.157723       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.272270  0.239431  ...              0                0  0.257538
557  2024-11-28  0.269270  0.241918  ...              0                0  0.257950
558  2024-11-29  0.283510  0.245384  ...              0                0  0.258847
559  2024-11-30  0.283920  0.248595  ...              0                0  0.259727
560  2024-12-01  0.284780  0.251611  ...              0                0  0.260606

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.29464}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.29464}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.153601       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.154138       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.154865       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.158946       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.157723       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.269270  0.241918  ...            0.0              0.0  0.257950
558  2024-11-29  0.283510  0.245384  ...            0.0              0.0  0.258847
559  2024-11-30  0.283920  0.248595  ...            0.0              0.0  0.259727
560  2024-12-01  0.284780  0.251611  ...            0.0              0.0  0.260606
561  2024-12-02  0.294640       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Ontology_ONT
NECESSARRRY AAAA START
0
1
2024-05-16
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
263  Ontology ONT  0.29464  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Metaplex_MPLX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.35097}]
success ya
UWAGA
db_MPLXUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.03200       NaN  ...       NaN              0                0
1    2023-04-07  0.04138       NaN  ...       NaN              0                0
2    2023-04-08  0.03700       NaN  ...       NaN              0                0
3    2023-04-09  0.03440       NaN  ...       NaN              0                0
4    2023-04-10  0.03450       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
463  2024-11-27  0.35714  0.347659  ...  0.287908              1                1
464  2024-11-28  0.46190  0.357179  ...  0.288488              1                1
465  2024-11-29  0.34320  0.356014  ...  0.288348              1                1
466  2024-11-30  0.35527  0.355952  ...  0.288417              1                1
467  2024-12-01  0.33164  0.353926  ...  0.288300              1                1

[468 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.35097}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.35097}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.03200       NaN  ...       NaN            0.0              0.0
1    2023-04-07  0.04138       NaN  ...       NaN            0.0              0.0
2    2023-04-08  0.03700       NaN  ...       NaN            0.0              0.0
3    2023-04-09  0.03440       NaN  ...       NaN            0.0              0.0
4    2023-04-10  0.03450       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
464  2024-11-28  0.46190  0.357179  ...  0.288488            1.0              1.0
465  2024-11-29  0.34320  0.356014  ...  0.288348            1.0              1.0
466  2024-11-30  0.35527  0.355952  ...  0.288417            1.0              1.0
467  2024-12-01  0.33164  0.353926  ...  0.288300            1.0              1.0
468  2024-12-02  0.35097       NaN  ...       NaN            NaN              NaN

[469 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Metaplex_MPLX
NECESSARRRY AAAA START
1
1
2024-06-12
2024-03-12
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
264  Metaplex MPLX  0.35097  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
DigiByte_DGB
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01524}]
success ya
UWAGA
db_DGBUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.007858       NaN  ...              0                0       NaN
1    2023-01-02  0.007955       NaN  ...              0                0       NaN
2    2023-01-03  0.007899       NaN  ...              0                0       NaN
3    2023-01-04  0.008023       NaN  ...              0                0       NaN
4    2023-01-05  0.008048       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.011120  0.009871  ...              1                0  0.010157
557  2024-11-28  0.010930  0.009960  ...              0                0  0.010184
558  2024-11-29  0.011000  0.010046  ...              0                0  0.010212
559  2024-11-30  0.011360  0.010156  ...              1                0  0.010253
560  2024-12-01  0.015000  0.010560  ...              1                1  0.010419

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01524}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01524}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.007858       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.007955       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.007899       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.008023       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.008048       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.010930  0.009960  ...            0.0              0.0  0.010184
558  2024-11-29  0.011000  0.010046  ...            0.0              0.0  0.010212
559  2024-11-30  0.011360  0.010156  ...            1.0              0.0  0.010253
560  2024-12-01  0.015000  0.010560  ...            1.0              1.0  0.010419
561  2024-12-02  0.015240       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted DigiByte_DGB
NECESSARRRY AAAA START
1
1
2024-12-01
2024-11-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
265  DigiByte DGB  0.01524  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
VeThor_Token_VTHO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00317}]
success ya
UWAGA
db_VTHOUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.000906       NaN  ...              0                0       NaN
1    2023-01-02  0.000913       NaN  ...              0                0       NaN
2    2023-01-03  0.000928       NaN  ...              0                0       NaN
3    2023-01-04  0.000936       NaN  ...              0                0       NaN
4    2023-01-05  0.000926       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.002990  0.003562  ...              1                0  0.003739
487  2024-05-02  0.003290  0.003540  ...              1                0  0.003723
488  2024-05-03  0.003350  0.003524  ...              1                0  0.003710
489  2024-05-04  0.003360  0.003510  ...              1                0  0.003697
490  2024-05-05  0.003360  0.003498  ...              1                0  0.003686

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.00311}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.00308}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.00307}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.00307}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.00311}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.00304}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.00322}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.00302}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.00312}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.00305}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.00298}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.0032}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.00315}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.00316}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.00306}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.00318}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.00319}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.00319}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.00349}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.00333}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.00328}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.00325}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.00319}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.00314}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.00311}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.0031}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.00316}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.00321}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.00319}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.0032}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.00302}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.0029}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.00291}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.00268}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.00288}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.0028}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.00268}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.00272}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.00272}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.00253}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.00235}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.00245}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.00246}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.00245}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.00241}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.00245}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.00235}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.0025}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.00241}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.00242}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.00241}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.00239}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.00242}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.00242}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.00194}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00212}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.00219}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00208}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00215}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00216}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.00237}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.00294}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.00285}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.00259}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.00284}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.00283}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.00292}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.00309}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.00311}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00317}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00317}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Horizen_ZEN
[{'Date': datetime.date(2024, 12, 2), 'Price': 16.6087}]
success ya
UWAGA
db_ZENUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   9.407774  ...                0       NaN
1      2023-01-02   9.370849  ...                0       NaN
2      2023-01-03   9.009722  ...                0       NaN
3      2023-01-04   8.997592  ...                0       NaN
4      2023-01-05   8.733026  ...                0       NaN
...           ...        ...  ...              ...       ...
27962  2024-11-27  16.233000  ...                1  9.019244
27963  2024-11-28  15.027000  ...                1  9.230042
27964  2024-11-29  14.834000  ...                1  9.426673
27965  2024-11-30  16.335000  ...                1  9.669070
27966  2024-12-01  17.682000  ...                1  9.950225

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 16.6087}, {'Date': datetime.date(2024, 12, 2), 'Price': 16.6087}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   9.407774  ...              0.0       NaN
1      2023-01-02   9.370849  ...              0.0       NaN
2      2023-01-03   9.009722  ...              0.0       NaN
3      2023-01-04   8.997592  ...              0.0       NaN
4      2023-01-05   8.733026  ...              0.0       NaN
...           ...        ...  ...              ...       ...
27963  2024-11-28  15.027000  ...              1.0  9.230042
27964  2024-11-29  14.834000  ...              1.0  9.426673
27965  2024-11-30  16.335000  ...              1.0  9.669070
27966  2024-12-01  17.682000  ...              1.0  9.950225
27967  2024-12-02  16.608700  ...              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Horizen_ZEN
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
267  Horizen ZEN  16.6087  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
LCX_LCX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.33684}]
success ya
UWAGA
db_LCXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.032360       NaN  ...              0                0       NaN
1    2023-01-02  0.033243       NaN  ...              0                0       NaN
2    2023-01-03  0.033397       NaN  ...              0                0       NaN
3    2023-01-04  0.035597       NaN  ...              0                0       NaN
4    2023-01-05  0.040594       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.264500  0.296432  ...              1                1  0.290829
487  2024-05-02  0.283050  0.295317  ...              1                1  0.290556
488  2024-05-03  0.308800  0.296440  ...              1                1  0.291196
489  2024-05-04  0.312030  0.297739  ...              1                1  0.291927
490  2024-05-05  0.312030  0.298930  ...              1                1  0.292633

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.27966}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.268}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.26846}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.26846}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.2651}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.26056}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.27893}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.27787}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.30231}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.30261}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.29235}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.31433}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.30744}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.2939}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.28191}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.29287}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.29378}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.29378}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.28725}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.27454}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.26975}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.26879}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.26876}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.26813}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.26532}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.24872}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.25262}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.25628}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.25449}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.24043}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.24241}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.2393}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.24514}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.22551}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.24773}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.22623}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.22529}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.23389}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.23389}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.20541}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.20124}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.21393}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.22477}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.21409}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.2154}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.21211}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.1892}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.1987}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.19493}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.19449}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.19046}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.1862}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.18328}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.17889}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.10943}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.11173}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.10942}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.10687}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.11034}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.1092}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.11533}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.16652}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.20147}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.20133}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.31753}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.31848}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.3142}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.29733}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.31315}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.33684}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.33684}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
PAAL_AI_PAAL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.31606}]
success ya
UWAGA
db_PAALUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-07-01 00:00:00  0.001985  ...              0                0
1    2023-07-02 00:00:00  0.001397  ...              0                0
2    2023-07-03 00:00:00  0.002796  ...              0                0
3    2023-07-04 00:00:00  0.002299  ...              0                0
4    2023-07-05 00:00:00  0.001804  ...              0                0
..                   ...       ...  ...            ...              ...
284           2024-04-13  0.464600  ...              1                1
285           2024-04-14  0.401090  ...              1                1
286           2024-04-15  0.394250  ...              1                1
287           2024-04-16  0.404440  ...              1                1
288           2024-04-17  0.339060  ...              1                1

[289 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.44397}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.44781}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.43985}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.43985}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.39568}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.37099}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.44354}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.41767}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.46121}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.46162}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.44633}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.5174}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.50606}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.49798}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.4843}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.42792}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.41995}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.41995}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.41002}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.37856}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.36203}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.36198}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.35502}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.35621}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.34073}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.34436}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.34881}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.38523}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.38109}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.3708}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.34289}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.31807}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.2935}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.26408}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.31137}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.28769}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.2682}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.24091}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.24091}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.2068}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.20308}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.22746}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.25275}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.25038}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.24734}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.25655}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.23302}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.28593}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.28435}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.27488}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.26561}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.25584}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.2548}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.27965}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.13762}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.16765}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.17781}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.16449}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.16083}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.15237}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.15693}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.17988}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.17222}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.15825}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.18358}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.18745}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.26244}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.26482}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.34479}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.31606}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.31606}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Constellation_DAG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.08996}]
success ya
UWAGA
db_DAGUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-03-14  0.049381       NaN  ...              0                0       NaN
1    2023-03-15  0.046587       NaN  ...              0                0       NaN
2    2023-03-16  0.044879       NaN  ...              0                0       NaN
3    2023-03-17  0.047342       NaN  ...              0                0       NaN
4    2023-03-18  0.045081       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
483  2024-11-27  0.089750  0.049648  ...              1                1  0.044554
484  2024-11-28  0.079590  0.052143  ...              1                1  0.045783
485  2024-11-29  0.073000  0.053881  ...              1                1  0.046738
486  2024-11-30  0.076500  0.055766  ...              1                1  0.047782
487  2024-12-01  0.074540  0.057331  ...              1                1  0.048721

[488 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.08996}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.08996}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-03-14  0.049381       NaN  ...            0.0              0.0       NaN
1    2023-03-15  0.046587       NaN  ...            0.0              0.0       NaN
2    2023-03-16  0.044879       NaN  ...            0.0              0.0       NaN
3    2023-03-17  0.047342       NaN  ...            0.0              0.0       NaN
4    2023-03-18  0.045081       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
484  2024-11-28  0.079590  0.052143  ...            1.0              1.0  0.045783
485  2024-11-29  0.073000  0.053881  ...            1.0              1.0  0.046738
486  2024-11-30  0.076500  0.055766  ...            1.0              1.0  0.047782
487  2024-12-01  0.074540  0.057331  ...            1.0              1.0  0.048721
488  2024-12-02  0.089960       NaN  ...            NaN              NaN       NaN

[489 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Constellation_DAG
NECESSARRRY AAAA START
1
1
2024-11-25
2024-11-25
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
270  Constellation DAG  0.08996  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Non-Playable_Coin_NPC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03523}]
success ya
UWAGA
db_NPCUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_NPCUSD': no such table: db_NPCUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
ICON_ICX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.24739}]
success ya
UWAGA
db_ICXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.142800       NaN  ...              0                0       NaN
1    2023-01-02  0.147388       NaN  ...              0                0       NaN
2    2023-01-03  0.145308       NaN  ...              0                0       NaN
3    2023-01-04  0.150289       NaN  ...              0                0       NaN
4    2023-01-05  0.148528       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.216570  0.180411  ...              0                0  0.191599
557  2024-11-28  0.214540  0.183255  ...              0                0  0.192404
558  2024-11-29  0.227710  0.186960  ...              0                0  0.193643
559  2024-11-30  0.230110  0.190556  ...              0                0  0.194923
560  2024-12-01  0.232590  0.194058  ...              0                0  0.196244

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.24739}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.24739}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.142800       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.147388       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.145308       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.150289       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.148528       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.214540  0.183255  ...            0.0              0.0  0.192404
558  2024-11-29  0.227710  0.186960  ...            0.0              0.0  0.193643
559  2024-11-30  0.230110  0.190556  ...            0.0              0.0  0.194923
560  2024-12-01  0.232590  0.194058  ...            0.0              0.0  0.196244
561  2024-12-02  0.247390       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted ICON_ICX
NECESSARRRY AAAA START
1
1
2024-12-02
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
272  ICON ICX  0.24739  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Hamster_Kombat_HMSTR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00394}]
success ya
UWAGA
db_HMSTRUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_HMSTRUSD': no such table: db_HMSTRUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Storj_STORJ
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.63379}]
success ya
UWAGA
db_STORJUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.249240       NaN  ...              0                0       NaN
1    2023-01-02  0.252884       NaN  ...              0                0       NaN
2    2023-01-03  0.251842       NaN  ...              0                0       NaN
3    2023-01-04  0.259132       NaN  ...              0                0       NaN
4    2023-01-05  0.257143       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.620520  0.499053  ...              1                1  0.497019
557  2024-11-28  0.604650  0.507853  ...              0                1  0.500795
558  2024-11-29  0.630700  0.518090  ...              1                1  0.505353
559  2024-11-30  0.628360  0.527280  ...              1                1  0.509669
560  2024-12-01  0.658930  0.538250  ...              1                1  0.514906

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.63379}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.63379}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.249240       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.252884       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.251842       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.259132       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.257143       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.604650  0.507853  ...            0.0              1.0  0.500795
558  2024-11-29  0.630700  0.518090  ...            1.0              1.0  0.505353
559  2024-11-30  0.628360  0.527280  ...            1.0              1.0  0.509669
560  2024-12-01  0.658930  0.538250  ...            1.0              1.0  0.514906
561  2024-12-02  0.633790       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Storj_STORJ
NECESSARRRY AAAA START
1
1
2024-11-27
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
274  Storj STORJ  0.63379  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Casper_CSPR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01994}]
success ya
UWAGA
db_CSPRUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.028125       NaN  ...              0                0       NaN
1    2023-01-02  0.029051       NaN  ...              0                0       NaN
2    2023-01-03  0.028767       NaN  ...              0                0       NaN
3    2023-01-04  0.030143       NaN  ...              0                0       NaN
4    2023-01-05  0.028412       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.016300  0.018891  ...              0                0  0.022860
557  2024-11-28  0.015700  0.018625  ...              0                0  0.022609
558  2024-11-29  0.017610  0.018540  ...              0                0  0.022434
559  2024-11-30  0.017740  0.018474  ...              0                0  0.022269
560  2024-12-01  0.018730  0.018495  ...              0                0  0.022145

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01994}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01994}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.028125       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.029051       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.028767       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.030143       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.028412       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.015700  0.018625  ...            0.0              0.0  0.022609
558  2024-11-29  0.017610  0.018540  ...            0.0              0.0  0.022434
559  2024-11-30  0.017740  0.018474  ...            0.0              0.0  0.022269
560  2024-12-01  0.018730  0.018495  ...            0.0              0.0  0.022145
561  2024-12-02  0.019940       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Casper_CSPR
NECESSARRRY AAAA START
0
0
2024-03-29
2024-04-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
275  Casper CSPR  0.01994  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Alchemy_Pay_ACH
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02986}]
success ya
UWAGA
db_ACHUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.007863       NaN  ...              0                0       NaN
1    2023-01-02  0.008047       NaN  ...              0                0       NaN
2    2023-01-03  0.007855       NaN  ...              0                0       NaN
3    2023-01-04  0.008076       NaN  ...              0                0       NaN
4    2023-01-05  0.007931       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.028930  0.024926  ...              1                0  0.026090
557  2024-11-28  0.029180  0.025281  ...              1                0  0.026198
558  2024-11-29  0.029260  0.025612  ...              1                0  0.026306
559  2024-11-30  0.029500  0.025936  ...              1                0  0.026418
560  2024-12-01  0.031060  0.026363  ...              1                0  0.026581

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02986}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02986}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.007863       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.008047       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.007855       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.008076       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.007931       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.029180  0.025281  ...            1.0              0.0  0.026198
558  2024-11-29  0.029260  0.025612  ...            1.0              0.0  0.026306
559  2024-11-30  0.029500  0.025936  ...            1.0              0.0  0.026418
560  2024-12-01  0.031060  0.026363  ...            1.0              0.0  0.026581
561  2024-12-02  0.029860       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Alchemy_Pay_ACH
NECESSARRRY AAAA START
0
1
2024-05-05
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
276  Alchemy Pay ACH  0.02986  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ANDY_(ETH)_ANDY
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00025}]
success ya
UWAGA
db_ANDYUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ANDYUSD': no such table: db_ANDYUSD
trying
 inicjacja duplicates
duplicate info
[False]
Vanar_Chain_VANRY
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.14765}]
success ya
UWAGA
db_VANRYUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-11-12  0.047783       NaN  ...              0                0       NaN
1    2023-11-13  0.045240       NaN  ...              0                0       NaN
2    2023-11-14  0.049198       NaN  ...              0                0       NaN
3    2023-11-15  0.052349       NaN  ...              0                0       NaN
4    2023-11-16  0.046515       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
376  2024-11-27  0.138750  0.130141  ...              0                0  0.150926
377  2024-11-28  0.135260  0.130568  ...              0                0  0.150376
378  2024-11-29  0.133190  0.130786  ...              0                0  0.149773
379  2024-11-30  0.132440  0.130924  ...              0                0  0.149165
380  2024-12-01  0.145920  0.132174  ...              0                0  0.149051

[381 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.14765}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.14765}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-11-12  0.047783       NaN  ...            0.0              0.0       NaN
1    2023-11-13  0.045240       NaN  ...            0.0              0.0       NaN
2    2023-11-14  0.049198       NaN  ...            0.0              0.0       NaN
3    2023-11-15  0.052349       NaN  ...            0.0              0.0       NaN
4    2023-11-16  0.046515       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
377  2024-11-28  0.135260  0.130568  ...            0.0              0.0  0.150376
378  2024-11-29  0.133190  0.130786  ...            0.0              0.0  0.149773
379  2024-11-30  0.132440  0.130924  ...            0.0              0.0  0.149165
380  2024-12-01  0.145920  0.132174  ...            0.0              0.0  0.149051
381  2024-12-02  0.147650       NaN  ...            NaN              NaN       NaN

[382 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Vanar_Chain_VANRY
NECESSARRRY AAAA START
0
0
2024-06-17
2024-06-26
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
278  Vanar Chain VANRY  0.14765  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Avail_AVAIL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.12975}]
success ya
UWAGA
db_AVAILUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_AVAILUSD': no such table: db_AVAILUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Degen_DEGEN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01712}]
success ya
UWAGA
db_DEGENUSD
COINDBBB
            Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0     2023-03-14  0.830825       NaN  ...              0                0       NaN
1     2023-03-15  0.822236       NaN  ...              0                0       NaN
2     2023-03-16  0.797466       NaN  ...              0                0       NaN
3     2023-03-17  0.855035       NaN  ...              0                0       NaN
4     2023-03-18  0.815616       NaN  ...              0                0       NaN
...          ...       ...       ...  ...            ...              ...       ...
5956  2024-11-27  0.020290  0.017442  ...              1                1  0.013406
5957  2024-11-28  0.018610  0.017539  ...              1                1  0.013589
5958  2024-11-29  0.018900  0.017653  ...              1                1  0.013775
5959  2024-11-30  0.018380  0.017713  ...              1                1  0.013937
5960  2024-12-01  0.019310  0.017847  ...              1                1  0.014125

[5961 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01712}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01712}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0     2023-03-14  0.830825       NaN  ...            0.0              0.0       NaN
1     2023-03-15  0.822236       NaN  ...            0.0              0.0       NaN
2     2023-03-16  0.797466       NaN  ...            0.0              0.0       NaN
3     2023-03-17  0.855035       NaN  ...            0.0              0.0       NaN
4     2023-03-18  0.815616       NaN  ...            0.0              0.0       NaN
...          ...       ...       ...  ...            ...              ...       ...
5957  2024-11-28  0.018610  0.017539  ...            1.0              1.0  0.013589
5958  2024-11-29  0.018900  0.017653  ...            1.0              1.0  0.013775
5959  2024-11-30  0.018380  0.017713  ...            1.0              1.0  0.013937
5960  2024-12-01  0.019310  0.017847  ...            1.0              1.0  0.014125
5961  2024-12-02  0.017120       NaN  ...            NaN              NaN       NaN

[5962 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Degen_DEGEN
NECESSARRRY AAAA START
1
1
2024-10-03
2024-11-11
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
280  Degen DEGEN  0.01712  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Saga_SAGA
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.25826}]
success ya
UWAGA
db_SAGAUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_SAGAUSD': no such table: db_SAGAUSD
trying
 inicjacja duplicates
duplicate info
[False]
Waves_WAVES
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.05469}]
success ya
UWAGA
db_WAVESUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.309178       NaN  ...              0                0       NaN
1      2023-01-02  1.338606       NaN  ...              0                0       NaN
2      2023-01-03  1.337729       NaN  ...              0                0       NaN
3      2023-01-04  1.406595       NaN  ...              0                0       NaN
4      2023-01-05  1.394465       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.728200  1.422219  ...              1                1  1.263648
27963  2024-11-28  1.707900  1.446026  ...              1                1  1.279236
27964  2024-11-29  2.115600  1.501824  ...              1                1  1.308582
27965  2024-11-30  2.255700  1.564647  ...              1                1  1.341814
27966  2024-12-01  2.218900  1.619168  ...              1                1  1.372589

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.05469}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.05469}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.309178       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.338606       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.337729       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.406595       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.394465       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.707900  1.446026  ...            1.0              1.0  1.279236
27964  2024-11-29  2.115600  1.501824  ...            1.0              1.0  1.308582
27965  2024-11-30  2.255700  1.564647  ...            1.0              1.0  1.341814
27966  2024-12-01  2.218900  1.619168  ...            1.0              1.0  1.372589
27967  2024-12-02  2.054690       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Waves_WAVES
NECESSARRRY AAAA START
1
1
2024-11-13
2024-11-16
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
282  Waves WAVES  2.05469  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
HarryPotterObamaSonic10Inu_BITCOIN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.23682}]
success ya
UWAGA
db_BITCOINUSD
COINDBBB
                    Date  Close  EMA23  EMA82  SMA200
0    2023-01-01 00:00:00    0.0    NaN    NaN     NaN
1    2023-01-03 00:00:00    0.0    NaN    NaN     NaN
2    2023-01-04 00:00:00    0.0    NaN    NaN     NaN
3    2023-01-05 00:00:00    0.0    NaN    NaN     NaN
4    2023-01-06 00:00:00    0.0    NaN    NaN     NaN
..                   ...    ...    ...    ...     ...
403  2024-03-22 00:00:00    0.0    0.0    0.0     0.0
404  2024-03-23 00:00:00    0.0    0.0    0.0     0.0
405  2024-03-24 00:00:00    0.0    0.0    0.0     0.0
406  2024-03-25 00:00:00    0.0    0.0    0.0     0.0
407  2024-03-26 00:00:00    0.0    0.0    0.0     0.0

[408 rows x 5 columns]
last_db_date_data
2024-03-26
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.08998}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.09152}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.09152}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.10494}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.135}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.12392}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.10927}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.10833}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.10353}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.09358}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.11888}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.13545}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.14284}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.1679}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.1461}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.1564}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.1564}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.20641}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.19328}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.18724}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.1803}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.18411}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.16262}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.16316}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.15049}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.15401}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.13826}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.15146}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.14003}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.13102}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.13267}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.13649}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.12182}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.12434}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.11457}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.10738}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.11653}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.11653}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.12384}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.11748}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.11264}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.11624}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.10989}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.11357}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.10653}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.08977}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.10495}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.09803}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.1043}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.10219}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.10206}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.11697}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.11175}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.2725}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.24349}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.21777}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.20922}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.24115}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.24024}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.2377}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.27374}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.24275}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.21916}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.28677}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.29048}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.29289}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.29375}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.26637}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.23682}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.23682}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Sologenic_SOLO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.58949}]
success ya
UWAGA
db_SOLOUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_SOLOUSD': no such table: db_SOLOUSD
trying
 inicjacja duplicates
duplicate info
[False]
BasedAI_BASEDAI
[{'Date': datetime.date(2024, 12, 2), 'Price': 6.79031}]
success ya
UWAGA
db_BASEDAIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BASEDAIUSD': no such table: db_BASEDAIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Audius_AUDIO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.18333}]
success ya
UWAGA
db_AUDIOUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.132779       NaN  ...              0                0       NaN
1    2023-01-02  0.135170       NaN  ...              0                0       NaN
2    2023-01-03  0.133573       NaN  ...              0                0       NaN
3    2023-01-04  0.137216       NaN  ...              0                0       NaN
4    2023-01-05  0.136377       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.168270  0.157025  ...              0                0  0.168175
557  2024-11-28  0.176800  0.158673  ...              0                0  0.168477
558  2024-11-29  0.180710  0.160510  ...              0                0  0.168907
559  2024-11-30  0.180220  0.162152  ...              0                0  0.169304
560  2024-12-01  0.192430  0.164675  ...              0                0  0.170115

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.18333}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.18333}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.132779       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.135170       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.133573       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.137216       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.136377       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.176800  0.158673  ...            0.0              0.0  0.168477
558  2024-11-29  0.180710  0.160510  ...            0.0              0.0  0.168907
559  2024-11-30  0.180220  0.162152  ...            0.0              0.0  0.169304
560  2024-12-01  0.192430  0.164675  ...            0.0              0.0  0.170115
561  2024-12-02  0.183330       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Audius_AUDIO
NECESSARRRY AAAA START
0
0
2024-04-14
2024-05-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
286  Audius AUDIO  0.18333  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Delysium_AGI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.22172}]
success ya
UWAGA
db_AGIUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-04-11  0.322877       NaN  ...              0                0       NaN
1    2023-04-12  0.278490       NaN  ...              0                0       NaN
2    2023-04-13  0.309619       NaN  ...              0                0       NaN
3    2023-04-14  0.274514       NaN  ...              0                0       NaN
4    2023-04-15  0.246287       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
386  2024-05-01  0.235620  0.279467  ...              1                0  0.300037
387  2024-05-02  0.257370  0.277626  ...              1                0  0.298540
388  2024-05-03  0.290840  0.278727  ...              1                0  0.298270
389  2024-05-04  0.291590  0.279799  ...              1                0  0.298036
390  2024-05-05  0.291590  0.280782  ...              1                0  0.297809

[391 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.29334}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.29282}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.29822}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.29822}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.28904}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.26409}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.32172}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.31522}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.32121}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.32478}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.30938}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.34143}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.3447}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.34562}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.32232}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.32647}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.3229}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.3229}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.31637}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.30295}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.30781}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.30155}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.30003}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.2989}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.29513}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.30414}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.30577}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.31155}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.30255}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.29452}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.2741}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.27502}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.26352}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.22058}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.26335}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.23501}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.22262}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.21603}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.21603}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.17976}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.14915}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.18266}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.21417}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.22132}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.22639}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.25188}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.22008}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.24053}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.22899}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.22884}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.22317}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.20994}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.21686}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.2211}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.17806}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.18168}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.18361}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.18122}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.17779}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.16953}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.17792}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.18789}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.20033}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.18432}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.19919}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.24483}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.23454}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.23081}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.24383}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.22172}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.22172}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
World_Mobile_Token_WMTX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.47071}]
success ya
UWAGA
db_WMTXUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_WMTXUSD': no such table: db_WMTXUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
SUN_SUN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02341}]
success ya
UWAGA
db_SUNUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.005170       NaN  ...              0                0       NaN
1    2023-01-02  0.005213       NaN  ...              0                0       NaN
2    2023-01-03  0.005163       NaN  ...              0                0       NaN
3    2023-01-04  0.005154       NaN  ...              0                0       NaN
4    2023-01-05  0.005052       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.022670  0.018102  ...              1                1  0.015515
557  2024-11-28  0.021900  0.018418  ...              1                1  0.015739
558  2024-11-29  0.022390  0.018749  ...              1                1  0.015973
559  2024-11-30  0.022260  0.019042  ...              1                1  0.016193
560  2024-12-01  0.022980  0.019370  ...              1                1  0.016432

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02341}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02341}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.005170       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.005213       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.005163       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.005154       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.005052       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.021900  0.018418  ...            1.0              1.0  0.015739
558  2024-11-29  0.022390  0.018749  ...            1.0              1.0  0.015973
559  2024-11-30  0.022260  0.019042  ...            1.0              1.0  0.016193
560  2024-12-01  0.022980  0.019370  ...            1.0              1.0  0.016432
561  2024-12-02  0.023410       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted SUN_SUN
NECESSARRRY AAAA START
1
1
2024-11-18
2024-06-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
289  SUN SUN  0.02341  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
BinaryX_BNX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.61719}]
success ya
UWAGA
db_BNXUSD
COINDBBB
                    Date      Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00  69.262245  ...              0                0
1    2023-01-02 00:00:00  70.942368  ...              0                0
2    2023-01-03 00:00:00  69.391708  ...              0                0
3    2023-01-04 00:00:00  69.960167  ...              0                0
4    2023-01-05 00:00:00  69.133904  ...              0                0
..                   ...        ...  ...            ...              ...
468           2024-04-13   0.600370  ...              0                0
469           2024-04-14   0.678900  ...              0                0
470           2024-04-15   0.673310  ...              0                0
471           2024-04-16   0.754180  ...              0                0
472           2024-04-17   0.707430  ...              0                0

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.95319}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.9304}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.92853}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.92853}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.90874}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.95235}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.99677}, {'Date': datetime.date(2024, 5, 16), 'Price': 1.0157}, {'Date': datetime.date(2024, 5, 17), 'Price': 1.04284}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.99925}, {'Date': datetime.date(2024, 5, 19), 'Price': 1.07432}, {'Date': datetime.date(2024, 5, 20), 'Price': 1.11675}, {'Date': datetime.date(2024, 5, 21), 'Price': 1.17841}, {'Date': datetime.date(2024, 5, 22), 'Price': 1.36043}, {'Date': datetime.date(2024, 5, 23), 'Price': 1.39502}, {'Date': datetime.date(2024, 5, 24), 'Price': 1.38005}, {'Date': datetime.date(2024, 5, 25), 'Price': 1.37174}, {'Date': datetime.date(2024, 5, 26), 'Price': 1.37174}, {'Date': datetime.date(2024, 5, 27), 'Price': 1.25846}, {'Date': datetime.date(2024, 5, 28), 'Price': 1.19837}, {'Date': datetime.date(2024, 5, 29), 'Price': 1.00613}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.0478}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.03838}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.02655}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.96516}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.00478}, {'Date': datetime.date(2024, 6, 4), 'Price': 1.02408}, {'Date': datetime.date(2024, 6, 5), 'Price': 1.10243}, {'Date': datetime.date(2024, 6, 6), 'Price': 1.11445}, {'Date': datetime.date(2024, 6, 7), 'Price': 1.14786}, {'Date': datetime.date(2024, 6, 8), 'Price': 1.13098}, {'Date': datetime.date(2024, 6, 9), 'Price': 1.24868}, {'Date': datetime.date(2024, 6, 10), 'Price': 1.22076}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.09004}, {'Date': datetime.date(2024, 6, 12), 'Price': 1.15893}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.1445}, {'Date': datetime.date(2024, 6, 14), 'Price': 1.09347}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.07651}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.07651}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.96724}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.94876}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.04764}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.04391}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.05217}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.06852}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.0848}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.00652}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.1791}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.18201}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.17251}, {'Date': datetime.date(2024, 6, 28), 'Price': 1.03214}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.68533}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.82571}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.78514}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.53636}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.53756}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.52786}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.50091}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.50966}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.50429}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.52114}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.57943}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.56933}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.52537}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.59467}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.57564}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.59168}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.58622}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.63784}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.61719}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.61719}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Chromia_CHR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.27447}]
success ya
UWAGA
db_CHRUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.106245       NaN  ...              0                0       NaN
1    2023-01-02  0.109183       NaN  ...              0                0       NaN
2    2023-01-03  0.112006       NaN  ...              0                0       NaN
3    2023-01-04  0.112868       NaN  ...              0                0       NaN
4    2023-01-05  0.111642       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.259160  0.239926  ...              0                0  0.267606
557  2024-11-28  0.259250  0.241536  ...              0                0  0.267313
558  2024-11-29  0.262360  0.243272  ...              0                0  0.267139
559  2024-11-30  0.261310  0.244775  ...              0                0  0.266935
560  2024-12-01  0.280450  0.247748  ...              0                0  0.267409

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.27447}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.27447}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.106245       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.109183       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.112006       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.112868       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.111642       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.259250  0.241536  ...            0.0              0.0  0.267313
558  2024-11-29  0.262360  0.243272  ...            0.0              0.0  0.267139
559  2024-11-30  0.261310  0.244775  ...            0.0              0.0  0.266935
560  2024-12-01  0.280450  0.247748  ...            0.0              0.0  0.267409
561  2024-12-02  0.274470       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Chromia_CHR
NECESSARRRY AAAA START
0
0
2024-06-08
2024-06-13
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
291  Chromia CHR  0.27447  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
VVS_Finance_VVS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_VVSUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00  0.000003  ...              0                0
1    2023-01-02 00:00:00  0.000003  ...              0                0
2    2023-01-03 00:00:00  0.000003  ...              0                0
3    2023-01-04 00:00:00  0.000003  ...              0                0
4    2023-01-05 00:00:00  0.000003  ...              0                0
..                   ...       ...  ...            ...              ...
468           2024-04-13  0.000000  ...              0                0
469           2024-04-14  0.000000  ...              0                0
470           2024-04-15  0.000000  ...              0                0
471           2024-04-16  0.000000  ...              0                0
472           2024-04-17  0.000000  ...              0                0

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.0}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.0}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.0}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 20), 'Price': 1e-05}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 22), 'Price': 1e-05}, {'Date': datetime.date(2024, 11, 23), 'Price': 1e-05}, {'Date': datetime.date(2024, 11, 24), 'Price': 1e-05}, {'Date': datetime.date(2024, 11, 25), 'Price': 1e-05}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.0}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.0}, {'Date': datetime.date(2024, 12, 1), 'Price': 1e-05}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Open_Campus_EDU
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.63948}]
success ya
UWAGA
db_EDUUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-04-28  1.389739       NaN  ...              0                0       NaN
1      2023-04-29  1.411661       NaN  ...              0                0       NaN
2      2023-04-30  1.368755       NaN  ...              0                0       NaN
3      2023-05-01  1.254121       NaN  ...              0                0       NaN
4      2023-05-02  1.242909       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
26196  2024-11-27  0.636000  0.546971  ...              1                1  0.540663
26197  2024-11-28  0.629000  0.553807  ...              1                1  0.543763
26198  2024-11-29  0.627000  0.559906  ...              1                1  0.546683
26199  2024-11-30  0.654000  0.567748  ...              1                1  0.550449
26200  2024-12-01  0.648000  0.574435  ...              1                1  0.553872

[26201 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.63948}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.63948}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-04-28  1.389739       NaN  ...            0.0              0.0       NaN
1      2023-04-29  1.411661       NaN  ...            0.0              0.0       NaN
2      2023-04-30  1.368755       NaN  ...            0.0              0.0       NaN
3      2023-05-01  1.254121       NaN  ...            0.0              0.0       NaN
4      2023-05-02  1.242909       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
26197  2024-11-28  0.629000  0.553807  ...            1.0              1.0  0.543763
26198  2024-11-29  0.627000  0.559906  ...            1.0              1.0  0.546683
26199  2024-11-30  0.654000  0.567748  ...            1.0              1.0  0.550449
26200  2024-12-01  0.648000  0.574435  ...            1.0              1.0  0.553872
26201  2024-12-02  0.639480       NaN  ...            NaN              NaN       NaN

[26202 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Open_Campus_EDU
NECESSARRRY AAAA START
1
1
2024-11-26
2024-11-26
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
293  Open Campus EDU  0.63948  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Merlin_Chain_MERL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.40459}]
success ya
UWAGA
db_MERLUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-19  1.11340       NaN  ...       NaN              0                0
1    2024-04-20  1.24710       NaN  ...       NaN              0                0
2    2024-04-21  1.11490       NaN  ...       NaN              0                0
3    2024-04-22  0.96250       NaN  ...       NaN              0                0
4    2024-04-23  0.84910       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
222  2024-11-27  0.37756  0.323304  ...  0.306131              1                1
223  2024-11-28  0.40492  0.330105  ...  0.306001              1                1
224  2024-11-29  0.37737  0.334044  ...  0.305944              1                1
225  2024-11-30  0.37502  0.337459  ...  0.305850              1                1
226  2024-12-01  0.38800  0.341671  ...  0.305617              1                1

[227 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.40459}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.40459}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-19  1.11340       NaN  ...       NaN            0.0              0.0
1    2024-04-20  1.24710       NaN  ...       NaN            0.0              0.0
2    2024-04-21  1.11490       NaN  ...       NaN            0.0              0.0
3    2024-04-22  0.96250       NaN  ...       NaN            0.0              0.0
4    2024-04-23  0.84910       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
223  2024-11-28  0.40492  0.330105  ...  0.306001            1.0              1.0
224  2024-11-29  0.37737  0.334044  ...  0.305944            1.0              1.0
225  2024-11-30  0.37502  0.337459  ...  0.305850            1.0              1.0
226  2024-12-01  0.38800  0.341671  ...  0.305617            1.0              1.0
227  2024-12-02  0.40459       NaN  ...       NaN            NaN              NaN

[228 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Merlin_Chain_MERL
NECESSARRRY AAAA START
1
1
2024-10-19
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
294  Merlin Chain MERL  0.40459  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Zigcoin_ZIG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.14819}]
success ya
UWAGA
db_ZIGUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.006621       NaN  ...              0                0       NaN
1    2023-01-02  0.006541       NaN  ...              0                0       NaN
2    2023-01-03  0.006438       NaN  ...              0                0       NaN
3    2023-01-04  0.006501       NaN  ...              0                0       NaN
4    2023-01-05  0.006426       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.094470  0.094894  ...              1                1  0.090686
487  2024-05-02  0.094460  0.094857  ...              1                1  0.090819
488  2024-05-03  0.095890  0.094943  ...              1                1  0.090997
489  2024-05-04  0.095360  0.094978  ...              1                1  0.091150
490  2024-05-05  0.095360  0.095010  ...              1                1  0.091297

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.10024}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.09973}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.09985}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.09985}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.09962}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.09353}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.1019}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.09797}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.09796}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.09704}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.09486}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.09949}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.11188}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.11226}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.10563}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.10573}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.10373}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.10373}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.10511}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.10075}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.09533}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.09986}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.09609}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.09972}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.09764}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.09717}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.09724}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.10072}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.10095}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.09885}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.09411}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.09118}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.08738}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.07881}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.091}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.09094}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.09411}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.08932}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.08932}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.08068}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.08005}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.08258}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.0819}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.08072}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.07989}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.08026}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.07703}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.08486}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.08101}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.0847}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.08846}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.10919}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.12466}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.12296}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.13592}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.13971}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.15129}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.14716}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.14154}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.14413}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.15365}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.15012}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.1461}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.13771}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.14331}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.14128}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.15143}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.15221}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.15752}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.14819}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.14819}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Buggyra_Coin_Zero_BCZERO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1052}]
success ya
UWAGA
db_BCZEROUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BCZEROUSD': no such table: db_BCZEROUSD
trying
 inicjacja duplicates
duplicate info
[False]
Secret_SCRT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.71164}]
success ya
UWAGA
db_SCRTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.609517       NaN  ...              0                0       NaN
1    2023-01-02  0.614541       NaN  ...              0                0       NaN
2    2023-01-03  0.617633       NaN  ...              0                0       NaN
3    2023-01-04  0.647883       NaN  ...              0                0       NaN
4    2023-01-05  0.637397       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.580410  0.428528  ...              1                1  0.400501
556  2024-11-28  0.671540  0.448779  ...              1                1  0.410011
557  2024-11-29  0.670470  0.467253  ...              1                1  0.419150
558  2024-11-30  0.719440  0.488269  ...              1                1  0.429687
559  2024-12-01  0.758220  0.510765  ...              1                1  0.441214

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.71164}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.71164}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.609517       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.614541       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.617633       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.647883       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.637397       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.671540  0.448779  ...            1.0              1.0  0.410011
557  2024-11-29  0.670470  0.467253  ...            1.0              1.0  0.419150
558  2024-11-30  0.719440  0.488269  ...            1.0              1.0  0.429687
559  2024-12-01  0.758220  0.510765  ...            1.0              1.0  0.441214
560  2024-12-02  0.711640       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Secret_SCRT
NECESSARRRY AAAA START
1
1
2024-11-25
2024-11-22
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
297  Secret SCRT  0.71164  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Big_Time_BIGTIME
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1607}]
success ya
UWAGA
db_BIGTIMEUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-10-11  0.128795       NaN  ...              0                0       NaN
1    2023-10-12  0.263705       NaN  ...              0                0       NaN
2    2023-10-13  0.211683       NaN  ...              0                0       NaN
3    2023-10-14  0.232060       NaN  ...              0                0       NaN
4    2023-10-15  0.236969       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
273  2024-11-27  0.155780  0.143171  ...              0                0  0.161546
274  2024-11-28  0.168920  0.145317  ...              0                0  0.161805
275  2024-11-29  0.163900  0.146865  ...              0                0  0.161879
276  2024-11-30  0.168270  0.148649  ...              0                0  0.162103
277  2024-12-01  0.170880  0.150502  ...              0                0  0.162411

[278 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1607}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.1607}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-10-11  0.128795       NaN  ...            0.0              0.0       NaN
1    2023-10-12  0.263705       NaN  ...            0.0              0.0       NaN
2    2023-10-13  0.211683       NaN  ...            0.0              0.0       NaN
3    2023-10-14  0.232060       NaN  ...            0.0              0.0       NaN
4    2023-10-15  0.236969       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
274  2024-11-28  0.168920  0.145317  ...            0.0              0.0  0.161805
275  2024-11-29  0.163900  0.146865  ...            0.0              0.0  0.161879
276  2024-11-30  0.168270  0.148649  ...            0.0              0.0  0.162103
277  2024-12-01  0.170880  0.150502  ...            0.0              0.0  0.162411
278  2024-12-02  0.160700       NaN  ...            NaN              NaN       NaN

[279 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Big_Time_BIGTIME
NECESSARRRY AAAA START
0
0
2024-03-23
None
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name   Price  ...  middle_flip_date  long_flip_date
298  Big Time BIGTIME  0.1607  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
JOE_JOE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.55898}]
success ya
UWAGA
db_JOEUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.133808       NaN  ...              0                0       NaN
1    2023-01-02  0.137562       NaN  ...              0                0       NaN
2    2023-01-03  0.137338       NaN  ...              0                0       NaN
3    2023-01-04  0.143820       NaN  ...              0                0       NaN
4    2023-01-05  0.142706       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.460150  0.574125  ...              0                0  0.632796
487  2024-05-02  0.493280  0.567388  ...              0                0  0.627900
488  2024-05-03  0.519810  0.563424  ...              0                0  0.624108
489  2024-05-04  0.519560  0.559768  ...              0                0  0.620439
490  2024-05-05  0.519560  0.556418  ...              0                0  0.616900

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.47945}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.48563}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.47942}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.47942}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.45551}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.4201}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.47684}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.47166}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.50236}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.5003}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.47691}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.53205}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.51747}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.4935}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.46474}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.46083}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.46447}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.46447}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.499}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.49678}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.47965}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.47672}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.46592}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.46851}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.45941}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.46504}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.47026}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.48896}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.48055}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.46874}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.41539}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.40732}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.41194}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.37145}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.40733}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.3977}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.38885}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.37305}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.37305}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.3517}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.31185}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.32788}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.33663}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.33706}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.33369}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.32523}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.31597}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.33908}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.33394}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.34125}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.34281}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.3278}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.35043}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.35263}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.38489}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.39083}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.39084}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.37575}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.37996}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.41204}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.46061}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.45869}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.51291}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.50219}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.54901}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.54457}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.58934}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.56401}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.55181}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.55898}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.55898}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Nano_XNO
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.55955}]
success ya
UWAGA
db_XNOUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.639035       NaN  ...              0                0       NaN
1      2023-01-02  0.643508       NaN  ...              0                0       NaN
2      2023-01-03  0.640440       NaN  ...              0                0       NaN
3      2023-01-04  0.660591       NaN  ...              0                0       NaN
4      2023-01-05  0.717213       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.331700  1.033061  ...              1                1  0.946771
27963  2024-11-28  1.330000  1.057806  ...              1                1  0.960218
27964  2024-11-29  1.394300  1.085847  ...              1                1  0.975449
27965  2024-11-30  1.462500  1.117235  ...              1                1  0.992538
27966  2024-12-01  1.484100  1.147807  ...              1                1  1.009786

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.55955}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.55955}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.639035       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.643508       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.640440       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.660591       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.717213       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.330000  1.057806  ...            1.0              1.0  0.960218
27964  2024-11-29  1.394300  1.085847  ...            1.0              1.0  0.975449
27965  2024-11-30  1.462500  1.117235  ...            1.0              1.0  0.992538
27966  2024-12-01  1.484100  1.147807  ...            1.0              1.0  1.009786
27967  2024-12-02  1.559550       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Nano_XNO
NECESSARRRY AAAA START
1
1
2024-11-17
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
300  Nano XNO  1.55955  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Cetus_Protocol_CETUS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.33913}]
success ya
UWAGA
db_CETUSUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-05-10  0.12744       NaN  ...       NaN              0                0
1    2023-05-11  0.10493       NaN  ...       NaN              0                0
2    2023-05-12  0.12013       NaN  ...       NaN              0                0
3    2023-05-13  0.11480       NaN  ...       NaN              0                0
4    2023-05-14  0.11567       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
379  2024-11-27  0.35301  0.248637  ...  0.114941              1                1
380  2024-11-28  0.36269  0.258141  ...  0.116476              1                1
381  2024-11-29  0.36725  0.267233  ...  0.118045              1                1
382  2024-11-30  0.36796  0.275627  ...  0.119598              1                1
383  2024-12-01  0.37194  0.283653  ...  0.121154              1                1

[384 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.33913}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.33913}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-05-10  0.12744       NaN  ...       NaN            0.0              0.0
1    2023-05-11  0.10493       NaN  ...       NaN            0.0              0.0
2    2023-05-12  0.12013       NaN  ...       NaN            0.0              0.0
3    2023-05-13  0.11480       NaN  ...       NaN            0.0              0.0
4    2023-05-14  0.11567       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
380  2024-11-28  0.36269  0.258141  ...  0.116476            1.0              1.0
381  2024-11-29  0.36725  0.267233  ...  0.118045            1.0              1.0
382  2024-11-30  0.36796  0.275627  ...  0.119598            1.0              1.0
383  2024-12-01  0.37194  0.283653  ...  0.121154            1.0              1.0
384  2024-12-02  0.33913       NaN  ...       NaN            NaN              NaN

[385 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Cetus_Protocol_CETUS
NECESSARRRY AAAA START
1
1
2024-11-17
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                     Name    Price  ...  middle_flip_date  long_flip_date
301  Cetus Protocol CETUS  0.33913  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Centrifuge_CFG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.40425}]
success ya
UWAGA
db_CFGUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.144806       NaN  ...              0                0       NaN
1      2023-01-02  0.146789       NaN  ...              0                0       NaN
2      2023-01-03  0.145086       NaN  ...              0                0       NaN
3      2023-01-04  0.143563       NaN  ...              0                0       NaN
4      2023-01-05  0.148280       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.411000  0.363524  ...              0                1  0.348007
27963  2024-11-28  0.402200  0.366747  ...              0                1  0.349908
27964  2024-11-29  0.412200  0.370535  ...              0                1  0.352094
27965  2024-11-30  0.420900  0.374732  ...              0                1  0.354508
27966  2024-12-01  0.428000  0.379171  ...              1                1  0.357087

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.40425}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.40425}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.144806       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.146789       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.145086       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.143563       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.148280       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.402200  0.366747  ...            0.0              1.0  0.349908
27964  2024-11-29  0.412200  0.370535  ...            0.0              1.0  0.352094
27965  2024-11-30  0.420900  0.374732  ...            0.0              1.0  0.354508
27966  2024-12-01  0.428000  0.379171  ...            1.0              1.0  0.357087
27967  2024-12-02  0.404250       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Centrifuge_CFG
NECESSARRRY AAAA START
1
0
2024-11-21
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
302  Centrifuge CFG  0.40425  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Banana_Gun_BANANA
[{'Date': datetime.date(2024, 12, 2), 'Price': 59.0597}]
success ya
UWAGA
db_BANANAUSD
COINDBBB
            Date      Close  ...  Long_Trend_Up  Middle_Trend_Up
0     2023-01-01  13.695778  ...              0                0
1     2023-01-02  13.696869  ...              0                0
2     2023-01-03  13.696702  ...              0                0
3     2023-01-04  13.696748  ...              0                0
4     2023-01-05  13.695843  ...              0                0
...          ...        ...  ...            ...              ...
2032  2024-11-27  70.680000  ...              1                1
2033  2024-11-28  67.310000  ...              1                1
2034  2024-11-29  67.790000  ...              1                1
2035  2024-11-30  66.860000  ...              1                1
2036  2024-12-01  65.450000  ...              1                1

[2037 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 59.0597}, {'Date': datetime.date(2024, 12, 2), 'Price': 59.0597}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date      Close  ...  Long_Trend_Up  Middle_Trend_Up
0     2023-01-01  13.695778  ...            0.0              0.0
1     2023-01-02  13.696869  ...            0.0              0.0
2     2023-01-03  13.696702  ...            0.0              0.0
3     2023-01-04  13.696748  ...            0.0              0.0
4     2023-01-05  13.695843  ...            0.0              0.0
...          ...        ...  ...            ...              ...
2033  2024-11-28  67.310000  ...            1.0              1.0
2034  2024-11-29  67.790000  ...            1.0              1.0
2035  2024-11-30  66.860000  ...            1.0              1.0
2036  2024-12-01  65.450000  ...            1.0              1.0
2037  2024-12-02  59.059700  ...            NaN              NaN

[2038 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Banana_Gun_BANANA
NECESSARRRY AAAA START
1
1
2024-10-09
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
303  Banana Gun BANANA  59.0597  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Lisk_LSK
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.23752}]
success ya
UWAGA
db_LSKUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.715174       NaN  ...              0                0       NaN
1      2023-01-02  0.723898       NaN  ...              0                0       NaN
2      2023-01-03  0.713579       NaN  ...              0                0       NaN
3      2023-01-04  0.720448       NaN  ...              0                0       NaN
4      2023-01-05  0.727240       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
16286  2024-11-27  1.266100  1.021832  ...              1                1  0.931501
16287  2024-11-28  1.234200  1.039529  ...              1                1  0.942122
16288  2024-11-29  1.291900  1.060560  ...              1                1  0.954395
16289  2024-11-30  1.312900  1.081588  ...              1                1  0.966974
16290  2024-12-01  1.311600  1.100756  ...              1                1  0.979066

[16291 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.23752}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.23752}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.715174       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.723898       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.713579       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.720448       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.727240       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
16287  2024-11-28  1.234200  1.039529  ...            1.0              1.0  0.942122
16288  2024-11-29  1.291900  1.060560  ...            1.0              1.0  0.954395
16289  2024-11-30  1.312900  1.081588  ...            1.0              1.0  0.966974
16290  2024-12-01  1.311600  1.100756  ...            1.0              1.0  0.979066
16291  2024-12-02  1.237520       NaN  ...            NaN              NaN       NaN

[16292 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Lisk_LSK
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
304  Lisk LSK  1.23752  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
IOStoken_IOST
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00946}]
success ya
UWAGA
db_IOSTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.006920       NaN  ...              0                0       NaN
1    2023-01-02  0.007083       NaN  ...              0                0       NaN
2    2023-01-03  0.006998       NaN  ...              0                0       NaN
3    2023-01-04  0.007133       NaN  ...              0                0       NaN
4    2023-01-05  0.007139       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.007930  0.006982  ...              0                0  0.007581
557  2024-11-28  0.007900  0.007058  ...              0                0  0.007592
558  2024-11-29  0.008300  0.007162  ...              0                0  0.007617
559  2024-11-30  0.008310  0.007257  ...              0                0  0.007641
560  2024-12-01  0.009000  0.007403  ...              0                0  0.007689

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00946}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00946}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.006920       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.007083       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.006998       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.007133       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.007139       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.007900  0.007058  ...            0.0              0.0  0.007592
558  2024-11-29  0.008300  0.007162  ...            0.0              0.0  0.007617
559  2024-11-30  0.008310  0.007257  ...            0.0              0.0  0.007641
560  2024-12-01  0.009000  0.007403  ...            0.0              0.0  0.007689
561  2024-12-02  0.009460       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted IOStoken_IOST
NECESSARRRY AAAA START
0
1
2024-04-17
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
305  IOStoken IOST  0.00946  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Fartcoin_FARTCOIN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.20074}]
success ya
UWAGA
db_FARTCOINUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_FARTCOINUSD': no such table: db_FARTCOINUSD
trying
 inicjacja duplicates
duplicate info
[False]
ANyONe_Protocol_ANYONE
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.0819}]
success ya
UWAGA
db_ANYONEUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ANYONEUSD': no such table: db_ANYONEUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Tellor_TRB
[{'Date': datetime.date(2024, 12, 2), 'Price': 75.0109}]
success ya
UWAGA
db_TRBUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  12.140557  ...                0        NaN
1      2023-01-02  12.323094  ...                0        NaN
2      2023-01-03  12.183161  ...                0        NaN
3      2023-01-04  12.643253  ...                0        NaN
4      2023-01-05  12.622798  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  72.488000  ...                1  66.214307
27963  2024-11-28  72.423000  ...                1  66.432156
27964  2024-11-29  73.919000  ...                1  66.694852
27965  2024-11-30  78.389000  ...                1  67.105173
27966  2024-12-01  79.943000  ...                1  67.555623

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 75.0109}, {'Date': datetime.date(2024, 12, 2), 'Price': 75.0109}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  12.140557  ...              0.0        NaN
1      2023-01-02  12.323094  ...              0.0        NaN
2      2023-01-03  12.183161  ...              0.0        NaN
3      2023-01-04  12.643253  ...              0.0        NaN
4      2023-01-05  12.622798  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  72.423000  ...              1.0  66.432156
27964  2024-11-29  73.919000  ...              1.0  66.694852
27965  2024-11-30  78.389000  ...              1.0  67.105173
27966  2024-12-01  79.943000  ...              1.0  67.555623
27967  2024-12-02  75.010900  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Tellor_TRB
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
308  Tellor TRB  75.0109  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
TARS_AI_TAI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.36224}]
success ya
UWAGA
db_TAIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_TAIUSD': no such table: db_TAIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Nosana_NOS
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.06565}]
success ya
UWAGA
db_NOSUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_NOSUSD': no such table: db_NOSUSD
trying
 inicjacja duplicates
duplicate info
[False]
Status_SNT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04843}]
success ya
UWAGA
db_SNTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.018872       NaN  ...              0                0       NaN
1    2023-01-02  0.019068       NaN  ...              0                0       NaN
2    2023-01-03  0.019124       NaN  ...              0                0       NaN
3    2023-01-04  0.019373       NaN  ...              0                0       NaN
4    2023-01-05  0.019461       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.036230  0.040816  ...              0                0  0.042786
487  2024-05-02  0.038320  0.040608  ...              0                0  0.042629
488  2024-05-03  0.040010  0.040558  ...              0                0  0.042537
489  2024-05-04  0.040060  0.040516  ...              0                0  0.042450
490  2024-05-05  0.040060  0.040478  ...              0                0  0.042366

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.03861}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.03753}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.03742}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.03742}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.03707}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.0355}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.03666}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.03622}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.03749}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.03712}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.0362}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.03833}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.03877}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.0377}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.03683}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.03665}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.03696}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.03696}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.03791}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.0373}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.03664}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.03603}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.03542}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.03549}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.03542}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.0343}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.03494}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.03571}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.03559}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.03556}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.034}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.03392}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.03362}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.03177}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.03295}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.03153}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.03158}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.03007}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.03007}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.02681}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.0289}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.02665}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.02732}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.02711}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.02735}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.02694}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.02517}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.02664}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.02659}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.0269}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.02669}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.02629}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.02653}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.02551}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.03491}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.03497}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.03458}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.03524}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.03512}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.03743}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.04938}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.04702}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.04251}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.04041}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.04422}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.04243}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.04525}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.04545}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.04833}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.04843}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.04843}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
WAX_WAXP
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05416}]
success ya
UWAGA
db_WAXPUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.042127       NaN  ...              0                0       NaN
1    2023-01-02  0.042617       NaN  ...              0                0       NaN
2    2023-01-03  0.042496       NaN  ...              0                0       NaN
3    2023-01-04  0.043697       NaN  ...              0                0       NaN
4    2023-01-05  0.043624       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.060770  0.071405  ...              0                0  0.075682
487  2024-05-02  0.062990  0.070704  ...              0                0  0.075236
488  2024-05-03  0.065870  0.070301  ...              0                0  0.074908
489  2024-05-04  0.065900  0.069934  ...              0                0  0.074592
490  2024-05-05  0.065900  0.069598  ...              0                0  0.074287

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.06395}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.06206}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.06174}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.06174}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.06042}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.05975}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.06321}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.06324}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.06493}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.06441}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.06286}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.06729}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.06735}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.06604}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.06436}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.06467}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.06475}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.06475}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.06897}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.06874}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.06652}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.06573}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.06425}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.06484}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.06377}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.06398}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.06502}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.06634}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.06582}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.06542}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.05902}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.05687}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.05723}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.05235}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.05492}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.0526}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.05191}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.04911}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.04911}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.04171}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.03939}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.04066}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.04084}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.04067}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.04057}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.04026}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.03805}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.04062}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.03947}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.04016}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.04011}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.03945}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.03972}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.03977}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.04018}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.04305}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.04305}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.04183}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.04152}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.0424}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.04491}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.05217}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.05115}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.05213}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.05511}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.05375}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.05492}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.05467}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.05639}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.05416}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.05416}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
UPCX_UPC
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.89935}]
success ya
UWAGA
db_UPCUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_UPCUSD': no such table: db_UPCUSD
trying
 inicjacja duplicates
duplicate info
[False]
THENA_THE
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.44551}]
success ya
UWAGA
db_THEUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_THEUSD': no such table: db_THEUSD
trying
 inicjacja duplicates
duplicate info
[False]
Coin98_C98
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21284}]
success ya
UWAGA
db_C98USD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.159463       NaN  ...              0                0       NaN
1    2023-01-02  0.161173       NaN  ...              0                0       NaN
2    2023-01-03  0.161107       NaN  ...              0                0       NaN
3    2023-01-04  0.164543       NaN  ...              0                0       NaN
4    2023-01-05  0.162289       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.180140  0.174850  ...              0                0  0.207875
557  2024-11-28  0.182590  0.175495  ...              0                0  0.206988
558  2024-11-29  0.200850  0.177608  ...              0                0  0.206773
559  2024-11-30  0.206820  0.180042  ...              0                0  0.206774
560  2024-12-01  0.220520  0.183415  ...              0                0  0.207257

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21284}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.21284}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.159463       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.161173       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.161107       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.164543       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.162289       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.182590  0.175495  ...            0.0              0.0  0.206988
558  2024-11-29  0.200850  0.177608  ...            0.0              0.0  0.206773
559  2024-11-30  0.206820  0.180042  ...            0.0              0.0  0.206774
560  2024-12-01  0.220520  0.183415  ...            0.0              0.0  0.207257
561  2024-12-02  0.212840       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Coin98_C98
NECESSARRRY AAAA START
0
0
2024-04-17
2024-05-10
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
315  Coin98 C98  0.21284  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
XYO_XYO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01396}]
success ya
UWAGA
db_XYOUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.003110       NaN  ...              0                0       NaN
1    2023-01-02  0.003626       NaN  ...              0                0       NaN
2    2023-01-03  0.005541       NaN  ...              0                0       NaN
3    2023-01-04  0.007477       NaN  ...              0                0       NaN
4    2023-01-05  0.007300       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.009070  0.007644  ...              1                1  0.007572
556  2024-11-28  0.008950  0.007753  ...              1                1  0.007620
557  2024-11-29  0.008880  0.007847  ...              1                1  0.007664
558  2024-11-30  0.008960  0.007940  ...              1                1  0.007710
559  2024-12-01  0.008700  0.008003  ...              1                1  0.007744

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01396}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01396}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.003110       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.003626       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.005541       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.007477       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.007300       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.008950  0.007753  ...            1.0              1.0  0.007620
557  2024-11-29  0.008880  0.007847  ...            1.0              1.0  0.007664
558  2024-11-30  0.008960  0.007940  ...            1.0              1.0  0.007710
559  2024-12-01  0.008700  0.008003  ...            1.0              1.0  0.007744
560  2024-12-02  0.013960       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted XYO_XYO
NECESSARRRY AAAA START
1
1
2024-11-27
2024-11-19
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
316  XYO XYO  0.01396  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
API3_API3
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.16883}]
success ya
UWAGA
db_API3USD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.012795       NaN  ...              0                0       NaN
1      2023-01-02  1.044792       NaN  ...              0                0       NaN
2      2023-01-03  1.050040       NaN  ...              0                0       NaN
3      2023-01-04  1.078028       NaN  ...              0                0       NaN
4      2023-01-05  1.082438       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  2.066400  1.820120  ...              1                1  1.690399
27963  2024-11-28  2.018000  1.836610  ...              1                1  1.701894
27964  2024-11-29  2.098400  1.858426  ...              1                1  1.715806
27965  2024-11-30  2.312000  1.896224  ...              1                1  1.736725
27966  2024-12-01  2.230200  1.924055  ...              1                1  1.754040

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.16883}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.16883}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.012795       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.044792       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.050040       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.078028       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.082438       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  2.018000  1.836610  ...            1.0              1.0  1.701894
27964  2024-11-29  2.098400  1.858426  ...            1.0              1.0  1.715806
27965  2024-11-30  2.312000  1.896224  ...            1.0              1.0  1.736725
27966  2024-12-01  2.230200  1.924055  ...            1.0              1.0  1.754040
27967  2024-12-02  2.168830       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted API3_API3
NECESSARRRY AAAA START
1
1
2024-11-08
2024-11-22
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
317  API3 API3  2.16883  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Metars_Genesis_MRS
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.21746}]
success ya
UWAGA
db_MRSUSD
COINDBBB
                   Date     Close     EMA23     EMA82 SMA200
0   2022-08-08 00:00:00  1.906316       NaN       NaN   None
1   2022-08-15 00:00:00  1.508092       NaN       NaN   None
2   2022-08-22 00:00:00  1.488542       NaN       NaN   None
3   2022-08-29 00:00:00  1.212274       NaN       NaN   None
4   2022-09-05 00:00:00  1.117009       NaN       NaN   None
..                  ...       ...       ...       ...    ...
80  2024-02-19 00:00:00  1.551506  1.283589       NaN   None
81  2024-02-26 00:00:00  1.894703  1.334516  1.378894   None
82  2024-03-04 00:00:00  3.114501  1.482848  1.420716   None
83  2024-03-11 00:00:00  1.709261  1.501715  1.427669   None
84  2024-03-18 00:00:00  1.680857  1.516644  1.433770   None

[85 rows x 5 columns]
last_db_date_data
2024-03-18
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 1.54629}, {'Date': datetime.date(2024, 5, 10), 'Price': 1.51455}, {'Date': datetime.date(2024, 5, 11), 'Price': 1.51971}, {'Date': datetime.date(2024, 5, 12), 'Price': 1.51971}, {'Date': datetime.date(2024, 5, 13), 'Price': 1.5682}, {'Date': datetime.date(2024, 5, 14), 'Price': 1.5414}, {'Date': datetime.date(2024, 5, 15), 'Price': 1.65462}, {'Date': datetime.date(2024, 5, 16), 'Price': 1.63514}, {'Date': datetime.date(2024, 5, 17), 'Price': 1.67676}, {'Date': datetime.date(2024, 5, 18), 'Price': 1.67313}, {'Date': datetime.date(2024, 5, 19), 'Price': 1.6665}, {'Date': datetime.date(2024, 5, 20), 'Price': 1.7428}, {'Date': datetime.date(2024, 5, 21), 'Price': 1.75019}, {'Date': datetime.date(2024, 5, 22), 'Price': 1.73271}, {'Date': datetime.date(2024, 5, 23), 'Price': 1.69639}, {'Date': datetime.date(2024, 5, 24), 'Price': 1.72229}, {'Date': datetime.date(2024, 5, 25), 'Price': 1.72307}, {'Date': datetime.date(2024, 5, 26), 'Price': 1.72307}, {'Date': datetime.date(2024, 5, 27), 'Price': 1.7491}, {'Date': datetime.date(2024, 5, 28), 'Price': 1.7084}, {'Date': datetime.date(2024, 5, 29), 'Price': 1.68952}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.70828}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.67378}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.69264}, {'Date': datetime.date(2024, 6, 2), 'Price': 1.69553}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.72253}, {'Date': datetime.date(2024, 6, 4), 'Price': 1.76434}, {'Date': datetime.date(2024, 6, 5), 'Price': 1.78367}, {'Date': datetime.date(2024, 6, 6), 'Price': 1.7724}, {'Date': datetime.date(2024, 6, 7), 'Price': 1.76874}, {'Date': datetime.date(2024, 6, 8), 'Price': 1.73651}, {'Date': datetime.date(2024, 6, 9), 'Price': 1.74148}, {'Date': datetime.date(2024, 6, 10), 'Price': 1.7429}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.66297}, {'Date': datetime.date(2024, 6, 12), 'Price': 1.74067}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.68523}, {'Date': datetime.date(2024, 6, 14), 'Price': 1.67066}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.65153}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.65153}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.64951}, {'Date': datetime.date(2024, 6, 18), 'Price': 1.6145}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.62674}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.61793}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.59437}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.60271}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.61145}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.50156}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.55116}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.52004}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.53946}, {'Date': datetime.date(2024, 6, 28), 'Price': 1.51705}, {'Date': datetime.date(2024, 6, 29), 'Price': 1.52367}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.54882}, {'Date': datetime.date(2024, 7, 1), 'Price': 1.5909}, {'Date': datetime.date(2024, 11, 17), 'Price': 2.07371}, {'Date': datetime.date(2024, 11, 18), 'Price': 2.10363}, {'Date': datetime.date(2024, 11, 19), 'Price': 2.15107}, {'Date': datetime.date(2024, 11, 20), 'Price': 2.18094}, {'Date': datetime.date(2024, 11, 21), 'Price': 2.23007}, {'Date': datetime.date(2024, 11, 22), 'Price': 2.26625}, {'Date': datetime.date(2024, 11, 23), 'Price': 2.27061}, {'Date': datetime.date(2024, 11, 24), 'Price': 2.25913}, {'Date': datetime.date(2024, 11, 25), 'Price': 2.215}, {'Date': datetime.date(2024, 11, 26), 'Price': 2.11774}, {'Date': datetime.date(2024, 11, 27), 'Price': 2.21767}, {'Date': datetime.date(2024, 11, 28), 'Price': 2.18818}, {'Date': datetime.date(2024, 11, 29), 'Price': 2.24034}, {'Date': datetime.date(2024, 11, 30), 'Price': 2.23078}, {'Date': datetime.date(2024, 12, 1), 'Price': 2.2311}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.21746}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.21746}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
ArcBlock_ABT
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.88573}]
success ya
UWAGA
db_ABTUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.095998  ...              0                0
1    2023-01-02 00:00:00    0.103672  ...              0                0
2    2023-01-03 00:00:00    0.101044  ...              0                0
3    2023-01-04 00:00:00    0.106758  ...              0                0
4    2023-01-05 00:00:00    0.107130  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13   26.035000  ...              1                1
469           2024-04-14  224.892000  ...              1                1
470           2024-04-15  217.019000  ...              1                1
471           2024-04-16  208.433000  ...              1                1
472           2024-04-17    2.005200  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 3.17235}, {'Date': datetime.date(2024, 5, 10), 'Price': 3.07004}, {'Date': datetime.date(2024, 5, 11), 'Price': 3.03837}, {'Date': datetime.date(2024, 5, 12), 'Price': 3.03837}, {'Date': datetime.date(2024, 5, 13), 'Price': 3.22422}, {'Date': datetime.date(2024, 5, 14), 'Price': 3.89908}, {'Date': datetime.date(2024, 5, 15), 'Price': 3.78719}, {'Date': datetime.date(2024, 5, 16), 'Price': 4.09918}, {'Date': datetime.date(2024, 5, 17), 'Price': 4.16689}, {'Date': datetime.date(2024, 5, 18), 'Price': 4.04393}, {'Date': datetime.date(2024, 5, 19), 'Price': 4.09161}, {'Date': datetime.date(2024, 5, 20), 'Price': 4.43089}, {'Date': datetime.date(2024, 5, 21), 'Price': 4.6066}, {'Date': datetime.date(2024, 5, 22), 'Price': 4.49692}, {'Date': datetime.date(2024, 5, 23), 'Price': 4.09065}, {'Date': datetime.date(2024, 5, 24), 'Price': 3.99763}, {'Date': datetime.date(2024, 5, 25), 'Price': 4.30754}, {'Date': datetime.date(2024, 5, 26), 'Price': 4.30754}, {'Date': datetime.date(2024, 5, 27), 'Price': 4.25155}, {'Date': datetime.date(2024, 5, 28), 'Price': 3.99695}, {'Date': datetime.date(2024, 5, 29), 'Price': 4.07229}, {'Date': datetime.date(2024, 5, 30), 'Price': 4.07519}, {'Date': datetime.date(2024, 5, 31), 'Price': 3.94086}, {'Date': datetime.date(2024, 6, 1), 'Price': 3.95061}, {'Date': datetime.date(2024, 6, 2), 'Price': 3.86197}, {'Date': datetime.date(2024, 6, 3), 'Price': 3.6943}, {'Date': datetime.date(2024, 6, 4), 'Price': 3.80127}, {'Date': datetime.date(2024, 6, 5), 'Price': 3.98824}, {'Date': datetime.date(2024, 6, 6), 'Price': 3.91488}, {'Date': datetime.date(2024, 6, 7), 'Price': 3.76015}, {'Date': datetime.date(2024, 6, 8), 'Price': 3.67708}, {'Date': datetime.date(2024, 6, 9), 'Price': 3.49428}, {'Date': datetime.date(2024, 6, 10), 'Price': 3.57438}, {'Date': datetime.date(2024, 6, 11), 'Price': 3.06104}, {'Date': datetime.date(2024, 6, 12), 'Price': 3.17366}, {'Date': datetime.date(2024, 6, 13), 'Price': 3.10268}, {'Date': datetime.date(2024, 6, 14), 'Price': 2.57074}, {'Date': datetime.date(2024, 6, 15), 'Price': 3.19702}, {'Date': datetime.date(2024, 6, 16), 'Price': 3.19702}, {'Date': datetime.date(2024, 6, 17), 'Price': 3.0609}, {'Date': datetime.date(2024, 6, 18), 'Price': 2.66451}, {'Date': datetime.date(2024, 6, 19), 'Price': 2.79651}, {'Date': datetime.date(2024, 6, 20), 'Price': 2.69368}, {'Date': datetime.date(2024, 6, 21), 'Price': 2.69644}, {'Date': datetime.date(2024, 6, 22), 'Price': 2.74363}, {'Date': datetime.date(2024, 6, 23), 'Price': 2.85482}, {'Date': datetime.date(2024, 6, 24), 'Price': 2.55838}, {'Date': datetime.date(2024, 6, 25), 'Price': 2.75689}, {'Date': datetime.date(2024, 6, 26), 'Price': 2.5705}, {'Date': datetime.date(2024, 6, 27), 'Price': 2.5068}, {'Date': datetime.date(2024, 6, 28), 'Price': 2.40859}, {'Date': datetime.date(2024, 6, 29), 'Price': 2.47205}, {'Date': datetime.date(2024, 6, 30), 'Price': 2.29585}, {'Date': datetime.date(2024, 7, 1), 'Price': 2.35347}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.44041}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.38636}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.3872}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.33675}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.27729}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.38326}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.33603}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.37114}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.50924}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.4292}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.66206}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.96883}, {'Date': datetime.date(2024, 11, 29), 'Price': 1.86802}, {'Date': datetime.date(2024, 11, 30), 'Price': 1.86241}, {'Date': datetime.date(2024, 12, 1), 'Price': 2.04298}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.88573}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.88573}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Spectral_SPEC
[{'Date': datetime.date(2024, 12, 2), 'Price': 13.0931}]
success ya
UWAGA
db_SPECUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_SPECUSD': no such table: db_SPECUSD
trying
 inicjacja duplicates
duplicate info
[False]
BounceBit_BB
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.38604}]
success ya
UWAGA
db_BBUSD
COINDBBB
           Date   Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-05-13  0.4494       NaN  ...       NaN              0                0
1    2024-05-14  0.3716       NaN  ...       NaN              0                0
2    2024-05-15  0.4207       NaN  ...       NaN              0                0
3    2024-05-16  0.3291       NaN  ...       NaN              0                0
4    2024-05-17  0.3384       NaN  ...       NaN              0                0
..          ...     ...       ...  ...       ...            ...              ...
198  2024-11-27  0.3983  0.324135  ...       NaN              0                1
199  2024-11-28  0.4027  0.330682  ...  0.379136              1                1
200  2024-11-29  0.3986  0.336342  ...  0.378882              1                1
201  2024-11-30  0.3945  0.341188  ...  0.378996              1                1
202  2024-12-01  0.4064  0.346622  ...  0.378925              1                1

[203 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.38604}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.38604}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-05-13  0.44940       NaN  ...       NaN            0.0              0.0
1    2024-05-14  0.37160       NaN  ...       NaN            0.0              0.0
2    2024-05-15  0.42070       NaN  ...       NaN            0.0              0.0
3    2024-05-16  0.32910       NaN  ...       NaN            0.0              0.0
4    2024-05-17  0.33840       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
199  2024-11-28  0.40270  0.330682  ...  0.379136            1.0              1.0
200  2024-11-29  0.39860  0.336342  ...  0.378882            1.0              1.0
201  2024-11-30  0.39450  0.341188  ...  0.378996            1.0              1.0
202  2024-12-01  0.40640  0.346622  ...  0.378925            1.0              1.0
203  2024-12-02  0.38604       NaN  ...       NaN            NaN              NaN

[204 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted BounceBit_BB
NECESSARRRY AAAA START
1
1
2024-11-26
2024-11-28
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
321  BounceBit BB  0.38604  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Clearpool_CPOOL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.25699}]
success ya
UWAGA
db_CPOOLUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  0.032668       NaN  ...       NaN              0                0
1    2023-01-02  0.033441       NaN  ...       NaN              0                0
2    2023-01-03  0.033154       NaN  ...       NaN              0                0
3    2023-01-04  0.034403       NaN  ...       NaN              0                0
4    2023-01-05  0.034792       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
515  2024-11-27  0.250120  0.214862  ...  0.192773              1                1
516  2024-11-28  0.242410  0.217157  ...  0.194515              1                1
517  2024-11-29  0.234460  0.218599  ...  0.195917              1                1
518  2024-11-30  0.239120  0.220309  ...  0.197432              1                1
519  2024-12-01  0.249660  0.222755  ...  0.199265              1                1

[520 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.25699}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.25699}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  0.032668       NaN  ...       NaN            0.0              0.0
1    2023-01-02  0.033441       NaN  ...       NaN            0.0              0.0
2    2023-01-03  0.033154       NaN  ...       NaN            0.0              0.0
3    2023-01-04  0.034403       NaN  ...       NaN            0.0              0.0
4    2023-01-05  0.034792       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
516  2024-11-28  0.242410  0.217157  ...  0.194515            1.0              1.0
517  2024-11-29  0.234460  0.218599  ...  0.195917            1.0              1.0
518  2024-11-30  0.239120  0.220309  ...  0.197432            1.0              1.0
519  2024-12-01  0.249660  0.222755  ...  0.199265            1.0              1.0
520  2024-12-02  0.256990       NaN  ...       NaN            NaN              NaN

[521 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Clearpool_CPOOL
NECESSARRRY AAAA START
1
1
2024-11-18
2023-11-22
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
322  Clearpool CPOOL  0.25699  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Osaka_Protocol_OSAK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_OSAKUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_OSAKUSD': no such table: db_OSAKUSD
trying
 inicjacja duplicates
duplicate info
[False]
Balancer_BAL
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.95669}]
success ya
UWAGA
db_BALUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  5.219940       NaN  ...              0                0       NaN
1      2023-01-02  5.295704       NaN  ...              0                0       NaN
2      2023-01-03  5.316925       NaN  ...              0                0       NaN
3      2023-01-04  5.457643       NaN  ...              0                0       NaN
4      2023-01-05  5.383023       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  2.782000  2.317655  ...              1                1  2.164213
27963  2024-11-28  2.744000  2.353183  ...              1                1  2.184557
27964  2024-11-29  2.818000  2.391918  ...              1                1  2.206783
27965  2024-11-30  2.920000  2.435925  ...              1                1  2.231808
27966  2024-12-01  2.996000  2.482598  ...              1                1  2.258622

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.95669}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.95669}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  5.219940       NaN  ...            0.0              0.0       NaN
1      2023-01-02  5.295704       NaN  ...            0.0              0.0       NaN
2      2023-01-03  5.316925       NaN  ...            0.0              0.0       NaN
3      2023-01-04  5.457643       NaN  ...            0.0              0.0       NaN
4      2023-01-05  5.383023       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  2.744000  2.353183  ...            1.0              1.0  2.184557
27964  2024-11-29  2.818000  2.391918  ...            1.0              1.0  2.206783
27965  2024-11-30  2.920000  2.435925  ...            1.0              1.0  2.231808
27966  2024-12-01  2.996000  2.482598  ...            1.0              1.0  2.258622
27967  2024-12-02  2.956690       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Balancer_BAL
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
324  Balancer BAL  2.95669  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Taiko_TAIKO
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.19107}]
success ya
UWAGA
db_TAIKOUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_TAIKOUSD': no such table: db_TAIKOUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Node_AI_GPU
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.8785}]
success ya
UWAGA
db_GPUUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_GPUUSD': no such table: db_GPUUSD
trying
 inicjacja duplicates
duplicate info
[False]
Symbol_XYM
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02914}]
success ya
UWAGA
db_XYMUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.030574       NaN  ...              0                0       NaN
1    2023-01-02  0.031482       NaN  ...              0                0       NaN
2    2023-01-03  0.030707       NaN  ...              0                0       NaN
3    2023-01-04  0.030973       NaN  ...              0                0       NaN
4    2023-01-05  0.031180       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.025530  0.021630  ...              1                1  0.021323
557  2024-11-28  0.025790  0.021976  ...              1                1  0.021480
558  2024-11-29  0.027130  0.022406  ...              1                1  0.021678
559  2024-11-30  0.027740  0.022850  ...              1                1  0.021890
560  2024-12-01  0.028110  0.023289  ...              1                1  0.022109

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02914}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02914}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.030574       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.031482       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.030707       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.030973       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.031180       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.025790  0.021976  ...            1.0              1.0  0.021480
558  2024-11-29  0.027130  0.022406  ...            1.0              1.0  0.021678
559  2024-11-30  0.027740  0.022850  ...            1.0              1.0  0.021890
560  2024-12-01  0.028110  0.023289  ...            1.0              1.0  0.022109
561  2024-12-02  0.029140       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Symbol_XYM
NECESSARRRY AAAA START
1
1
2024-11-26
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
327  Symbol XYM  0.02914  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
BORA_BORA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.16113}]
success ya
UWAGA
db_BORAUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.105906       NaN  ...              0                0       NaN
1    2023-01-02  0.107720       NaN  ...              0                0       NaN
2    2023-01-03  0.108712       NaN  ...              0                0       NaN
3    2023-01-04  0.110328       NaN  ...              0                0       NaN
4    2023-01-05  0.111092       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.145530  0.171557  ...              0                0  0.181176
487  2024-05-02  0.151110  0.169853  ...              0                0  0.180121
488  2024-05-03  0.159870  0.169021  ...              0                0  0.179410
489  2024-05-04  0.159670  0.168242  ...              0                0  0.178717
490  2024-05-05  0.159670  0.167528  ...              0                0  0.178049

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.15055}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.14912}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.14976}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.14976}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.14747}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.14885}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.15484}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.15254}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.15404}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.15421}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.15656}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.15738}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.1575}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.15473}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.15215}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.15227}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.15202}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.15202}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.15156}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.15049}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.15002}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.14742}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.14745}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.14995}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.14992}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.13865}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.14086}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.142}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.14116}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.14759}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.1431}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.13962}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.13864}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.13052}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.13598}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.13095}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.13389}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.12622}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.12622}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.10846}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.10169}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.10565}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.1045}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.10531}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.10508}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.10632}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.10028}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.10682}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.1083}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.10819}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.10899}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.10656}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.10702}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.10667}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.11013}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.1154}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.12007}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.11733}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.11708}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.11524}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.11942}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.14145}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.14224}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.13518}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.15483}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.14937}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.14999}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.15064}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.15304}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.16113}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.16113}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Orca_ORCA
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.34597}]
success ya
UWAGA
db_ORCAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.428514       NaN  ...              0                0       NaN
1      2023-01-02  0.440150       NaN  ...              0                0       NaN
2      2023-01-03  0.499557       NaN  ...              0                0       NaN
3      2023-01-04  0.472863       NaN  ...              0                0       NaN
4      2023-01-05  0.457697       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
12954  2024-11-27  3.402800  3.287255  ...              1                1  2.923168
12955  2024-11-28  3.358400  3.293184  ...              1                1  2.938440
12956  2024-11-29  3.567300  3.316027  ...              1                1  2.960505
12957  2024-11-30  3.656100  3.344366  ...              1                1  2.984912
12958  2024-12-01  3.478700  3.355561  ...              1                1  3.002238

[12959 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.34597}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.34597}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.428514       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.440150       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.499557       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.472863       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.457697       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
12955  2024-11-28  3.358400  3.293184  ...            1.0              1.0  2.938440
12956  2024-11-29  3.567300  3.316027  ...            1.0              1.0  2.960505
12957  2024-11-30  3.656100  3.344366  ...            1.0              1.0  2.984912
12958  2024-12-01  3.478700  3.355561  ...            1.0              1.0  3.002238
12959  2024-12-02  3.345970       NaN  ...            NaN              NaN       NaN

[12960 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Orca_ORCA
NECESSARRRY AAAA START
1
1
2024-09-30
2024-10-20
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
329  Orca ORCA  3.34597  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Powerledger_POWR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.31334}]
success ya
UWAGA
db_POWRUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.123099       NaN  ...              0                0       NaN
1    2023-01-02  0.124293       NaN  ...              0                0       NaN
2    2023-01-03  0.123532       NaN  ...              0                0       NaN
3    2023-01-04  0.126070       NaN  ...              0                0       NaN
4    2023-01-05  0.125960       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.271300  0.312251  ...              0                0  0.339146
487  2024-05-02  0.285440  0.310017  ...              0                0  0.337262
488  2024-05-03  0.296920  0.308925  ...              0                0  0.335846
489  2024-05-04  0.296790  0.307914  ...              0                0  0.334476
490  2024-05-05  0.296790  0.306987  ...              0                0  0.333154

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.31276}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.30157}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.29787}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.29787}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.31224}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.29908}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.3126}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.31255}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.32119}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.31676}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.30643}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.32486}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.32001}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.31273}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.30588}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.30939}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.31174}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.31174}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.31661}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.31174}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.30858}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.30945}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.29893}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.30132}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.29686}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.29022}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.29451}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.30295}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.30259}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.29809}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.27536}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.27354}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.2753}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.25384}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.26591}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.25308}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.2481}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.24404}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.24404}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.21739}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.20253}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.21223}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.2117}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.21184}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.20857}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.21471}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.20467}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.21849}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.21372}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.21776}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.21415}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.2094}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.21448}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.2139}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.24443}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.26055}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.26801}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.25308}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.25381}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.25831}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.27341}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.2917}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.30484}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.30909}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.33598}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.31924}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.32421}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.32507}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.32513}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.31334}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.31334}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Sleepless_AI_AI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.69707}]
success ya
UWAGA
db_AIUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.025557       NaN  ...              0                0       NaN
1      2023-01-02  0.026037       NaN  ...              0                0       NaN
2      2023-01-03  0.027395       NaN  ...              0                0       NaN
3      2023-01-04  0.025493       NaN  ...              0                0       NaN
4      2023-01-05  0.026094       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
22194  2024-06-26  0.000393  0.000471  ...              0                0  0.000576
22195  2024-06-27  0.000389  0.000464  ...              0                0  0.000569
22196  2024-06-28  0.000386  0.000457  ...              0                0  0.000563
22197  2024-06-29  0.000387  0.000451  ...              0                0  0.000557
22198  2024-06-30  0.000386  0.000446  ...              0                0  0.000551

[22199 rows x 8 columns]
last_db_date_data
2024-06-30
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 7, 1), 'Price': 0.67321}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.47691}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.49865}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.48137}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.46775}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.4685}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.46134}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.50252}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.59146}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.58729}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.51406}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.6452}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.71021}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.71894}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.77657}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.76333}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.69707}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.69707}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Bitkub_Coin_KUB
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.51452}]
success ya
UWAGA
db_KUBUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_KUBUSD': no such table: db_KUBUSD
trying
 inicjacja duplicates
duplicate info
[False]
Celer_Network_CELR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02206}]
success ya
UWAGA
db_CELRUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.009591       NaN  ...              0                0       NaN
1    2023-01-02  0.009763       NaN  ...              0                0       NaN
2    2023-01-03  0.009830       NaN  ...              0                0       NaN
3    2023-01-04  0.010049       NaN  ...              0                0       NaN
4    2023-01-05  0.009851       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.020220  0.017373  ...              0                0  0.019759
557  2024-11-28  0.020350  0.017621  ...              0                0  0.019779
558  2024-11-29  0.020640  0.017873  ...              0                0  0.019809
559  2024-11-30  0.020530  0.018094  ...              0                0  0.019835
560  2024-12-01  0.023200  0.018520  ...              0                0  0.019953

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02206}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02206}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.009591       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.009763       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.009830       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.010049       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.009851       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.020350  0.017621  ...            0.0              0.0  0.019779
558  2024-11-29  0.020640  0.017873  ...            0.0              0.0  0.019809
559  2024-11-30  0.020530  0.018094  ...            0.0              0.0  0.019835
560  2024-12-01  0.023200  0.018520  ...            0.0              0.0  0.019953
561  2024-12-02  0.022060       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Celer_Network_CELR
NECESSARRRY AAAA START
0
0
2024-04-24
2024-06-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name    Price  ...  middle_flip_date  long_flip_date
333  Celer Network CELR  0.02206  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Cartesi_CTSI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.20353}]
success ya
UWAGA
db_CTSIUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.105083       NaN  ...              0                0       NaN
1    2023-01-02  0.106246       NaN  ...              0                0       NaN
2    2023-01-03  0.106997       NaN  ...              0                0       NaN
3    2023-01-04  0.107334       NaN  ...              0                0       NaN
4    2023-01-05  0.105727       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.194050  0.174270  ...              0                0  0.188796
557  2024-11-28  0.196620  0.176133  ...              0                0  0.189070
558  2024-11-29  0.198770  0.178019  ...              0                0  0.189411
559  2024-11-30  0.197250  0.179622  ...              0                0  0.189686
560  2024-12-01  0.213610  0.182454  ...              0                0  0.190525

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.20353}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.20353}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.105083       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.106246       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.106997       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.107334       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.105727       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.196620  0.176133  ...            0.0              0.0  0.189070
558  2024-11-29  0.198770  0.178019  ...            0.0              0.0  0.189411
559  2024-11-30  0.197250  0.179622  ...            0.0              0.0  0.189686
560  2024-12-01  0.213610  0.182454  ...            0.0              0.0  0.190525
561  2024-12-02  0.203530       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Cartesi_CTSI
NECESSARRRY AAAA START
0
0
2024-04-04
2024-06-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
334  Cartesi CTSI  0.20353  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Scroll_Token_SCR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.88703}]
success ya
UWAGA
db_SCRUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_SCRUSD': no such table: db_SCRUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Usual_USUAL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.33995}]
success ya
UWAGA
db_USUALUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_USUALUSD': no such table: db_USUALUSD
trying
 inicjacja duplicates
duplicate info
[False]
Ontology_Gas_ONG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.42133}]
success ya
UWAGA
db_ONGUSD
COINDBBB
                   Date     Close EMA23 EMA82 SMA200
0   2023-01-01 00:00:00  0.003094  None  None   None
1   2023-01-02 00:00:00  0.002991  None  None   None
2   2023-01-03 00:00:00  0.002920  None  None   None
3   2023-01-04 00:00:00  0.002935  None  None   None
4   2023-01-05 00:00:00  0.002892  None  None   None
5   2023-01-06 00:00:00  0.002876  None  None   None
6   2023-01-07 00:00:00  0.002907  None  None   None
7   2023-01-08 00:00:00  0.002923  None  None   None
8   2023-01-09 00:00:00  0.002995  None  None   None
9   2023-01-10 00:00:00  0.003059  None  None   None
10  2023-01-11 00:00:00  0.003033  None  None   None
last_db_date_data
2023-01-11
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.55306}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.52884}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.53919}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.53919}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.50176}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.48154}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.51096}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.51561}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.51744}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.51191}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.48744}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.51427}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.49859}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.49144}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.47331}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.47793}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.47757}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.47757}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.47815}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.46522}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.44904}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.44298}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.42865}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.43123}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.4224}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.42194}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.42882}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.43594}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.42253}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.42594}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.3844}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.36947}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.38332}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.36922}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.40119}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.40681}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.36969}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.3786}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.3786}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.3292}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.2854}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.29752}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.34111}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.35932}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.35416}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.36151}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.34984}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.3607}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.34937}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.36741}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.36145}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.35752}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.36292}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.3612}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.33874}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.34909}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.35746}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.34741}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.34726}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.35172}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.36826}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.39481}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.40007}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.38962}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.41985}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.42711}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.43681}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.45195}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.43404}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.42133}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.42133}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Zentry_ZENT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02676}]
success ya
UWAGA
db_ZENTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ZENTUSD': no such table: db_ZENTUSD
trying
 inicjacja duplicates
duplicate info
[False]
Gomining_Gomining
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.40411}]
success ya
UWAGA
db_GominingUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_GominingUSD': no such table: db_GominingUSD
trying
 inicjacja duplicates
duplicate info
[False]
IQ_IQ
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00841}]
success ya
UWAGA
db_IQUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.004385       NaN  ...              0                0       NaN
1    2023-01-02  0.004432       NaN  ...              0                0       NaN
2    2023-01-03  0.004359       NaN  ...              0                0       NaN
3    2023-01-04  0.004431       NaN  ...              0                0       NaN
4    2023-01-05  0.004401       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.008240  0.009870  ...              1                0  0.010512
487  2024-05-02  0.008760  0.009778  ...              1                0  0.010451
488  2024-05-03  0.009490  0.009754  ...              1                0  0.010417
489  2024-05-04  0.009450  0.009728  ...              1                0  0.010383
490  2024-05-05  0.009450  0.009705  ...              1                0  0.010350

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.00962}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.00975}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.0096}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.0096}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.00946}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.0093}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.00997}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.00982}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.01011}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.01073}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.01041}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.01095}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.01076}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.01055}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.01018}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.01007}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.0101}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.0101}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.00997}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.00959}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.00977}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.00938}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.00924}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.00932}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.00917}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.00867}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.00881}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.00929}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.00928}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.00919}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.00871}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.00852}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.00836}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.00795}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.00844}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.00797}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.00782}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.00766}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.00766}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.00642}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.00584}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.00614}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.0062}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.00618}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.00619}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.00632}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.00587}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.00632}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.00621}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.00629}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.0061}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.00598}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.00597}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.0061}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.00708}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00746}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.0076}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00737}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00728}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00727}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.00746}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.00794}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.00823}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.00832}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.0091}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.00893}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.00907}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.00909}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.0091}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00841}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00841}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Solana_Name_Service_FIDA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.32184}]
success ya
UWAGA
db_FIDAUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  0.15530       NaN  ...       NaN              0                0
1    2023-10-15  0.15160       NaN  ...       NaN              0                0
2    2023-10-16  0.15700       NaN  ...       NaN              0                0
3    2023-10-17  0.15350       NaN  ...       NaN              0                0
4    2023-10-18  0.14930       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
410  2024-11-27  0.24956  0.229190  ...  0.261481              0                0
411  2024-11-28  0.28271  0.233650  ...  0.261456              1                0
412  2024-11-29  0.28638  0.238044  ...  0.261473              1                0
413  2024-11-30  0.28321  0.241808  ...  0.261504              1                1
414  2024-12-01  0.37012  0.252500  ...  0.261866              1                1

[415 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.32184}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.32184}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  0.15530       NaN  ...       NaN            0.0              0.0
1    2023-10-15  0.15160       NaN  ...       NaN            0.0              0.0
2    2023-10-16  0.15700       NaN  ...       NaN            0.0              0.0
3    2023-10-17  0.15350       NaN  ...       NaN            0.0              0.0
4    2023-10-18  0.14930       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
411  2024-11-28  0.28271  0.233650  ...  0.261456            1.0              0.0
412  2024-11-29  0.28638  0.238044  ...  0.261473            1.0              0.0
413  2024-11-30  0.28321  0.241808  ...  0.261504            1.0              1.0
414  2024-12-01  0.37012  0.252500  ...  0.261866            1.0              1.0
415  2024-12-02  0.32184       NaN  ...       NaN            NaN              NaN

[416 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Solana_Name_Service_FIDA
NECESSARRRY AAAA START
1
1
2024-11-30
2024-11-28
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                         Name    Price  ...  middle_flip_date  long_flip_date
341  Solana Name Service FIDA  0.32184  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Smooth_Love_Potion_SLP
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00404}]
success ya
UWAGA
db_SLPUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.002033       NaN  ...              0                0       NaN
1    2023-01-02  0.002044       NaN  ...              0                0       NaN
2    2023-01-03  0.002035       NaN  ...              0                0       NaN
3    2023-01-04  0.002067       NaN  ...              0                0       NaN
4    2023-01-05  0.002074       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.003660  0.003408  ...              0                0  0.003607
557  2024-11-28  0.003800  0.003441  ...              0                0  0.003614
558  2024-11-29  0.003930  0.003481  ...              0                0  0.003625
559  2024-11-30  0.003970  0.003522  ...              0                0  0.003637
560  2024-12-01  0.004140  0.003574  ...              1                0  0.003655

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00404}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00404}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.002033       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.002044       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.002035       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.002067       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.002074       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.003800  0.003441  ...            0.0              0.0  0.003614
558  2024-11-29  0.003930  0.003481  ...            0.0              0.0  0.003625
559  2024-11-30  0.003970  0.003522  ...            0.0              0.0  0.003637
560  2024-12-01  0.004140  0.003574  ...            1.0              0.0  0.003655
561  2024-12-02  0.004040       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Smooth_Love_Potion_SLP
NECESSARRRY AAAA START
0
0
2024-04-16
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                       Name    Price  ...  middle_flip_date  long_flip_date
342  Smooth Love Potion SLP  0.00404  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ergo_ERG
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.11309}]
success ya
UWAGA
db_ERGUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.175041       NaN  ...              0                0       NaN
1      2023-01-02  1.197015       NaN  ...              0                0       NaN
2      2023-01-03  1.188397       NaN  ...              0                0       NaN
3      2023-01-04  1.188929       NaN  ...              0                0       NaN
4      2023-01-05  1.187016       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27560  2024-11-27  1.811000  1.373821  ...              1                1  1.085286
27561  2024-11-28  1.868200  1.415019  ...              1                1  1.112757
27562  2024-11-29  1.830000  1.449601  ...              1                1  1.137923
27563  2024-11-30  1.907500  1.487759  ...              1                1  1.164926
27564  2024-12-01  1.893500  1.521571  ...              1                1  1.190490

[27565 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.11309}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.11309}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.175041       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.197015       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.188397       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.188929       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.187016       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27561  2024-11-28  1.868200  1.415019  ...            1.0              1.0  1.112757
27562  2024-11-29  1.830000  1.449601  ...            1.0              1.0  1.137923
27563  2024-11-30  1.907500  1.487759  ...            1.0              1.0  1.164926
27564  2024-12-01  1.893500  1.521571  ...            1.0              1.0  1.190490
27565  2024-12-02  2.113090       NaN  ...            NaN              NaN       NaN

[27566 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Ergo_ERG
NECESSARRRY AAAA START
1
1
2024-11-09
2024-11-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
343  Ergo ERG  2.11309  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Venus_XVS
[{'Date': datetime.date(2024, 12, 2), 'Price': 10.0534}]
success ya
UWAGA
db_XVSUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    3.866213  ...              0                0
1    2023-01-02 00:00:00    3.975562  ...              0                0
2    2023-01-03 00:00:00    3.970946  ...              0                0
3    2023-01-04 00:00:00    4.025262  ...              0                0
4    2023-01-05 00:00:00    4.149458  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  119.721000  ...              1                1
469           2024-04-14  946.864000  ...              1                1
470           2024-04-15  938.703000  ...              1                1
471           2024-04-16  960.172000  ...              1                1
472           2024-04-17    9.272200  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 9.71336}, {'Date': datetime.date(2024, 5, 10), 'Price': 9.40771}, {'Date': datetime.date(2024, 5, 11), 'Price': 9.37916}, {'Date': datetime.date(2024, 5, 12), 'Price': 9.37916}, {'Date': datetime.date(2024, 5, 13), 'Price': 9.05553}, {'Date': datetime.date(2024, 5, 14), 'Price': 9.01998}, {'Date': datetime.date(2024, 5, 15), 'Price': 9.40975}, {'Date': datetime.date(2024, 5, 16), 'Price': 9.38439}, {'Date': datetime.date(2024, 5, 17), 'Price': 9.44641}, {'Date': datetime.date(2024, 5, 18), 'Price': 9.36595}, {'Date': datetime.date(2024, 5, 19), 'Price': 9.10895}, {'Date': datetime.date(2024, 5, 20), 'Price': 9.79649}, {'Date': datetime.date(2024, 5, 21), 'Price': 9.90559}, {'Date': datetime.date(2024, 5, 22), 'Price': 9.69053}, {'Date': datetime.date(2024, 5, 23), 'Price': 9.47663}, {'Date': datetime.date(2024, 5, 24), 'Price': 9.47894}, {'Date': datetime.date(2024, 5, 25), 'Price': 9.68258}, {'Date': datetime.date(2024, 5, 26), 'Price': 9.68258}, {'Date': datetime.date(2024, 5, 27), 'Price': 10.2778}, {'Date': datetime.date(2024, 5, 28), 'Price': 10.3031}, {'Date': datetime.date(2024, 5, 29), 'Price': 10.1311}, {'Date': datetime.date(2024, 5, 30), 'Price': 10.0596}, {'Date': datetime.date(2024, 5, 31), 'Price': 10.0721}, {'Date': datetime.date(2024, 6, 1), 'Price': 10.1427}, {'Date': datetime.date(2024, 6, 2), 'Price': 9.68722}, {'Date': datetime.date(2024, 6, 3), 'Price': 10.1318}, {'Date': datetime.date(2024, 6, 4), 'Price': 10.4748}, {'Date': datetime.date(2024, 6, 5), 'Price': 11.4345}, {'Date': datetime.date(2024, 6, 6), 'Price': 11.3878}, {'Date': datetime.date(2024, 6, 7), 'Price': 11.2506}, {'Date': datetime.date(2024, 6, 8), 'Price': 10.946}, {'Date': datetime.date(2024, 6, 9), 'Price': 10.0923}, {'Date': datetime.date(2024, 6, 10), 'Price': 9.65419}, {'Date': datetime.date(2024, 6, 11), 'Price': 8.97059}, {'Date': datetime.date(2024, 6, 12), 'Price': 9.10142}, {'Date': datetime.date(2024, 6, 13), 'Price': 8.49298}, {'Date': datetime.date(2024, 6, 14), 'Price': 8.4044}, {'Date': datetime.date(2024, 6, 15), 'Price': 7.84609}, {'Date': datetime.date(2024, 6, 16), 'Price': 7.84609}, {'Date': datetime.date(2024, 6, 17), 'Price': 7.45993}, {'Date': datetime.date(2024, 6, 18), 'Price': 6.67867}, {'Date': datetime.date(2024, 6, 19), 'Price': 6.86891}, {'Date': datetime.date(2024, 6, 20), 'Price': 6.91286}, {'Date': datetime.date(2024, 6, 21), 'Price': 6.74322}, {'Date': datetime.date(2024, 6, 22), 'Price': 6.48402}, {'Date': datetime.date(2024, 6, 23), 'Price': 6.40125}, {'Date': datetime.date(2024, 6, 24), 'Price': 6.06624}, {'Date': datetime.date(2024, 6, 25), 'Price': 6.38513}, {'Date': datetime.date(2024, 6, 26), 'Price': 6.13576}, {'Date': datetime.date(2024, 6, 27), 'Price': 6.22569}, {'Date': datetime.date(2024, 6, 28), 'Price': 6.06949}, {'Date': datetime.date(2024, 6, 29), 'Price': 5.87608}, {'Date': datetime.date(2024, 6, 30), 'Price': 6.11484}, {'Date': datetime.date(2024, 7, 1), 'Price': 6.21883}, {'Date': datetime.date(2024, 11, 17), 'Price': 7.71751}, {'Date': datetime.date(2024, 11, 18), 'Price': 7.94963}, {'Date': datetime.date(2024, 11, 19), 'Price': 7.90191}, {'Date': datetime.date(2024, 11, 20), 'Price': 7.678}, {'Date': datetime.date(2024, 11, 21), 'Price': 7.72063}, {'Date': datetime.date(2024, 11, 22), 'Price': 7.69267}, {'Date': datetime.date(2024, 11, 23), 'Price': 7.98138}, {'Date': datetime.date(2024, 11, 24), 'Price': 8.73785}, {'Date': datetime.date(2024, 11, 25), 'Price': 9.09522}, {'Date': datetime.date(2024, 11, 26), 'Price': 8.73598}, {'Date': datetime.date(2024, 11, 27), 'Price': 9.95221}, {'Date': datetime.date(2024, 11, 28), 'Price': 9.33178}, {'Date': datetime.date(2024, 11, 29), 'Price': 9.75136}, {'Date': datetime.date(2024, 11, 30), 'Price': 9.71224}, {'Date': datetime.date(2024, 12, 1), 'Price': 9.93049}, {'Date': datetime.date(2024, 12, 2), 'Price': 10.0534}, {'Date': datetime.date(2024, 12, 2), 'Price': 10.0534}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Aleph_Zero_AZERO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.61067}]
success ya
UWAGA
db_AZEROUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.858797       NaN  ...              0                0       NaN
1      2023-01-02  0.870046       NaN  ...              0                0       NaN
2      2023-01-03  0.849485       NaN  ...              0                0       NaN
3      2023-01-04  0.854209       NaN  ...              0                0       NaN
4      2023-01-05  0.841603       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.467500  0.356300  ...              0                0  0.361560
27963  2024-11-28  0.553500  0.372734  ...              1                1  0.368295
27964  2024-11-29  0.513500  0.384464  ...              1                1  0.373390
27965  2024-11-30  0.697600  0.410559  ...              1                1  0.384766
27966  2024-12-01  0.613100  0.427437  ...              1                1  0.392778

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.61067}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.61067}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.858797       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.870046       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.849485       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.854209       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.841603       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.553500  0.372734  ...            1.0              1.0  0.368295
27964  2024-11-29  0.513500  0.384464  ...            1.0              1.0  0.373390
27965  2024-11-30  0.697600  0.410559  ...            1.0              1.0  0.384766
27966  2024-12-01  0.613100  0.427437  ...            1.0              1.0  0.392778
27967  2024-12-02  0.610670       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Aleph_Zero_AZERO
NECESSARRRY AAAA START
1
1
2024-11-28
2024-11-28
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name    Price  ...  middle_flip_date  long_flip_date
345  Aleph Zero AZERO  0.61067  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Alephium_ALPH
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.76727}]
success ya
UWAGA
db_ALPHUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.056513  ...              0                0
1    2023-01-02 00:00:00    0.062836  ...              0                0
2    2023-01-03 00:00:00    0.058206  ...              0                0
3    2023-01-04 00:00:00    0.059996  ...              0                0
4    2023-01-05 00:00:00    0.056863  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  276.689000  ...              1                1
469           2024-04-14  280.608000  ...              1                1
470           2024-04-15  279.512000  ...              1                1
471           2024-04-16  276.835000  ...              1                1
472           2024-04-17    2.623890  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 2.02904}, {'Date': datetime.date(2024, 5, 10), 'Price': 2.04679}, {'Date': datetime.date(2024, 5, 11), 'Price': 1.98864}, {'Date': datetime.date(2024, 5, 12), 'Price': 1.98864}, {'Date': datetime.date(2024, 5, 13), 'Price': 1.83914}, {'Date': datetime.date(2024, 5, 14), 'Price': 1.76141}, {'Date': datetime.date(2024, 5, 15), 'Price': 1.94006}, {'Date': datetime.date(2024, 5, 16), 'Price': 1.70558}, {'Date': datetime.date(2024, 5, 17), 'Price': 1.89125}, {'Date': datetime.date(2024, 5, 18), 'Price': 1.97169}, {'Date': datetime.date(2024, 5, 19), 'Price': 1.97681}, {'Date': datetime.date(2024, 5, 20), 'Price': 1.93161}, {'Date': datetime.date(2024, 5, 21), 'Price': 1.97054}, {'Date': datetime.date(2024, 5, 22), 'Price': 1.76471}, {'Date': datetime.date(2024, 5, 23), 'Price': 1.73719}, {'Date': datetime.date(2024, 5, 24), 'Price': 1.7559}, {'Date': datetime.date(2024, 5, 25), 'Price': 1.77476}, {'Date': datetime.date(2024, 5, 26), 'Price': 1.77476}, {'Date': datetime.date(2024, 5, 27), 'Price': 1.68801}, {'Date': datetime.date(2024, 5, 28), 'Price': 1.65045}, {'Date': datetime.date(2024, 5, 29), 'Price': 1.60329}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.61789}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.58933}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.53722}, {'Date': datetime.date(2024, 6, 2), 'Price': 1.52286}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.5778}, {'Date': datetime.date(2024, 6, 4), 'Price': 1.88577}, {'Date': datetime.date(2024, 6, 5), 'Price': 2.06897}, {'Date': datetime.date(2024, 6, 6), 'Price': 2.0982}, {'Date': datetime.date(2024, 6, 7), 'Price': 2.07215}, {'Date': datetime.date(2024, 6, 8), 'Price': 1.93554}, {'Date': datetime.date(2024, 6, 9), 'Price': 1.86875}, {'Date': datetime.date(2024, 6, 10), 'Price': 1.93619}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.81138}, {'Date': datetime.date(2024, 6, 12), 'Price': 1.9223}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.84011}, {'Date': datetime.date(2024, 6, 14), 'Price': 1.71008}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.6929}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.6929}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.68211}, {'Date': datetime.date(2024, 6, 18), 'Price': 1.5381}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.58452}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.62247}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.53279}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.52108}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.48502}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.33819}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.43042}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.31854}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.34056}, {'Date': datetime.date(2024, 6, 28), 'Price': 1.29209}, {'Date': datetime.date(2024, 6, 29), 'Price': 1.2814}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.27709}, {'Date': datetime.date(2024, 7, 1), 'Price': 1.33694}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.21519}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.14428}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.38393}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.36927}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.52964}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.45117}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.502}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.48827}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.58564}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.47301}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.43914}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.51892}, {'Date': datetime.date(2024, 11, 29), 'Price': 1.62799}, {'Date': datetime.date(2024, 11, 30), 'Price': 1.67226}, {'Date': datetime.date(2024, 12, 1), 'Price': 1.80435}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.76727}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.76727}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
iExec_RLC_RLC
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.2469}]
success ya
UWAGA
db_RLCUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.171033       NaN  ...              0                0       NaN
1      2023-01-02  1.169611       NaN  ...              0                0       NaN
2      2023-01-03  1.176189       NaN  ...              0                0       NaN
3      2023-01-04  1.186050       NaN  ...              0                0       NaN
4      2023-01-05  1.158011       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  2.248600  1.849052  ...              1                1  1.715156
27963  2024-11-28  2.324300  1.888656  ...              1                1  1.736530
27964  2024-11-29  2.364400  1.928302  ...              1                1  1.758560
27965  2024-11-30  2.421700  1.969418  ...              1                1  1.781828
27966  2024-12-01  2.361200  2.002067  ...              1                1  1.802157

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.2469}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.2469}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.171033       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.169611       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.176189       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.186050       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.158011       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  2.324300  1.888656  ...            1.0              1.0  1.736530
27964  2024-11-29  2.364400  1.928302  ...            1.0              1.0  1.758560
27965  2024-11-30  2.421700  1.969418  ...            1.0              1.0  1.781828
27966  2024-12-01  2.361200  2.002067  ...            1.0              1.0  1.802157
27967  2024-12-02  2.246900       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted iExec_RLC_RLC
NECESSARRRY AAAA START
1
1
2024-11-09
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name   Price  ...  middle_flip_date  long_flip_date
347  iExec RLC RLC  2.2469  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Civic_CVC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.16205}]
success ya
UWAGA
db_CVCUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.078214       NaN  ...              0                0       NaN
1    2023-01-02  0.081072       NaN  ...              0                0       NaN
2    2023-01-03  0.079286       NaN  ...              0                0       NaN
3    2023-01-04  0.079340       NaN  ...              0                0       NaN
4    2023-01-05  0.078082       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
510  2024-11-27  0.169430  0.150181  ...              1                0  0.154765
511  2024-11-28  0.167930  0.151660  ...              1                0  0.155227
512  2024-11-29  0.169210  0.153123  ...              1                0  0.155718
513  2024-11-30  0.168660  0.154417  ...              1                0  0.156172
514  2024-12-01  0.170260  0.155738  ...              1                0  0.156666

[515 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.16205}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.16205}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.078214       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.081072       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.079286       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.079340       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.078082       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
511  2024-11-28  0.167930  0.151660  ...            1.0              0.0  0.155227
512  2024-11-29  0.169210  0.153123  ...            1.0              0.0  0.155718
513  2024-11-30  0.168660  0.154417  ...            1.0              0.0  0.156172
514  2024-12-01  0.170260  0.155738  ...            1.0              0.0  0.156666
515  2024-12-02  0.162050       NaN  ...            NaN              NaN       NaN

[516 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Civic_CVC
NECESSARRRY AAAA START
0
1
2024-11-09
2024-11-15
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
348  Civic CVC  0.16205  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Portal_PORTAL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.43164}]
success ya
UWAGA
db_PORTALUSD
COINDBBB
            Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0     2024-02-29  2.384996       NaN  ...             0                0       NaN
1     2024-03-01  2.272652       NaN  ...             0                0       NaN
2     2024-03-02  2.160529       NaN  ...             0                0       NaN
3     2024-03-03  2.372827       NaN  ...             0                0       NaN
4     2024-03-04  2.157849       NaN  ...             0                0       NaN
...          ...       ...       ...  ...           ...              ...       ...
9266  2024-11-27  0.399400  0.330376  ...             0                1  0.310952
9267  2024-11-28  0.404000  0.336511  ...             0                1  0.314217
9268  2024-11-29  0.417200  0.343235  ...             1                1  0.317830
9269  2024-11-30  0.428100  0.350307  ...             1                1  0.321699
9270  2024-12-01  0.444700  0.358173  ...             1                1  0.326015

[9271 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.43164}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.43164}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0     2024-02-29  2.384996       NaN  ...           0.0              0.0       NaN
1     2024-03-01  2.272652       NaN  ...           0.0              0.0       NaN
2     2024-03-02  2.160529       NaN  ...           0.0              0.0       NaN
3     2024-03-03  2.372827       NaN  ...           0.0              0.0       NaN
4     2024-03-04  2.157849       NaN  ...           0.0              0.0       NaN
...          ...       ...       ...  ...           ...              ...       ...
9267  2024-11-28  0.404000  0.336511  ...           0.0              1.0  0.314217
9268  2024-11-29  0.417200  0.343235  ...           1.0              1.0  0.317830
9269  2024-11-30  0.428100  0.350307  ...           1.0              1.0  0.321699
9270  2024-12-01  0.444700  0.358173  ...           1.0              1.0  0.326015
9271  2024-12-02  0.431640       NaN  ...           NaN              NaN       NaN

[9272 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Portal_PORTAL
NECESSARRRY AAAA START
1
1
2024-11-16
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
349  Portal PORTAL  0.43164  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Bitcoin_Wizards_WZRD
[{'Date': datetime.date(2024, 12, 2), 'Price': 7.70895}]
success ya
UWAGA
db_WZRDUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_WZRDUSD': no such table: db_WZRDUSD
trying
 inicjacja duplicates
duplicate info
[False]
Verge_XVG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00979}]
success ya
UWAGA
db_XVGUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.002688       NaN  ...              0                0       NaN
1    2023-01-02  0.002739       NaN  ...              0                0       NaN
2    2023-01-03  0.002694       NaN  ...              0                0       NaN
3    2023-01-04  0.002717       NaN  ...              0                0       NaN
4    2023-01-05  0.002685       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.004670  0.005998  ...              1                0  0.006201
487  2024-05-02  0.004920  0.005908  ...              1                0  0.006156
488  2024-05-03  0.005210  0.005850  ...              1                0  0.006123
489  2024-05-04  0.005210  0.005797  ...              1                0  0.006091
490  2024-05-05  0.005210  0.005748  ...              1                0  0.006060

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
/home/entukio/projects/scrapper_crypto_top/venv/lib/python3.11/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log10
  result = getattr(ufunc, method)(*inputs, **kwargs)
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.00574}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.00567}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.00567}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.00562}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.00557}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.00581}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.00593}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.00602}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.00581}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.00561}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.00606}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.00601}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.00587}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.00559}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.0056}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.00566}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.00566}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.00592}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.00623}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.00584}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.00575}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.00595}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.00586}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.00588}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.00581}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.00587}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.00602}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.00593}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.00585}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.00556}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.00548}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.0055}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.00498}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.00529}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.00509}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.00498}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.0049}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.0049}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.00462}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.00399}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.0042}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.00419}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.00418}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.00415}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.00425}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.00413}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.00429}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.00417}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.00424}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.00419}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.00407}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.00415}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.00425}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.00599}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00709}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.00649}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00621}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00622}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00636}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.0068}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.00744}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.00688}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.00623}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.00695}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.00667}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.00675}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.00673}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.0071}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00979}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00979}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Autonolas_OLAS
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.27444}]
success ya
UWAGA
db_OLASUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_OLASUSD': no such table: db_OLASUSD
trying
 inicjacja duplicates
duplicate info
[False]
Coq_Inu_COQ
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_COQUSD
COINDBBB
             Date         Close  ...  Middle_Trend_Up     EMA56
0      2023-12-11  0.000000e+00  ...                0       NaN
1      2023-12-12  0.000000e+00  ...                0       NaN
2      2023-12-13  0.000000e+00  ...                0       NaN
3      2023-12-14  0.000000e+00  ...                0       NaN
4      2023-12-15  1.000000e-06  ...                0       NaN
...           ...           ...  ...              ...       ...
14310  2024-11-27  2.551000e-06  ...                1  0.000002
14311  2024-11-28  2.374000e-06  ...                1  0.000002
14312  2024-11-29  2.272000e-06  ...                1  0.000002
14313  2024-11-30  2.174000e-06  ...                1  0.000002
14314  2024-12-01  2.211000e-06  ...                1  0.000002

[14315 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date         Close  ...  Middle_Trend_Up     EMA56
0      2023-12-11  0.000000e+00  ...              0.0       NaN
1      2023-12-12  0.000000e+00  ...              0.0       NaN
2      2023-12-13  0.000000e+00  ...              0.0       NaN
3      2023-12-14  0.000000e+00  ...              0.0       NaN
4      2023-12-15  1.000000e-06  ...              0.0       NaN
...           ...           ...  ...              ...       ...
14311  2024-11-28  2.374000e-06  ...              1.0  0.000002
14312  2024-11-29  2.272000e-06  ...              1.0  0.000002
14313  2024-11-30  2.174000e-06  ...              1.0  0.000002
14314  2024-12-01  2.211000e-06  ...              1.0  0.000002
14315  2024-12-02  0.000000e+00  ...              NaN       NaN

[14316 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Coq_Inu_COQ
NECESSARRRY AAAA START
1
1
2024-11-15
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name  Price  ...  middle_flip_date  long_flip_date
353  Coq Inu COQ    0.0  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
HashAI_HASHAI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00188}]
success ya
UWAGA
db_HASHAIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_HASHAIUSD': no such table: db_HASHAIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Oraichain_Token_ORAI
[{'Date': datetime.date(2024, 12, 2), 'Price': 11.4738}]
success ya
UWAGA
db_ORAIUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   1.711423  ...                0       NaN
1      2023-01-02   1.792988  ...                0       NaN
2      2023-01-03   1.691964  ...                0       NaN
3      2023-01-04   1.859267  ...                0       NaN
4      2023-01-05   1.779894  ...                0       NaN
...           ...        ...  ...              ...       ...
27962  2024-11-27  10.248000  ...                1  7.065115
27963  2024-11-28  10.207000  ...                1  7.175357
27964  2024-11-29  10.137000  ...                1  7.279274
27965  2024-11-30  10.510000  ...                1  7.392633
27966  2024-12-01  12.307000  ...                1  7.565067

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 11.4738}, {'Date': datetime.date(2024, 12, 2), 'Price': 11.4738}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-01-01   1.711423  ...              0.0       NaN
1      2023-01-02   1.792988  ...              0.0       NaN
2      2023-01-03   1.691964  ...              0.0       NaN
3      2023-01-04   1.859267  ...              0.0       NaN
4      2023-01-05   1.779894  ...              0.0       NaN
...           ...        ...  ...              ...       ...
27963  2024-11-28  10.207000  ...              1.0  7.175357
27964  2024-11-29  10.137000  ...              1.0  7.279274
27965  2024-11-30  10.510000  ...              1.0  7.392633
27966  2024-12-01  12.307000  ...              1.0  7.565067
27967  2024-12-02  11.473800  ...              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Oraichain_Token_ORAI
NECESSARRRY AAAA START
1
1
2024-11-15
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                     Name    Price  ...  middle_flip_date  long_flip_date
355  Oraichain Token ORAI  11.4738  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Catizen_CATI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.5518}]
success ya
UWAGA
db_CATIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_CATIUSD': no such table: db_CATIUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
sudeng_HIPPO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01577}]
success ya
UWAGA
db_HIPPOUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_HIPPOUSD': no such table: db_HIPPOUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Numeraire_NMR
[{'Date': datetime.date(2024, 12, 2), 'Price': 21.2151}]
success ya
UWAGA
db_NMRUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  12.422497  ...                0        NaN
1      2023-01-02  12.490949  ...                0        NaN
2      2023-01-03  12.506726  ...                0        NaN
3      2023-01-04  12.793939  ...                0        NaN
4      2023-01-05  12.626978  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  18.986000  ...                1  15.788426
27963  2024-11-28  20.556000  ...                1  15.955709
27964  2024-11-29  20.460000  ...                1  16.113755
27965  2024-11-30  22.145000  ...                1  16.325377
27966  2024-12-01  21.902000  ...                1  16.521048

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 21.2151}, {'Date': datetime.date(2024, 12, 2), 'Price': 21.2151}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01  12.422497  ...              0.0        NaN
1      2023-01-02  12.490949  ...              0.0        NaN
2      2023-01-03  12.506726  ...              0.0        NaN
3      2023-01-04  12.793939  ...              0.0        NaN
4      2023-01-05  12.626978  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  20.556000  ...              1.0  15.955709
27964  2024-11-29  20.460000  ...              1.0  16.113755
27965  2024-11-30  22.145000  ...              1.0  16.325377
27966  2024-12-01  21.902000  ...              1.0  16.521048
27967  2024-12-02  21.215100  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Numeraire_NMR
NECESSARRRY AAAA START
1
1
2024-11-10
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
358  Numeraire NMR  21.2151  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Dent_DENT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00157}]
success ya
UWAGA
db_DENTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.000689       NaN  ...              0                0       NaN
1    2023-01-02  0.000700       NaN  ...              0                0       NaN
2    2023-01-03  0.000702       NaN  ...              0                0       NaN
3    2023-01-04  0.000697       NaN  ...              0                0       NaN
4    2023-01-05  0.000682       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.001400  0.001166  ...              1                0  0.001201
557  2024-11-28  0.001390  0.001185  ...              1                0  0.001208
558  2024-11-29  0.001420  0.001204  ...              1                0  0.001215
559  2024-11-30  0.001430  0.001223  ...              1                1  0.001223
560  2024-12-01  0.001570  0.001252  ...              1                1  0.001235

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00157}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00157}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.000689       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.000700       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.000702       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.000697       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.000682       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.001390  0.001185  ...            1.0              0.0  0.001208
558  2024-11-29  0.001420  0.001204  ...            1.0              0.0  0.001215
559  2024-11-30  0.001430  0.001223  ...            1.0              1.0  0.001223
560  2024-12-01  0.001570  0.001252  ...            1.0              1.0  0.001235
561  2024-12-02  0.001570       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Dent_DENT
NECESSARRRY AAAA START
1
1
2024-11-30
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
359  Dent DENT  0.00157  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Neutron_NTRN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.52082}]
success ya
UWAGA
db_NTRNUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000333       NaN  ...              0                0       NaN
1      2023-01-02  0.001669       NaN  ...              0                0       NaN
2      2023-01-03  0.001668       NaN  ...              0                0       NaN
3      2023-01-04  0.001686       NaN  ...              0                0       NaN
4      2023-01-05  0.001684       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
18747  2024-11-27  0.555600  0.462409  ...              1                1  0.428268
18748  2024-11-28  0.575200  0.471808  ...              1                1  0.433423
18749  2024-11-29  0.568000  0.479824  ...              1                1  0.438145
18750  2024-11-30  0.596700  0.489564  ...              1                1  0.443708
18751  2024-12-01  0.584500  0.497475  ...              1                1  0.448648

[18752 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.52082}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.52082}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000333       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.001669       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.001668       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.001686       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.001684       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
18748  2024-11-28  0.575200  0.471808  ...            1.0              1.0  0.433423
18749  2024-11-29  0.568000  0.479824  ...            1.0              1.0  0.438145
18750  2024-11-30  0.596700  0.489564  ...            1.0              1.0  0.443708
18751  2024-12-01  0.584500  0.497475  ...            1.0              1.0  0.448648
18752  2024-12-02  0.520820       NaN  ...            NaN              NaN       NaN

[18753 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Neutron_NTRN
NECESSARRRY AAAA START
1
1
2024-11-16
2024-11-22
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
360  Neutron NTRN  0.52082  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Vulcan_Forged_PYR_PYR
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.96899}]
success ya
UWAGA
db_PYRUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  2.760395       NaN  ...              0                0       NaN
1      2023-01-02  2.921940       NaN  ...              0                0       NaN
2      2023-01-03  2.863652       NaN  ...              0                0       NaN
3      2023-01-04  2.947146       NaN  ...              0                0       NaN
4      2023-01-05  2.884169       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  3.699100  3.019693  ...              1                1  2.822743
27963  2024-11-28  3.711300  3.077327  ...              1                1  2.853920
27964  2024-11-29  3.947400  3.149833  ...              1                1  2.892288
27965  2024-11-30  4.010200  3.221530  ...              1                1  2.931513
27966  2024-12-01  4.158600  3.299619  ...              1                1  2.974569

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.96899}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.96899}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  2.760395       NaN  ...            0.0              0.0       NaN
1      2023-01-02  2.921940       NaN  ...            0.0              0.0       NaN
2      2023-01-03  2.863652       NaN  ...            0.0              0.0       NaN
3      2023-01-04  2.947146       NaN  ...            0.0              0.0       NaN
4      2023-01-05  2.884169       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  3.711300  3.077327  ...            1.0              1.0  2.853920
27964  2024-11-29  3.947400  3.149833  ...            1.0              1.0  2.892288
27965  2024-11-30  4.010200  3.221530  ...            1.0              1.0  2.931513
27966  2024-12-01  4.158600  3.299619  ...            1.0              1.0  2.974569
27967  2024-12-02  3.968990       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Vulcan_Forged_PYR_PYR
NECESSARRRY AAAA START
1
1
2024-11-16
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                      Name    Price  ...  middle_flip_date  long_flip_date
361  Vulcan Forged PYR PYR  3.96899  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Treasure_MAGIC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.56394}]
success ya
UWAGA
db_MAGICUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2021-11-22  1.187810       NaN  ...       NaN              0                0
1    2021-11-29  0.854008       NaN  ...       NaN              0                0
2    2021-12-06  0.974902       NaN  ...       NaN              0                0
3    2021-12-13  0.948859       NaN  ...       NaN              0                0
4    2021-12-20  1.651545       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
634  2024-11-27  0.539820  0.542164  ...  0.642486              0                0
635  2024-11-28  0.541930  0.542145  ...  0.638958              0                0
636  2024-11-29  0.545380  0.542414  ...  0.635675              0                0
637  2024-11-30  0.542760  0.542443  ...  0.632414              0                0
638  2024-12-01  0.582660  0.545794  ...  0.630669              0                0

[639 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.56394}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.56394}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2021-11-22  1.187810       NaN  ...       NaN            0.0              0.0
1    2021-11-29  0.854008       NaN  ...       NaN            0.0              0.0
2    2021-12-06  0.974902       NaN  ...       NaN            0.0              0.0
3    2021-12-13  0.948859       NaN  ...       NaN            0.0              0.0
4    2021-12-20  1.651545       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
635  2024-11-28  0.541930  0.542145  ...  0.638958            0.0              0.0
636  2024-11-29  0.545380  0.542414  ...  0.635675            0.0              0.0
637  2024-11-30  0.542760  0.542443  ...  0.632414            0.0              0.0
638  2024-12-01  0.582660  0.545794  ...  0.630669            0.0              0.0
639  2024-12-02  0.563940       NaN  ...       NaN            NaN              NaN

[640 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Treasure_MAGIC
NECESSARRRY AAAA START
0
0
2024-03-22
2024-04-12
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
362  Treasure MAGIC  0.56394  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Marlin_POND
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01888}]
success ya
UWAGA
db_PONDUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.007585       NaN  ...              0                0       NaN
1    2023-01-02  0.007621       NaN  ...              0                0       NaN
2    2023-01-03  0.007457       NaN  ...              0                0       NaN
3    2023-01-04  0.007616       NaN  ...              0                0       NaN
4    2023-01-05  0.007616       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.019480  0.018477  ...              0                0  0.020066
557  2024-11-28  0.019950  0.018599  ...              0                0  0.020062
558  2024-11-29  0.019650  0.018687  ...              0                0  0.020047
559  2024-11-30  0.019560  0.018760  ...              0                0  0.020030
560  2024-12-01  0.019840  0.018850  ...              0                0  0.020024

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01888}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01888}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.007585       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.007621       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.007457       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.007616       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.007616       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.019950  0.018599  ...            0.0              0.0  0.020062
558  2024-11-29  0.019650  0.018687  ...            0.0              0.0  0.020047
559  2024-11-30  0.019560  0.018760  ...            0.0              0.0  0.020030
560  2024-12-01  0.019840  0.018850  ...            0.0              0.0  0.020024
561  2024-12-02  0.018880       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Marlin_POND
NECESSARRRY AAAA START
0
0
2024-04-17
2024-06-13
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
363  Marlin POND  0.01888  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Keep_Network_KEEP
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15869}]
success ya
UWAGA
db_KEEPUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.075817       NaN  ...              0                0       NaN
1    2023-01-02  0.077029       NaN  ...              0                0       NaN
2    2023-01-03  0.077200       NaN  ...              0                0       NaN
3    2023-01-04  0.078480       NaN  ...              0                0       NaN
4    2023-01-05  0.078736       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.156270  0.174421  ...              1                0  0.177991
487  2024-05-02  0.169060  0.173974  ...              1                0  0.177678
488  2024-05-03  0.174140  0.173988  ...              1                0  0.177554
489  2024-05-04  0.172240  0.173842  ...              1                0  0.177367
490  2024-05-05  0.172240  0.173709  ...              1                0  0.177187

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.16816}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.17437}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.17446}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.17446}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.16728}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.16529}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.17224}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.17497}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.18035}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.17886}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.17809}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.17416}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.18584}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.18138}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.18029}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.17349}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.17373}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.17373}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.18179}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.17324}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.17114}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.1711}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.16865}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.16436}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.17022}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.17154}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.17124}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.17387}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.16989}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.16806}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.157}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.14706}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.14651}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.14082}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.14854}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.13972}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.13247}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.13157}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.13157}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.11822}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.10751}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.11346}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.11573}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.11673}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.11493}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.11003}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.10936}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.11365}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.11418}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.12002}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.11819}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.11423}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.11157}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.1261}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.12188}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.12496}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.15092}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.13297}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.13119}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.1145}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.13126}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.15153}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.1403}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.14735}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.15587}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.15046}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.14134}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.1411}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.16247}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15869}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15869}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Ultima_ULTIMA
[{'Date': datetime.date(2024, 12, 2), 'Price': 4705.23}]
success ya
UWAGA
db_ULTIMAUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ULTIMAUSD': no such table: db_ULTIMAUSD
trying
 inicjacja duplicates
duplicate info
[False]
TrueFi_TRU
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11898}]
success ya
UWAGA
db_TRUUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.077627       NaN  ...              0                0       NaN
1    2023-01-02  0.079503       NaN  ...              0                0       NaN
2    2023-01-03  0.081870       NaN  ...              0                0       NaN
3    2023-01-04  0.082864       NaN  ...              0                0       NaN
4    2023-01-05  0.079436       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.112520  0.116146  ...              0                0  0.135911
557  2024-11-28  0.110870  0.115707  ...              0                0  0.135032
558  2024-11-29  0.114900  0.115640  ...              0                0  0.134326
559  2024-11-30  0.115110  0.115595  ...              0                0  0.133651
560  2024-12-01  0.125820  0.116447  ...              0                0  0.133377

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11898}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.11898}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.077627       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.079503       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.081870       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.082864       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.079436       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.110870  0.115707  ...            0.0              0.0  0.135032
558  2024-11-29  0.114900  0.115640  ...            0.0              0.0  0.134326
559  2024-11-30  0.115110  0.115595  ...            0.0              0.0  0.133651
560  2024-12-01  0.125820  0.116447  ...            0.0              0.0  0.133377
561  2024-12-02  0.118980       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted TrueFi_TRU
NECESSARRRY AAAA START
0
0
2024-06-27
2024-06-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
366  TrueFi TRU  0.11898  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Lumia_LUMIA
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.71213}]
success ya
UWAGA
db_LUMIAUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_LUMIAUSD': no such table: db_LUMIAUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Cortex_CTXC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.65987}]
success ya
UWAGA
db_CTXCUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_CTXCUSD': no such table: db_CTXCUSD
trying
 inicjacja duplicates
duplicate info
[False]
Realio_Network_RIO
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.24026}]
success ya
UWAGA
db_RIOUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-26  1.66200       NaN  ...       NaN              0                0
1    2024-04-27  1.70500       NaN  ...       NaN              0                0
2    2024-04-28  1.66700       NaN  ...       NaN              0                0
3    2024-04-29  1.69300       NaN  ...       NaN              0                0
4    2024-04-30  1.50600       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
215  2024-11-27  1.06350  0.824984  ...  1.104370              0                0
216  2024-11-28  1.17441  0.854103  ...  1.102927              1                0
217  2024-11-29  1.19119  0.882194  ...  1.101698              1                1
218  2024-11-30  1.19470  0.908236  ...  1.101132              1                1
219  2024-12-01  1.17718  0.930648  ...  1.099422              1                1

[220 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.24026}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.24026}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-26  1.66200       NaN  ...       NaN            0.0              0.0
1    2024-04-27  1.70500       NaN  ...       NaN            0.0              0.0
2    2024-04-28  1.66700       NaN  ...       NaN            0.0              0.0
3    2024-04-29  1.69300       NaN  ...       NaN            0.0              0.0
4    2024-04-30  1.50600       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
216  2024-11-28  1.17441  0.854103  ...  1.102927            1.0              0.0
217  2024-11-29  1.19119  0.882194  ...  1.101698            1.0              1.0
218  2024-11-30  1.19470  0.908236  ...  1.101132            1.0              1.0
219  2024-12-01  1.17718  0.930648  ...  1.099422            1.0              1.0
220  2024-12-02  1.24026       NaN  ...       NaN            NaN              NaN

[221 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Realio_Network_RIO
NECESSARRRY AAAA START
1
1
2024-11-29
2024-11-28
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name    Price  ...  middle_flip_date  long_flip_date
369  Realio Network RIO  1.24026  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Pundi_X_[new]_PUNDIX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.57083}]
success ya
UWAGA
db_PUNDIXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.318686       NaN  ...              0                0       NaN
1    2023-01-02  0.320722       NaN  ...              0                0       NaN
2    2023-01-03  0.316040       NaN  ...              0                0       NaN
3    2023-01-04  0.322749       NaN  ...              0                0       NaN
4    2023-01-05  0.322551       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.575610  0.475051  ...              1                0  0.495815
557  2024-11-28  0.609040  0.486216  ...              1                0  0.499788
558  2024-11-29  0.614490  0.496906  ...              1                0  0.503812
559  2024-11-30  0.607080  0.506087  ...              1                0  0.507436
560  2024-12-01  0.602710  0.514139  ...              1                1  0.510779

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.57083}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.57083}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.318686       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.320722       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.316040       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.322749       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.322551       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.609040  0.486216  ...            1.0              0.0  0.499788
558  2024-11-29  0.614490  0.496906  ...            1.0              0.0  0.503812
559  2024-11-30  0.607080  0.506087  ...            1.0              0.0  0.507436
560  2024-12-01  0.602710  0.514139  ...            1.0              1.0  0.510779
561  2024-12-02  0.570830       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Pundi_X_[new]_PUNDIX
NECESSARRRY AAAA START
1
1
2024-12-01
2024-11-26
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                     Name    Price  ...  middle_flip_date  long_flip_date
370  Pundi X [new] PUNDIX  0.57083  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Solidus_Ai_Tech_AITECH
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.13617}]
success ya
UWAGA
db_AITECHUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-09-01  0.036627       NaN  ...              0                0       NaN
1    2023-09-02  0.037971       NaN  ...              0                0       NaN
2    2023-09-03  0.037694       NaN  ...              0                0       NaN
3    2023-09-04  0.041430       NaN  ...              0                0       NaN
4    2023-09-05  0.037244       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
309  2024-11-27  0.116000  0.112675  ...              0                0  0.138827
310  2024-11-28  0.125160  0.113716  ...              0                0  0.138348
311  2024-11-29  0.156680  0.117296  ...              1                0  0.138991
312  2024-11-30  0.155610  0.120489  ...              1                0  0.139574
313  2024-12-01  0.148140  0.122793  ...              0                0  0.139875

[314 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.13617}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.13617}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-09-01  0.036627       NaN  ...            0.0              0.0       NaN
1    2023-09-02  0.037971       NaN  ...            0.0              0.0       NaN
2    2023-09-03  0.037694       NaN  ...            0.0              0.0       NaN
3    2023-09-04  0.041430       NaN  ...            0.0              0.0       NaN
4    2023-09-05  0.037244       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
310  2024-11-28  0.125160  0.113716  ...            0.0              0.0  0.138348
311  2024-11-29  0.156680  0.117296  ...            1.0              0.0  0.138991
312  2024-11-30  0.155610  0.120489  ...            1.0              0.0  0.139574
313  2024-12-01  0.148140  0.122793  ...            0.0              0.0  0.139875
314  2024-12-02  0.136170       NaN  ...            NaN              NaN       NaN

[315 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Solidus_Ai_Tech_AITECH
NECESSARRRY AAAA START
0
0
2024-04-30
2024-12-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                       Name    Price  ...  middle_flip_date  long_flip_date
371  Solidus Ai Tech AITECH  0.13617  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MVL_MVL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00569}]
success ya
UWAGA
db_MVLUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_MVLUSD': no such table: db_MVLUSD
trying
 inicjacja duplicates
duplicate info
[False]
Humans.ai_HEART
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02627}]
success ya
UWAGA
db_HEARTUSD
COINDBBB
           Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  0.008330       NaN  ...       NaN              0                0
1    2023-10-15  0.008399       NaN  ...       NaN              0                0
2    2023-10-16  0.008198       NaN  ...       NaN              0                0
3    2023-10-17  0.008288       NaN  ...       NaN              0                0
4    2023-10-18  0.009747       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
410  2024-11-27  0.018380  0.017577  ...  0.013438              1                1
411  2024-11-28  0.017670  0.017585  ...  0.013420              1                1
412  2024-11-29  0.018830  0.017689  ...  0.013407              1                1
413  2024-11-30  0.018390  0.017747  ...  0.013395              1                1
414  2024-12-01  0.019040  0.017855  ...  0.013369              1                1

[415 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02627}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02627}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-14  0.008330       NaN  ...       NaN            0.0              0.0
1    2023-10-15  0.008399       NaN  ...       NaN            0.0              0.0
2    2023-10-16  0.008198       NaN  ...       NaN            0.0              0.0
3    2023-10-17  0.008288       NaN  ...       NaN            0.0              0.0
4    2023-10-18  0.009747       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
411  2024-11-28  0.017670  0.017585  ...  0.013420            1.0              1.0
412  2024-11-29  0.018830  0.017689  ...  0.013407            1.0              1.0
413  2024-11-30  0.018390  0.017747  ...  0.013395            1.0              1.0
414  2024-12-01  0.019040  0.017855  ...  0.013369            1.0              1.0
415  2024-12-02  0.026270       NaN  ...       NaN            NaN              NaN

[416 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Humans
NECESSARRRY AAAA START
1
1
2024-09-29
2024-10-16
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
373  Humans.ai HEART  0.02627  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Moonriver_MOVR
[{'Date': datetime.date(2024, 12, 2), 'Price': 15.6992}]
success ya
UWAGA
db_MOVRUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   6.181572  ...                0        NaN
1      2023-01-02   6.256566  ...                0        NaN
2      2023-01-03   6.229429  ...                0        NaN
3      2023-01-04   6.357849  ...                0        NaN
4      2023-01-05   6.275303  ...                0        NaN
...           ...        ...  ...              ...        ...
27962  2024-11-27  16.492100  ...                1  11.481171
27963  2024-11-28  16.407900  ...                1  11.654039
27964  2024-11-29  16.607100  ...                1  11.827831
27965  2024-11-30  16.992000  ...                1  12.009029
27966  2024-12-01  17.000000  ...                1  12.184151

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 15.6992}, {'Date': datetime.date(2024, 12, 2), 'Price': 15.6992}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   6.181572  ...              0.0        NaN
1      2023-01-02   6.256566  ...              0.0        NaN
2      2023-01-03   6.229429  ...              0.0        NaN
3      2023-01-04   6.357849  ...              0.0        NaN
4      2023-01-05   6.275303  ...              0.0        NaN
...           ...        ...  ...              ...        ...
27963  2024-11-28  16.407900  ...              1.0  11.654039
27964  2024-11-29  16.607100  ...              1.0  11.827831
27965  2024-11-30  16.992000  ...              1.0  12.009029
27966  2024-12-01  17.000000  ...              1.0  12.184151
27967  2024-12-02  15.699200  ...              NaN        NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Moonriver_MOVR
NECESSARRRY AAAA START
1
1
2024-11-09
2024-11-15
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
374  Moonriver MOVR  15.6992  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
HTX_Token_HT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.8925}]
success ya
UWAGA
db_HTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  5.118312       NaN  ...              0                0       NaN
1    2023-01-02  5.172537       NaN  ...              0                0       NaN
2    2023-01-03  5.288707       NaN  ...              0                0       NaN
3    2023-01-04  5.218457       NaN  ...              0                0       NaN
4    2023-01-05  4.675221       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.582730  0.639313  ...              0                0  0.843732
487  2024-05-02  0.601990  0.636203  ...              0                0  0.835250
488  2024-05-03  0.612020  0.634188  ...              0                0  0.827417
489  2024-05-04  0.599930  0.631333  ...              0                0  0.819435
490  2024-05-05  0.599930  0.628716  ...              0                0  0.811733

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.60852}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.60631}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.60631}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.60919}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.47415}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.59485}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.57631}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.5796}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.49793}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.59152}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.59628}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.5831}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.58882}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.57822}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.56003}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.55716}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.55716}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.55966}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.54461}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.54708}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.55187}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.55944}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.55474}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.54461}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.55296}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.55411}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.58168}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.59776}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.59281}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.4722}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.58287}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.56819}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.54499}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.56596}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.55995}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.55819}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.55187}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.55187}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.5477}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.52361}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.52571}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.53563}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.52452}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.51995}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.52201}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.50067}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.51078}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.50267}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.51646}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.51219}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.51316}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.52121}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.52146}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.37081}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.62253}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.63397}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.63369}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.63246}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.67377}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.79938}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.64265}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.68286}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.79}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.81009}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.60299}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.60191}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.68681}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.8925}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.8925}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Spell_Token_SPELL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00094}]
success ya
UWAGA
db_SPELLUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.000531       NaN  ...              0                0       NaN
1    2023-01-02  0.000538       NaN  ...              0                0       NaN
2    2023-01-03  0.000537       NaN  ...              0                0       NaN
3    2023-01-04  0.000547       NaN  ...              0                0       NaN
4    2023-01-05  0.000544       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.000790  0.000933  ...              1                0  0.000991
487  2024-05-02  0.000830  0.000925  ...              1                0  0.000985
488  2024-05-03  0.000880  0.000921  ...              1                0  0.000982
489  2024-05-04  0.000870  0.000917  ...              1                0  0.000978
490  2024-05-05  0.000870  0.000913  ...              1                0  0.000974

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.00081}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.0008}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.0008}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.00079}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.00077}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.00082}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.00082}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.00084}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.00084}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.0008}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.00086}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.00087}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.00088}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.00091}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.0009}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.00091}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.00091}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.00102}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.00097}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.00095}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.00094}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.00095}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.00115}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.00107}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.00124}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.00122}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.00122}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.00119}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.00112}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.00104}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.00099}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.00098}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.00089}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.00095}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.0009}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.00084}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.00082}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.00082}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.00077}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.00067}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.00071}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.00071}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.00071}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.00071}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.0007}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.00069}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.00072}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.00071}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.00071}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.00069}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.00068}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.00069}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.00071}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.00083}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00081}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.0008}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00079}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00078}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00078}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.00082}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.00089}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.00085}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.00077}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.00086}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.00097}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.00097}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.00097}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.00098}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00094}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00094}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Hive_HIVE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.28562}]
success ya
UWAGA
db_HIVEUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.260581       NaN  ...              0                0       NaN
1    2023-01-02  0.264354       NaN  ...              0                0       NaN
2    2023-01-03  0.266649       NaN  ...              0                0       NaN
3    2023-01-04  0.272694       NaN  ...              0                0       NaN
4    2023-01-05  0.269589       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.294750  0.341874  ...              0                0  0.364628
487  2024-05-02  0.315780  0.339699  ...              0                0  0.362914
488  2024-05-03  0.321660  0.338196  ...              0                0  0.361467
489  2024-05-04  0.325220  0.337114  ...              0                0  0.360195
490  2024-05-05  0.325220  0.336123  ...              0                0  0.358968

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.31228}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.306}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.30176}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.30176}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.32252}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.31125}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.32156}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.31658}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.32037}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.31795}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.32105}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.32862}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.32527}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.32028}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.31602}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.31766}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.32167}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.32167}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.322}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.32051}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.3176}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.30835}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.30201}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.30541}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.30226}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.29593}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.30056}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.30906}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.30866}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.31016}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.29091}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.28961}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.28926}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.27052}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.2814}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.27478}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.26499}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.26024}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.26024}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.22242}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.20805}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.21143}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.21412}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.21405}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.21454}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.23496}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.22864}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.2331}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.2221}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.22313}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.21993}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.21841}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.2207}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.21971}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.23986}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.24695}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.24604}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.23456}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.23446}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.23219}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.24127}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.28505}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.27635}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.27724}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.29058}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.29183}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.29253}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.29298}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.29451}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.28562}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.28562}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Liquity_LQTY
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.51325}]
success ya
UWAGA
db_LQTYUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.579265       NaN  ...              0                0       NaN
1      2023-01-02  0.586691       NaN  ...              0                0       NaN
2      2023-01-03  0.599597       NaN  ...              0                0       NaN
3      2023-01-04  0.593849       NaN  ...              0                0       NaN
4      2023-01-05  0.588920       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27560  2024-11-27  1.635400  1.177632  ...              1                1  1.035145
27561  2024-11-28  1.533900  1.207321  ...              1                1  1.052645
27562  2024-11-29  1.510300  1.232569  ...              1                1  1.068703
27563  2024-11-30  1.580300  1.261547  ...              1                1  1.086654
27564  2024-12-01  1.558100  1.286259  ...              1                1  1.103196

[27565 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.51325}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.51325}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.579265       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.586691       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.599597       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.593849       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.588920       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27561  2024-11-28  1.533900  1.207321  ...            1.0              1.0  1.052645
27562  2024-11-29  1.510300  1.232569  ...            1.0              1.0  1.068703
27563  2024-11-30  1.580300  1.261547  ...            1.0              1.0  1.086654
27564  2024-12-01  1.558100  1.286259  ...            1.0              1.0  1.103196
27565  2024-12-02  1.513250       NaN  ...            NaN              NaN       NaN

[27566 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Liquity_LQTY
NECESSARRRY AAAA START
1
1
2024-09-14
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
378  Liquity LQTY  1.51325  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
CARV_CARV
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.94801}]
success ya
UWAGA
db_CARVUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_CARVUSD': no such table: db_CARVUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Velo_VELO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01927}]
success ya
UWAGA
db_VELOUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-03-14  0.009500       NaN  ...              0                0       NaN
1    2023-03-15  0.008859       NaN  ...              0                0       NaN
2    2023-03-16  0.009601       NaN  ...              0                0       NaN
3    2023-03-17  0.010125       NaN  ...              0                0       NaN
4    2023-03-18  0.009129       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
484  2024-11-27  0.017750  0.014880  ...              1                0  0.014883
485  2024-11-28  0.017190  0.015073  ...              1                1  0.014964
486  2024-11-29  0.019080  0.015407  ...              1                1  0.015109
487  2024-11-30  0.018970  0.015704  ...              1                1  0.015244
488  2024-12-01  0.019000  0.015978  ...              1                1  0.015376

[489 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01927}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01927}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-03-14  0.009500       NaN  ...            0.0              0.0       NaN
1    2023-03-15  0.008859       NaN  ...            0.0              0.0       NaN
2    2023-03-16  0.009601       NaN  ...            0.0              0.0       NaN
3    2023-03-17  0.010125       NaN  ...            0.0              0.0       NaN
4    2023-03-18  0.009129       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
485  2024-11-28  0.017190  0.015073  ...            1.0              1.0  0.014964
486  2024-11-29  0.019080  0.015407  ...            1.0              1.0  0.015109
487  2024-11-30  0.018970  0.015704  ...            1.0              1.0  0.015244
488  2024-12-01  0.019000  0.015978  ...            1.0              1.0  0.015376
489  2024-12-02  0.019270       NaN  ...            NaN              NaN       NaN

[490 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Velo_VELO
NECESSARRRY AAAA START
1
1
2024-11-28
2023-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
380  Velo VELO  0.01927  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
CyberConnect_CYBER
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.59548}]
success ya
UWAGA
db_CYBERUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-03-17  0.153313       NaN  ...              0                0       NaN
1      2023-03-18  0.141485       NaN  ...              0                0       NaN
2      2023-03-19  0.147316       NaN  ...              0                0       NaN
3      2023-03-20  0.172748       NaN  ...              0                0       NaN
4      2023-03-21  0.171265       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
17775  2024-11-27  4.410000  3.722100  ...              0                1  3.486035
17776  2024-11-28  4.396000  3.778258  ...              0                1  3.517963
17777  2024-11-29  4.436000  3.833070  ...              0                1  3.550175
17778  2024-11-30  4.721000  3.907064  ...              1                1  3.591257
17779  2024-12-01  4.738000  3.976309  ...              1                1  3.631493

[17780 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.59548}, {'Date': datetime.date(2024, 12, 2), 'Price': 4.59548}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-03-17  0.153313       NaN  ...            0.0              0.0       NaN
1      2023-03-18  0.141485       NaN  ...            0.0              0.0       NaN
2      2023-03-19  0.147316       NaN  ...            0.0              0.0       NaN
3      2023-03-20  0.172748       NaN  ...            0.0              0.0       NaN
4      2023-03-21  0.171265       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
17776  2024-11-28  4.396000  3.778258  ...            0.0              1.0  3.517963
17777  2024-11-29  4.436000  3.833070  ...            0.0              1.0  3.550175
17778  2024-11-30  4.721000  3.907064  ...            1.0              1.0  3.591257
17779  2024-12-01  4.738000  3.976309  ...            1.0              1.0  3.631493
17780  2024-12-02  4.595480       NaN  ...            NaN              NaN       NaN

[17781 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted CyberConnect_CYBER
NECESSARRRY AAAA START
1
1
2024-11-13
2024-11-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name    Price  ...  middle_flip_date  long_flip_date
381  CyberConnect CYBER  4.59548  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
NetMind_Token_NMT
[{'Date': datetime.date(2024, 12, 2), 'Price': 4.23176}]
success ya
UWAGA
db_NMTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_NMTUSD': no such table: db_NMTUSD
trying
 inicjacja duplicates
duplicate info
[False]
Stratis_[New]_STRAX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07081}]
success ya
UWAGA
db_STRAXUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.389545       NaN  ...       NaN              0                0
1      2023-01-02  0.394463       NaN  ...       NaN              0                0
2      2023-01-03  0.393561       NaN  ...       NaN              0                0
3      2023-01-04  0.402973       NaN  ...       NaN              0                0
4      2023-01-05  0.407568       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
27536  2024-11-27  0.074390  0.058281  ...  0.053836              1                1
27537  2024-11-28  0.072220  0.059442  ...  0.054481              1                1
27538  2024-11-29  0.074790  0.060721  ...  0.055193              1                1
27539  2024-11-30  0.076110  0.062004  ...  0.055927              1                1
27540  2024-12-01  0.076050  0.063174  ...  0.056633              1                1

[27541 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07081}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.07081}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.389545       NaN  ...       NaN            0.0              0.0
1      2023-01-02  0.394463       NaN  ...       NaN            0.0              0.0
2      2023-01-03  0.393561       NaN  ...       NaN            0.0              0.0
3      2023-01-04  0.402973       NaN  ...       NaN            0.0              0.0
4      2023-01-05  0.407568       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
27537  2024-11-28  0.072220  0.059442  ...  0.054481            1.0              1.0
27538  2024-11-29  0.074790  0.060721  ...  0.055193            1.0              1.0
27539  2024-11-30  0.076110  0.062004  ...  0.055927            1.0              1.0
27540  2024-12-01  0.076050  0.063174  ...  0.056633            1.0              1.0
27541  2024-12-02  0.070810       NaN  ...       NaN            NaN              NaN

[27542 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Stratis_[New]_STRAX
NECESSARRRY AAAA START
1
1
2024-11-16
2024-11-16
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
383  Stratis [New] STRAX  0.07081  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Wilder_World_WILD
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.37642}]
success ya
UWAGA
db_WILDUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.239426       NaN  ...              0                0       NaN
1      2023-01-02  0.278158       NaN  ...              0                0       NaN
2      2023-01-03  0.254301       NaN  ...              0                0       NaN
3      2023-01-04  0.262404       NaN  ...              0                0       NaN
4      2023-01-05  0.251576       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.300000  0.270252  ...              0                1  0.259308
27963  2024-11-28  0.297800  0.272547  ...              0                1  0.260658
27964  2024-11-29  0.316800  0.276235  ...              0                1  0.262628
27965  2024-11-30  0.425700  0.288691  ...              1                1  0.268350
27966  2024-12-01  0.381800  0.296450  ...              1                1  0.272331

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.37642}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.37642}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.239426       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.278158       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.254301       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.262404       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.251576       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.297800  0.272547  ...            0.0              1.0  0.260658
27964  2024-11-29  0.316800  0.276235  ...            0.0              1.0  0.262628
27965  2024-11-30  0.425700  0.288691  ...            1.0              1.0  0.268350
27966  2024-12-01  0.381800  0.296450  ...            1.0              1.0  0.272331
27967  2024-12-02  0.376420       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Wilder_World_WILD
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
384  Wilder World WILD  0.37642  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Mr_Mint_MNT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.40136}]
success ya
UWAGA
db_MNTUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-11-30  0.53960       NaN  ...       NaN              0                0
1    2023-12-01  0.54330       NaN  ...       NaN              0                0
2    2023-12-02  0.54840       NaN  ...       NaN              0                0
3    2023-12-03  0.54350       NaN  ...       NaN              0                0
4    2023-12-04  0.59780       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
363  2024-11-27  0.41426  0.524980  ...  0.705098              0                0
364  2024-11-28  0.41120  0.515499  ...  0.702115              0                0
365  2024-11-29  0.39037  0.505071  ...  0.699122              0                0
366  2024-11-30  0.39022  0.495500  ...  0.696310              0                0
367  2024-12-01  0.39695  0.487288  ...  0.693298              0                0

[368 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.40136}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.40136}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-11-30  0.53960       NaN  ...       NaN            0.0              0.0
1    2023-12-01  0.54330       NaN  ...       NaN            0.0              0.0
2    2023-12-02  0.54840       NaN  ...       NaN            0.0              0.0
3    2023-12-03  0.54350       NaN  ...       NaN            0.0              0.0
4    2023-12-04  0.59780       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
364  2024-11-28  0.41120  0.515499  ...  0.702115            0.0              0.0
365  2024-11-29  0.39037  0.505071  ...  0.699122            0.0              0.0
366  2024-11-30  0.39022  0.495500  ...  0.696310            0.0              0.0
367  2024-12-01  0.39695  0.487288  ...  0.693298            0.0              0.0
368  2024-12-02  0.40136       NaN  ...       NaN            NaN              NaN

[369 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Mr_Mint_MNT
NECESSARRRY AAAA START
0
0
2024-11-19
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
385  Mr Mint MNT  0.40136  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ChainGPT_CGPT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.18834}]
success ya
UWAGA
db_CGPTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-04-10  0.164473       NaN  ...              0                0       NaN
1    2023-04-11  0.126370       NaN  ...              0                0       NaN
2    2023-04-12  0.091754       NaN  ...              0                0       NaN
3    2023-04-13  0.113278       NaN  ...              0                0       NaN
4    2023-04-14  0.110562       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
456  2024-11-27  0.155520  0.150625  ...              0                0  0.178812
457  2024-11-28  0.167980  0.152072  ...              0                0  0.178431
458  2024-11-29  0.176570  0.154113  ...              0                0  0.178366
459  2024-11-30  0.175660  0.155909  ...              0                0  0.178271
460  2024-12-01  0.195950  0.159246  ...              0                0  0.178892

[461 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.18834}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.18834}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-04-10  0.164473       NaN  ...            0.0              0.0       NaN
1    2023-04-11  0.126370       NaN  ...            0.0              0.0       NaN
2    2023-04-12  0.091754       NaN  ...            0.0              0.0       NaN
3    2023-04-13  0.113278       NaN  ...            0.0              0.0       NaN
4    2023-04-14  0.110562       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
457  2024-11-28  0.167980  0.152072  ...            0.0              0.0  0.178431
458  2024-11-29  0.176570  0.154113  ...            0.0              0.0  0.178366
459  2024-11-30  0.175660  0.155909  ...            0.0              0.0  0.178271
460  2024-12-01  0.195950  0.159246  ...            0.0              0.0  0.178892
461  2024-12-02  0.188340       NaN  ...            NaN              NaN       NaN

[462 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted ChainGPT_CGPT
NECESSARRRY AAAA START
0
0
2024-04-14
2024-05-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
386  ChainGPT CGPT  0.18834  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
TerraClassicUSD_USTC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02503}]
success ya
UWAGA
db_USTCUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-05  0.02122       NaN  ...       NaN              0                0
1    2023-04-06  0.02156       NaN  ...       NaN              0                0
2    2023-04-07  0.02141       NaN  ...       NaN              0                0
3    2023-04-08  0.02176       NaN  ...       NaN              0                0
4    2023-04-09  0.02151       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
465  2024-11-27  0.02439  0.022012  ...  0.025358              0                1
466  2024-11-28  0.02524  0.022281  ...  0.025315              0                1
467  2024-11-29  0.02531  0.022533  ...  0.025279              1                1
468  2024-11-30  0.02558  0.022787  ...  0.025246              1                1
469  2024-12-01  0.02651  0.023097  ...  0.025214              1                1

[470 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02503}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02503}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-05  0.02122       NaN  ...       NaN            0.0              0.0
1    2023-04-06  0.02156       NaN  ...       NaN            0.0              0.0
2    2023-04-07  0.02141       NaN  ...       NaN            0.0              0.0
3    2023-04-08  0.02176       NaN  ...       NaN            0.0              0.0
4    2023-04-09  0.02151       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
466  2024-11-28  0.02524  0.022281  ...  0.025315            0.0              1.0
467  2024-11-29  0.02531  0.022533  ...  0.025279            1.0              1.0
468  2024-11-30  0.02558  0.022787  ...  0.025246            1.0              1.0
469  2024-12-01  0.02651  0.023097  ...  0.025214            1.0              1.0
470  2024-12-02  0.02503       NaN  ...       NaN            NaN              NaN

[471 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted TerraClassicUSD_USTC
NECESSARRRY AAAA START
1
0
2024-11-24
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                     Name    Price  ...  middle_flip_date  long_flip_date
387  TerraClassicUSD USTC  0.02503  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
SUNDOG_SUNDOG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.13873}]
success ya
UWAGA
db_SUNDOGUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_SUNDOGUSD': no such table: db_SUNDOGUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
SLERF_SLERF
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.27664}]
success ya
UWAGA
db_SLERFUSD
COINDBBB
          Date     Close     EMA23  ... Long_Trend_Up Middle_Trend_Up     EMA56
0   2024-03-18  0.641905       NaN  ...             0               0       NaN
1   2024-03-19  0.802403       NaN  ...             0               0       NaN
2   2024-03-20  0.874772       NaN  ...             0               0       NaN
3   2024-03-21  0.746836       NaN  ...             0               0       NaN
4   2024-03-22  0.645540       NaN  ...             0               0       NaN
..         ...       ...       ...  ...           ...             ...       ...
90  2024-11-27  0.275600  0.289178  ...             0               0  0.319058
91  2024-11-28  0.265200  0.287180  ...             0               0  0.317168
92  2024-11-29  0.280500  0.286623  ...             0               0  0.315881
93  2024-11-30  0.281700  0.286213  ...             0               0  0.314682
94  2024-12-01  0.293100  0.286787  ...             0               0  0.313925

[95 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.27664}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.27664}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
          Date     Close     EMA23  ... Long_Trend_Up Middle_Trend_Up     EMA56
0   2024-03-18  0.641905       NaN  ...           0.0             0.0       NaN
1   2024-03-19  0.802403       NaN  ...           0.0             0.0       NaN
2   2024-03-20  0.874772       NaN  ...           0.0             0.0       NaN
3   2024-03-21  0.746836       NaN  ...           0.0             0.0       NaN
4   2024-03-22  0.645540       NaN  ...           0.0             0.0       NaN
..         ...       ...       ...  ...           ...             ...       ...
91  2024-11-28  0.265200  0.287180  ...           0.0             0.0  0.317168
92  2024-11-29  0.280500  0.286623  ...           0.0             0.0  0.315881
93  2024-11-30  0.281700  0.286213  ...           0.0             0.0  0.314682
94  2024-12-01  0.293100  0.286787  ...           0.0             0.0  0.313925
95  2024-12-02  0.276640       NaN  ...           NaN             NaN       NaN

[96 rows x 8 columns]
4 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted SLERF_SLERF
NECESSARRRY AAAA START
0
0
None
None
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
389  SLERF SLERF  0.27664  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Propy_PRO
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.3809}]
success ya
UWAGA
db_PROUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.353630  ...              0                0
1    2023-01-02 00:00:00    0.350009  ...              0                0
2    2023-01-03 00:00:00    0.376573  ...              0                0
3    2023-01-04 00:00:00    0.346708  ...              0                0
4    2023-01-05 00:00:00    0.344882  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  361.399000  ...              1                1
469           2024-04-14  306.244000  ...              1                1
470           2024-04-15  306.406000  ...              1                1
471           2024-04-16  279.245000  ...              1                1
472           2024-04-17    2.267780  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 2.60849}, {'Date': datetime.date(2024, 5, 10), 'Price': 2.52034}, {'Date': datetime.date(2024, 5, 11), 'Price': 2.53223}, {'Date': datetime.date(2024, 5, 12), 'Price': 2.53223}, {'Date': datetime.date(2024, 5, 13), 'Price': 2.56762}, {'Date': datetime.date(2024, 5, 14), 'Price': 2.35108}, {'Date': datetime.date(2024, 5, 15), 'Price': 2.49996}, {'Date': datetime.date(2024, 5, 16), 'Price': 2.50489}, {'Date': datetime.date(2024, 5, 17), 'Price': 2.58172}, {'Date': datetime.date(2024, 5, 18), 'Price': 2.63696}, {'Date': datetime.date(2024, 5, 19), 'Price': 2.4788}, {'Date': datetime.date(2024, 5, 20), 'Price': 2.50234}, {'Date': datetime.date(2024, 5, 21), 'Price': 2.43695}, {'Date': datetime.date(2024, 5, 22), 'Price': 2.39168}, {'Date': datetime.date(2024, 5, 23), 'Price': 2.24626}, {'Date': datetime.date(2024, 5, 24), 'Price': 2.27512}, {'Date': datetime.date(2024, 5, 25), 'Price': 2.26772}, {'Date': datetime.date(2024, 5, 26), 'Price': 2.26772}, {'Date': datetime.date(2024, 5, 27), 'Price': 2.26484}, {'Date': datetime.date(2024, 5, 28), 'Price': 2.14927}, {'Date': datetime.date(2024, 5, 29), 'Price': 1.96353}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.90678}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.91945}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.74887}, {'Date': datetime.date(2024, 6, 2), 'Price': 2.04486}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.95074}, {'Date': datetime.date(2024, 6, 4), 'Price': 1.95602}, {'Date': datetime.date(2024, 6, 5), 'Price': 1.98652}, {'Date': datetime.date(2024, 6, 6), 'Price': 1.94432}, {'Date': datetime.date(2024, 6, 7), 'Price': 1.82942}, {'Date': datetime.date(2024, 6, 8), 'Price': 1.75488}, {'Date': datetime.date(2024, 6, 9), 'Price': 1.74673}, {'Date': datetime.date(2024, 6, 10), 'Price': 1.74816}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.59031}, {'Date': datetime.date(2024, 6, 12), 'Price': 1.679}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.59266}, {'Date': datetime.date(2024, 6, 14), 'Price': 1.55939}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.55554}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.55554}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.45569}, {'Date': datetime.date(2024, 6, 18), 'Price': 1.24456}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.32152}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.21605}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.53944}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.58313}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.48069}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.37774}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.45368}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.37705}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.50944}, {'Date': datetime.date(2024, 6, 28), 'Price': 1.41354}, {'Date': datetime.date(2024, 6, 29), 'Price': 1.40251}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.37206}, {'Date': datetime.date(2024, 7, 1), 'Price': 1.41326}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.21513}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.23394}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.46949}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.4161}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.32528}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.2602}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.28356}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.38567}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.37072}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.27498}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.43516}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.47236}, {'Date': datetime.date(2024, 11, 29), 'Price': 1.48775}, {'Date': datetime.date(2024, 11, 30), 'Price': 1.48107}, {'Date': datetime.date(2024, 12, 1), 'Price': 1.52325}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.3809}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.3809}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Oasys_OAS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04668}]
success ya
UWAGA
db_OASUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.052134       NaN  ...              0                0       NaN
1    2023-01-02  0.052255       NaN  ...              0                0       NaN
2    2023-01-03  0.053693       NaN  ...              0                0       NaN
3    2023-01-04  0.052315       NaN  ...              0                0       NaN
4    2023-01-05  0.050267       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.046290  0.046193  ...              0                0  0.053716
557  2024-11-28  0.046490  0.046218  ...              0                0  0.053462
558  2024-11-29  0.046210  0.046217  ...              0                0  0.053208
559  2024-11-30  0.046120  0.046209  ...              0                0  0.052959
560  2024-12-01  0.046450  0.046229  ...              0                0  0.052731

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04668}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.04668}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.052134       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.052255       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.053693       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.052315       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.050267       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.046490  0.046218  ...            0.0              0.0  0.053462
558  2024-11-29  0.046210  0.046217  ...            0.0              0.0  0.053208
559  2024-11-30  0.046120  0.046209  ...            0.0              0.0  0.052959
560  2024-12-01  0.046450  0.046229  ...            0.0              0.0  0.052731
561  2024-12-02  0.046680       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Oasys_OAS
NECESSARRRY AAAA START
0
0
2024-03-22
2024-04-09
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
391  Oasys OAS  0.04668  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Altura_ALU
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.13908}]
success ya
UWAGA
db_ALUUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ALUUSD': no such table: db_ALUUSD
trying
 inicjacja duplicates
duplicate info
[False]
Comedian_BAN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.13707}]
success ya
UWAGA
db_BANUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BANUSD': no such table: db_BANUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Bone_ShibaSwap_BONE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.59279}]
success ya
UWAGA
db_BONEUSD
COINDBBB
                    Date     Close     EMA23     EMA82 SMA200
0    2021-09-20 00:00:00  0.880300       NaN       NaN   None
1    2021-09-27 00:00:00  0.945103       NaN       NaN   None
2    2021-10-04 00:00:00  2.180576       NaN       NaN   None
3    2021-10-11 00:00:00  1.513926       NaN       NaN   None
4    2021-10-18 00:00:00  1.905654       NaN       NaN   None
..                   ...       ...       ...       ...    ...
126  2024-02-19 00:00:00  0.608282  0.714744  0.899015   None
127  2024-02-26 00:00:00  0.844474  0.725555  0.897701   None
128  2024-03-04 00:00:00  1.145979  0.760590  0.903684   None
129  2024-03-11 00:00:00  0.950151  0.776387  0.904803   None
130  2024-03-18 00:00:00  0.944708  0.790414  0.905765   None

[131 rows x 5 columns]
last_db_date_data
2024-03-18
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.57847}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.56854}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.56619}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.56619}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.57882}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.56493}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.63385}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.61283}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.62878}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.61913}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.60427}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.64941}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.63923}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.63153}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.61546}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.61504}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.62952}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.62952}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.69094}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.68223}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.68434}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.65168}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.63686}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.67726}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.64368}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.62618}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.62837}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.65059}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.62948}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.62772}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.58906}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.60157}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.58518}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.55333}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.57562}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.55246}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.54798}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.54862}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.54862}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.52976}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.48944}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.51983}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.51462}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.50266}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.50347}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.50851}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.46904}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.50564}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.49372}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.50414}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.496}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.49069}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.50794}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.50354}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.46831}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.43832}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.50889}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.50545}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.51524}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.50636}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.51511}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.54088}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.53458}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.47681}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.54194}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.54339}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.54162}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.54111}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.64089}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.59279}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.59279}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Alethea_Liquid_Intelligence_ALI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01663}]
success ya
UWAGA
db_ALIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ALIUSD': no such table: db_ALIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Synapse_SYN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.68794}]
success ya
UWAGA
db_SYNUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2021-09-27  1.535680       NaN  ...       NaN              0                0
1    2021-10-04  2.944781       NaN  ...       NaN              0                0
2    2021-10-11  2.673845       NaN  ...       NaN              0                0
3    2021-10-18  4.249604       NaN  ...       NaN              0                0
4    2021-10-25  3.076551       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
642  2024-11-27  0.586150  0.548748  ...  0.635953              0                0
643  2024-11-28  0.564520  0.550062  ...  0.633447              0                0
644  2024-11-29  0.576330  0.552251  ...  0.631442              0                0
645  2024-11-30  0.576130  0.554241  ...  0.629502              0                0
646  2024-12-01  0.728820  0.568789  ...  0.632987              0                0

[647 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.68794}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.68794}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2021-09-27  1.535680       NaN  ...       NaN            0.0              0.0
1    2021-10-04  2.944781       NaN  ...       NaN            0.0              0.0
2    2021-10-11  2.673845       NaN  ...       NaN            0.0              0.0
3    2021-10-18  4.249604       NaN  ...       NaN            0.0              0.0
4    2021-10-25  3.076551       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
643  2024-11-28  0.564520  0.550062  ...  0.633447            0.0              0.0
644  2024-11-29  0.576330  0.552251  ...  0.631442            0.0              0.0
645  2024-11-30  0.576130  0.554241  ...  0.629502            0.0              0.0
646  2024-12-01  0.728820  0.568789  ...  0.632987            0.0              0.0
647  2024-12-02  0.687940       NaN  ...       NaN            NaN              NaN

[648 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Synapse_SYN
NECESSARRRY AAAA START
0
0
2024-04-24
2024-05-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
396  Synapse SYN  0.68794  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Iagon_IAG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.36175}]
success ya
UWAGA
db_IAGUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_IAGUSD': no such table: db_IAGUSD
trying
 inicjacja duplicates
duplicate info
[False]
Helium_Mobile_MOBILE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0015}]
success ya
UWAGA
db_MOBILEUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-04-21  0.000356       NaN  ...              0                0       NaN
1    2023-04-22  0.000305       NaN  ...              0                0       NaN
2    2023-04-23  0.000219       NaN  ...              0                0       NaN
3    2023-04-24  0.000158       NaN  ...              0                0       NaN
4    2023-04-25  0.000301       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
446  2024-11-27  0.000840  0.000985  ...              0                0  0.001384
447  2024-11-28  0.000820  0.000971  ...              0                0  0.001364
448  2024-11-29  0.000810  0.000958  ...              0                0  0.001345
449  2024-11-30  0.000800  0.000945  ...              0                0  0.001326
450  2024-12-01  0.001210  0.000967  ...              0                0  0.001322

[451 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0015}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0015}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-04-21  0.000356       NaN  ...            0.0              0.0       NaN
1    2023-04-22  0.000305       NaN  ...            0.0              0.0       NaN
2    2023-04-23  0.000219       NaN  ...            0.0              0.0       NaN
3    2023-04-24  0.000158       NaN  ...            0.0              0.0       NaN
4    2023-04-25  0.000301       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
447  2024-11-28  0.000820  0.000971  ...            0.0              0.0  0.001364
448  2024-11-29  0.000810  0.000958  ...            0.0              0.0  0.001345
449  2024-11-30  0.000800  0.000945  ...            0.0              0.0  0.001326
450  2024-12-01  0.001210  0.000967  ...            0.0              0.0  0.001322
451  2024-12-02  0.001500       NaN  ...            NaN              NaN       NaN

[452 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Helium_Mobile_MOBILE
NECESSARRRY AAAA START
0
0
2024-04-07
2024-04-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                     Name   Price  ...  middle_flip_date  long_flip_date
398  Helium Mobile MOBILE  0.0015  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
dKargo_DKA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02862}]
success ya
UWAGA
db_DKAUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00  0.026012  ...              0                0
1    2023-01-02 00:00:00  0.026151  ...              0                0
2    2023-01-03 00:00:00  0.025663  ...              0                0
3    2023-01-04 00:00:00  0.027782  ...              0                0
4    2023-01-05 00:00:00  0.028107  ...              0                0
..                   ...       ...  ...            ...              ...
468           2024-04-13  0.036160  ...              1                1
469           2024-04-14  0.033210  ...              0                1
470           2024-04-15  0.033360  ...              0                1
471           2024-04-16  0.032800  ...              0                0
472           2024-04-17  0.030150  ...              0                0

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.02994}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.02963}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.02968}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.02968}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.02955}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.02938}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.03028}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.03018}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.03051}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.03057}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.02996}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.02998}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.03072}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.03042}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.03028}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.03042}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.03041}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.03041}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.03054}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.03016}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.0295}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.02897}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.02892}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.0289}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.02759}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.02593}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.02629}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.02609}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.02587}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.0268}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.02565}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.025}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.02491}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.02394}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.02406}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.02424}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.02385}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.02264}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.02264}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.01953}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.01901}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.01995}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.0198}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.02002}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.01985}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.02021}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.01931}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.02042}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.02058}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.02088}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.02074}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.0205}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.02032}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.02033}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.02549}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.02477}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.02506}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.02388}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.02341}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.02319}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.02426}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.02622}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.02758}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.02826}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.02937}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.0291}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.02974}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.03007}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.0299}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02862}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02862}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
NeuralAI_NEURAL
[{'Date': datetime.date(2024, 12, 2), 'Price': 13.3528}]
success ya
UWAGA
db_NEURALUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_NEURALUSD': no such table: db_NEURALUSD
trying
 inicjacja duplicates
duplicate info
[False]
X_Empire_X
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00019}]
success ya
UWAGA
db_XUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_XUSD': no such table: db_XUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
RSK_Infrastructure_Framework_RIF
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.13061}]
success ya
UWAGA
db_RIFUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.041243       NaN  ...              0                0       NaN
1    2023-01-02  0.041796       NaN  ...              0                0       NaN
2    2023-01-03  0.042414       NaN  ...              0                0       NaN
3    2023-01-04  0.042534       NaN  ...              0                0       NaN
4    2023-01-05  0.042612       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.166810  0.205678  ...              1                0  0.217106
487  2024-05-02  0.176250  0.203226  ...              1                0  0.215672
488  2024-05-03  0.189730  0.202101  ...              1                0  0.214762
489  2024-05-04  0.190640  0.201146  ...              1                0  0.213916
490  2024-05-05  0.190640  0.200271  ...              1                0  0.213099

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.16995}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.15883}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.15845}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.15845}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.15525}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.15069}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.16207}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.15786}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.16682}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.16234}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.15523}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.16964}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.1695}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.16637}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.15492}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.15823}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.1584}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.1584}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.165}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.16349}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.16326}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.16316}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.16074}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.15963}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.15974}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.16267}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.17457}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.18369}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.17531}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.17304}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.15164}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.14896}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.14935}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.13452}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.14328}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.13505}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.13267}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.10971}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.10971}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.1141}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.09902}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.09991}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.09829}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.09802}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.09734}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.09869}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.09336}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.09871}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.09588}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.09669}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.09417}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.09194}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.09426}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.09646}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.11001}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.12046}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.11628}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.12756}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.11682}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.11337}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.12027}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.12725}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.13003}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.12252}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.13818}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.1374}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.13217}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.13106}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.13933}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.13061}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.13061}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Nakamoto_Games_NAKA
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.40454}]
success ya
UWAGA
db_NAKAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.086834       NaN  ...              0                0       NaN
1      2023-01-02  0.092678       NaN  ...              0                0       NaN
2      2023-01-03  0.087607       NaN  ...              0                0       NaN
3      2023-01-04  0.088710       NaN  ...              0                0       NaN
4      2023-01-05  0.081811       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.260500  1.069682  ...              1                0  1.069762
27963  2024-11-28  1.179100  1.078800  ...              1                1  1.073598
27964  2024-11-29  1.213900  1.090058  ...              1                1  1.078521
27965  2024-11-30  1.357600  1.112353  ...              1                1  1.088313
27966  2024-12-01  1.414100  1.137499  ...              1                1  1.099745

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.40454}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.40454}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.086834       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.092678       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.087607       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.088710       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.081811       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.179100  1.078800  ...            1.0              1.0  1.073598
27964  2024-11-29  1.213900  1.090058  ...            1.0              1.0  1.078521
27965  2024-11-30  1.357600  1.112353  ...            1.0              1.0  1.088313
27966  2024-12-01  1.414100  1.137499  ...            1.0              1.0  1.099745
27967  2024-12-02  1.404540       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Nakamoto_Games_NAKA
NECESSARRRY AAAA START
1
1
2024-11-28
2024-11-26
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
403  Nakamoto Games NAKA  1.40454  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
STASIS_EURO_EURS
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.05087}]
success ya
UWAGA
db_EURSUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    1.065890  ...              0                0
1    2023-01-02 00:00:00    1.063638  ...              0                0
2    2023-01-03 00:00:00    1.052844  ...              0                0
3    2023-01-04 00:00:00    1.057128  ...              0                0
4    2023-01-05 00:00:00    1.051326  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  106.212000  ...              1                1
469           2024-04-14  105.188000  ...              1                1
470           2024-04-15  106.067000  ...              1                1
471           2024-04-16  106.435000  ...              1                1
472           2024-04-17    1.065090  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 1.0735}, {'Date': datetime.date(2024, 5, 10), 'Price': 1.07854}, {'Date': datetime.date(2024, 5, 11), 'Price': 1.07735}, {'Date': datetime.date(2024, 5, 12), 'Price': 1.07735}, {'Date': datetime.date(2024, 5, 13), 'Price': 1.07892}, {'Date': datetime.date(2024, 5, 14), 'Price': 1.08254}, {'Date': datetime.date(2024, 5, 15), 'Price': 1.0904}, {'Date': datetime.date(2024, 5, 16), 'Price': 1.08723}, {'Date': datetime.date(2024, 5, 17), 'Price': 1.08576}, {'Date': datetime.date(2024, 5, 18), 'Price': 1.08759}, {'Date': datetime.date(2024, 5, 19), 'Price': 1.08719}, {'Date': datetime.date(2024, 5, 20), 'Price': 1.09029}, {'Date': datetime.date(2024, 5, 21), 'Price': 1.0899}, {'Date': datetime.date(2024, 5, 22), 'Price': 1.08006}, {'Date': datetime.date(2024, 5, 23), 'Price': 1.08126}, {'Date': datetime.date(2024, 5, 24), 'Price': 1.08346}, {'Date': datetime.date(2024, 5, 25), 'Price': 1.08386}, {'Date': datetime.date(2024, 5, 26), 'Price': 1.08386}, {'Date': datetime.date(2024, 5, 27), 'Price': 1.08829}, {'Date': datetime.date(2024, 5, 28), 'Price': 1.08522}, {'Date': datetime.date(2024, 5, 29), 'Price': 1.08079}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.08534}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.08408}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.08597}, {'Date': datetime.date(2024, 6, 2), 'Price': 1.08219}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.08445}, {'Date': datetime.date(2024, 6, 4), 'Price': 1.0869}, {'Date': datetime.date(2024, 6, 5), 'Price': 1.08471}, {'Date': datetime.date(2024, 6, 6), 'Price': 1.09046}, {'Date': datetime.date(2024, 6, 7), 'Price': 1.08134}, {'Date': datetime.date(2024, 6, 8), 'Price': 1.07923}, {'Date': datetime.date(2024, 6, 9), 'Price': 1.08051}, {'Date': datetime.date(2024, 6, 10), 'Price': 1.07685}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.07445}, {'Date': datetime.date(2024, 6, 12), 'Price': 1.08326}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.07934}, {'Date': datetime.date(2024, 6, 14), 'Price': 1.07325}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.07167}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.07167}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.07839}, {'Date': datetime.date(2024, 6, 18), 'Price': 1.07653}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.07492}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.07792}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.07055}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.06936}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.0711}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.07994}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.07832}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.07412}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.07433}, {'Date': datetime.date(2024, 6, 28), 'Price': 1.07299}, {'Date': datetime.date(2024, 6, 29), 'Price': 1.0701}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.07138}, {'Date': datetime.date(2024, 7, 1), 'Price': 1.07147}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.05836}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.06046}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.05907}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.05658}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.049}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.0419}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.04454}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.04711}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.04876}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.0504}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.05396}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.05263}, {'Date': datetime.date(2024, 11, 29), 'Price': 1.05575}, {'Date': datetime.date(2024, 11, 30), 'Price': 1.05699}, {'Date': datetime.date(2024, 12, 1), 'Price': 1.05998}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.05087}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.05087}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Shentu_CTK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.9269}]
success ya
UWAGA
db_CTKUSD
COINDBBB
                    Date     Close     EMA23     EMA82    SMA200
0    2023-01-01 00:00:00  1.011139       NaN       NaN       NaN
1    2023-01-02 00:00:00  1.011139       NaN       NaN       NaN
2    2023-01-03 00:00:00  1.011139       NaN       NaN       NaN
3    2023-01-04 00:00:00  1.011139       NaN       NaN       NaN
4    2023-01-05 00:00:00  1.011139       NaN       NaN       NaN
..                   ...       ...       ...       ...       ...
369  2024-01-05 00:00:00  1.011139  1.011139  1.011139  1.011139
370  2024-01-06 00:00:00  1.011139  1.011139  1.011139  1.011139
371  2024-01-07 00:00:00  1.011139  1.011139  1.011139  1.011139
372  2024-01-08 00:00:00  1.011139  1.011139  1.011139  1.011139
373  2024-01-09 00:00:00  1.011139  1.011139  1.011139  1.011139

[374 rows x 5 columns]
last_db_date_data
2024-01-09
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.65184}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.65146}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.65146}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.62761}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.63553}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.66523}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.66697}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.68859}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.69011}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.67291}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.71005}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.71477}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.70695}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.69484}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.67521}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.70477}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.70477}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.70812}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.69448}, {'Date': datetime.date(2024, 5, 29), 'Price': 1.04781}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.89137}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.8646}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.85074}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.85518}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.82694}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.83875}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.88597}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.88304}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.84519}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.77779}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.75017}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.74564}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.75968}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.75105}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.83343}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.80723}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.88264}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.88264}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.76324}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.72461}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.80883}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.77074}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.76217}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.75343}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.82561}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.75892}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.79574}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.76409}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.76677}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.72647}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.71662}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.74878}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.72294}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.73553}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.92691}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.81838}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.76938}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.77545}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.76889}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.7769}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.84093}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.8518}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.80622}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.85581}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.89229}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.90874}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.89902}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.91409}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.9269}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.9269}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Dusk_Network_DUSK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.27688}]
success ya
UWAGA
db_DUSKUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.082006       NaN  ...              0                0       NaN
1    2023-01-02  0.082659       NaN  ...              0                0       NaN
2    2023-01-03  0.083619       NaN  ...              0                0       NaN
3    2023-01-04  0.085134       NaN  ...              0                0       NaN
4    2023-01-05  0.085631       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.235140  0.254727  ...              0                0  0.307153
557  2024-11-28  0.237680  0.253306  ...              0                0  0.304715
558  2024-11-29  0.253980  0.253362  ...              0                0  0.302935
559  2024-11-30  0.253100  0.253341  ...              0                0  0.301186
560  2024-12-01  0.294570  0.256776  ...              0                0  0.300954

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.27688}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.27688}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.082006       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.082659       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.083619       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.085134       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.085631       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.237680  0.253306  ...            0.0              0.0  0.304715
558  2024-11-29  0.253980  0.253362  ...            0.0              0.0  0.302935
559  2024-11-30  0.253100  0.253341  ...            0.0              0.0  0.301186
560  2024-12-01  0.294570  0.256776  ...            0.0              0.0  0.300954
561  2024-12-02  0.276880       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Dusk_Network_DUSK
NECESSARRRY AAAA START
0
0
2024-06-19
2024-06-18
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
406  Dusk Network DUSK  0.27688  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Seedify.fund_SFUND
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.04614}]
success ya
UWAGA
db_SFUNDUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.788639       NaN  ...              0                0       NaN
1      2023-01-02  0.800317       NaN  ...              0                0       NaN
2      2023-01-03  0.794858       NaN  ...              0                0       NaN
3      2023-01-04  0.854885       NaN  ...              0                0       NaN
4      2023-01-05  0.838276       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.550000  1.428042  ...              1                1  1.379604
27963  2024-11-28  1.531200  1.436639  ...              0                1  1.384923
27964  2024-11-29  1.568300  1.447610  ...              1                1  1.391358
27965  2024-11-30  1.927900  1.487635  ...              1                1  1.410184
27966  2024-12-01  2.089000  1.537748  ...              1                1  1.434002

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.04614}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.04614}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.788639       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.800317       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.794858       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.854885       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.838276       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.531200  1.436639  ...            0.0              1.0  1.384923
27964  2024-11-29  1.568300  1.447610  ...            1.0              1.0  1.391358
27965  2024-11-30  1.927900  1.487635  ...            1.0              1.0  1.410184
27966  2024-12-01  2.089000  1.537748  ...            1.0              1.0  1.434002
27967  2024-12-02  2.046140       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Seedify
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name    Price  ...  middle_flip_date  long_flip_date
407  Seedify.fund SFUND  2.04614  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Landwolf_0x67_WOLF
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00014}]
success ya
UWAGA
db_WOLFUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_WOLFUSD': no such table: db_WOLFUSD
trying
 inicjacja duplicates
duplicate info
[False]
Steem_STEEM
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.26879}]
success ya
UWAGA
db_STEEMUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.147269       NaN  ...              0                0       NaN
1    2023-01-02  0.148047       NaN  ...              0                0       NaN
2    2023-01-03  0.146025       NaN  ...              0                0       NaN
3    2023-01-04  0.148585       NaN  ...              0                0       NaN
4    2023-01-05  0.149455       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.265140  0.291240  ...              1                0  0.295551
487  2024-05-02  0.300520  0.292013  ...              1                0  0.295725
488  2024-05-03  0.303380  0.292960  ...              1                0  0.295994
489  2024-05-04  0.301650  0.293684  ...              1                0  0.296193
490  2024-05-05  0.301650  0.294348  ...              1                0  0.296384

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.28055}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.27845}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.27479}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.27479}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.26484}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.26452}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.27672}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.27609}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.28049}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.28104}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.27021}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.28431}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.28479}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.27863}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.27264}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.27398}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.27796}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.27796}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.28183}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.29112}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.32621}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.29217}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.2802}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.27375}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.27015}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.26737}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.26677}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.27151}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.26792}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.26716}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.24751}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.24461}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.24487}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.23124}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.24235}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.23442}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.23101}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.22688}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.22688}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.20171}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.18586}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.19404}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.19333}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.19516}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.20027}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.20071}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.19174}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.20117}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.19904}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.2002}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.20018}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.19591}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.19815}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.19853}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.20526}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.21584}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.21994}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.21422}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.21524}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.21051}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.22278}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.24336}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.25326}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.24839}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.26186}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.25817}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.26419}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.26727}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.26801}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.26879}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.26879}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
H2O_DAO_H2O
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15427}]
success ya
UWAGA
db_H2OUSD
COINDBBB
           Date    Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-03-14  0.12100       NaN  ...              0                0       NaN
1    2023-03-15  0.11880       NaN  ...              0                0       NaN
2    2023-03-16  0.12000       NaN  ...              0                0       NaN
3    2023-03-17  0.12100       NaN  ...              0                0       NaN
4    2023-03-18  0.12060       NaN  ...              0                0       NaN
..          ...      ...       ...  ...            ...              ...       ...
484  2024-11-27  0.15520  0.183423  ...              0                0  0.193615
485  2024-11-28  0.15219  0.180821  ...              0                0  0.192161
486  2024-11-29  0.15598  0.178751  ...              0                0  0.190892
487  2024-11-30  0.15519  0.176787  ...              0                0  0.189639
488  2024-12-01  0.15519  0.174987  ...              0                0  0.188430

[489 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15427}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15427}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-03-14  0.12100       NaN  ...            0.0              0.0       NaN
1    2023-03-15  0.11880       NaN  ...            0.0              0.0       NaN
2    2023-03-16  0.12000       NaN  ...            0.0              0.0       NaN
3    2023-03-17  0.12100       NaN  ...            0.0              0.0       NaN
4    2023-03-18  0.12060       NaN  ...            0.0              0.0       NaN
..          ...      ...       ...  ...            ...              ...       ...
485  2024-11-28  0.15219  0.180821  ...            0.0              0.0  0.192161
486  2024-11-29  0.15598  0.178751  ...            0.0              0.0  0.190892
487  2024-11-30  0.15519  0.176787  ...            0.0              0.0  0.189639
488  2024-12-01  0.15519  0.174987  ...            0.0              0.0  0.188430
489  2024-12-02  0.15427       NaN  ...            NaN              NaN       NaN

[490 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted H2O_DAO_H2O
NECESSARRRY AAAA START
0
0
2024-06-24
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
410  H2O DAO H2O  0.15427  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ark_ARK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.68741}]
success ya
UWAGA
db_ARKUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00  0.239034  ...              0                0
1    2023-01-02 00:00:00  0.241883  ...              0                0
2    2023-01-03 00:00:00  0.240848  ...              0                0
3    2023-01-04 00:00:00  0.244628  ...              0                0
4    2023-01-05 00:00:00  0.241754  ...              0                0
..                   ...       ...  ...            ...              ...
468           2024-04-13  0.819150  ...              0                1
469           2024-04-14  0.748100  ...              0                1
470           2024-04-15  0.729790  ...              0                1
471           2024-04-16  0.712550  ...              0                1
472           2024-04-17  0.688560  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.81773}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.85109}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.82957}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.82957}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.79109}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.82706}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.84753}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.8453}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.84499}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.83294}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.80312}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.85365}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.85226}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.83242}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.82906}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.8298}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.82956}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.82956}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.84548}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.83849}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.84133}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.81863}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.80328}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.81915}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.79529}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.77101}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.77181}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.79828}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.81411}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.84153}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.83888}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.88984}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.84461}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.78585}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.89476}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.83028}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.7965}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.82293}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.82293}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.72421}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.62045}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.59193}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.57729}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.54357}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.53347}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.5456}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.46573}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.48306}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.4481}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.44489}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.43047}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.42355}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.42688}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.42975}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.61567}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.61825}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.60861}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.58509}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.58377}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.57634}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.60205}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.63953}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.69748}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.65842}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.69604}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.71983}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.72625}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.7194}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.72092}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.68741}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.68741}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Ozone_Chain_OZO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.20036}]
success ya
UWAGA
db_OZOUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_OZOUSD': no such table: db_OZOUSD
trying
 inicjacja duplicates
duplicate info
[False]
Kyber_Network_KNC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.68086}]
success ya
UWAGA
db_KNCUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.456740       NaN  ...              0                0       NaN
1    2023-01-02  0.467892       NaN  ...              0                0       NaN
2    2023-01-03  0.469671       NaN  ...              0                0       NaN
3    2023-01-04  0.487664       NaN  ...              0                0       NaN
4    2023-01-05  0.482719       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.669390  0.594846  ...              0                0  0.615766
557  2024-11-28  0.657350  0.600055  ...              0                0  0.617225
558  2024-11-29  0.692070  0.607723  ...              1                0  0.619852
559  2024-11-30  0.691460  0.614701  ...              1                0  0.622364
560  2024-12-01  0.710710  0.622702  ...              1                0  0.625464

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.68086}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.68086}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.456740       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.467892       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.469671       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.487664       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.482719       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.657350  0.600055  ...            0.0              0.0  0.617225
558  2024-11-29  0.692070  0.607723  ...            1.0              0.0  0.619852
559  2024-11-30  0.691460  0.614701  ...            1.0              0.0  0.622364
560  2024-12-01  0.710710  0.622702  ...            1.0              0.0  0.625464
561  2024-12-02  0.680860       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Kyber_Network_KNC
NECESSARRRY AAAA START
1
1
2024-12-02
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
413  Kyber Network KNC  0.68086  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Coreum_COREUM
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.32581}]
success ya
UWAGA
db_COREUMUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_COREUMUSD': no such table: db_COREUMUSD
trying
 inicjacja duplicates
duplicate info
[False]
Phala.Network_PHA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.163}]
success ya
UWAGA
db_PHAUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.106655       NaN  ...              0                0       NaN
1    2023-01-02  0.109612       NaN  ...              0                0       NaN
2    2023-01-03  0.108443       NaN  ...              0                0       NaN
3    2023-01-04  0.113050       NaN  ...              0                0       NaN
4    2023-01-05  0.111278       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.152660  0.139301  ...              0                0  0.155616
557  2024-11-28  0.161700  0.141168  ...              0                0  0.155829
558  2024-11-29  0.166160  0.143250  ...              0                0  0.156192
559  2024-11-30  0.167440  0.145266  ...              0                0  0.156586
560  2024-12-01  0.173270  0.147600  ...              1                0  0.157172

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.163}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.163}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.106655       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.109612       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.108443       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.113050       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.111278       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.161700  0.141168  ...            0.0              0.0  0.155829
558  2024-11-29  0.166160  0.143250  ...            0.0              0.0  0.156192
559  2024-11-30  0.167440  0.145266  ...            0.0              0.0  0.156586
560  2024-12-01  0.173270  0.147600  ...            1.0              0.0  0.157172
561  2024-12-02  0.163000       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Phala
NECESSARRRY AAAA START
0
0
2024-04-28
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name  Price  ...  middle_flip_date  long_flip_date
415  Phala.Network PHA  0.163  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Cheems_(cheems.pet)_CHEEMS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_CHEEMSUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_CHEEMSUSD': no such table: db_CHEEMSUSD
trying
 inicjacja duplicates
duplicate info
[False]
Maverick_Protocol_MAV
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.28866}]
success ya
UWAGA
db_MAVUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.200838       NaN  ...              0                0       NaN
1      2023-01-02  0.200854       NaN  ...              0                0       NaN
2      2023-01-03  0.205950       NaN  ...              0                0       NaN
3      2023-01-04  0.205951       NaN  ...              0                0       NaN
4      2023-01-05  0.177946       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
24482  2024-11-27  0.250300  0.195901  ...              1                1  0.187415
24483  2024-11-28  0.259000  0.201159  ...              1                1  0.189927
24484  2024-11-29  0.255000  0.205646  ...              1                1  0.192210
24485  2024-11-30  0.292600  0.212892  ...              1                1  0.195732
24486  2024-12-01  0.303000  0.220401  ...              1                1  0.199496

[24487 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.28866}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.28866}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
[*********************100%%**********************]  1 of 1 completed
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.200838       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.200854       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.205950       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.205951       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.177946       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
24483  2024-11-28  0.259000  0.201159  ...            1.0              1.0  0.189927
24484  2024-11-29  0.255000  0.205646  ...            1.0              1.0  0.192210
24485  2024-11-30  0.292600  0.212892  ...            1.0              1.0  0.195732
24486  2024-12-01  0.303000  0.220401  ...            1.0              1.0  0.199496
24487  2024-12-02  0.288660       NaN  ...            NaN              NaN       NaN

[24488 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Maverick_Protocol_MAV
NECESSARRRY AAAA START
1
1
2024-11-24
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                      Name    Price  ...  middle_flip_date  long_flip_date
417  Maverick Protocol MAV  0.28866  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Fusionist_ACE
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.05057}]
success ya
UWAGA
db_ACEUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-12-18  13.961186  ...                0       NaN
1      2023-12-19  13.315726  ...                0       NaN
2      2023-12-20  13.394404  ...                0       NaN
3      2023-12-21  15.453847  ...                0       NaN
4      2023-12-22  13.284805  ...                0       NaN
...           ...        ...  ...              ...       ...
27611  2024-11-27   0.004931  ...                1  0.003041
27612  2024-11-28   0.005145  ...                1  0.003115
27613  2024-11-29   0.005549  ...                1  0.003200
27614  2024-11-30   0.004843  ...                1  0.003258
27615  2024-12-01   0.004765  ...                1  0.003311

[27616 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.05057}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.05057}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up     EMA56
0      2023-12-18  13.961186  ...              0.0       NaN
1      2023-12-19  13.315726  ...              0.0       NaN
2      2023-12-20  13.394404  ...              0.0       NaN
3      2023-12-21  15.453847  ...              0.0       NaN
4      2023-12-22  13.284805  ...              0.0       NaN
...           ...        ...  ...              ...       ...
27612  2024-11-28   0.005145  ...              1.0  0.003115
27613  2024-11-29   0.005549  ...              1.0  0.003200
27614  2024-11-30   0.004843  ...              1.0  0.003258
27615  2024-12-01   0.004765  ...              1.0  0.003311
27616  2024-12-02   3.050570  ...              NaN       NaN

[27617 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Fusionist_ACE
NECESSARRRY AAAA START
1
1
2024-10-31
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
418  Fusionist ACE  3.05057  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
DeepBook_Protocol_DEEP
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04962}]
success ya
UWAGA
db_DEEPUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_DEEPUSD': no such table: db_DEEPUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
CUDOS_CUDOS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01252}]
success ya
UWAGA
db_CUDOSUSD
COINDBBB
           Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-10-28  0.002247       NaN  ...       NaN              0                0
1    2023-10-29  0.002248       NaN  ...       NaN              0                0
2    2023-10-30  0.002235       NaN  ...       NaN              0                0
3    2023-10-31  0.002103       NaN  ...       NaN              0                0
4    2023-11-01  0.002441       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
331  2024-09-23  0.012099  0.009459  ...  0.014354              0                1
332  2024-09-24  0.012114  0.009681  ...  0.014270              0                1
333  2024-09-25  0.012147  0.009886  ...  0.014188              0                1
334  2024-09-26  0.012397  0.010095  ...  0.014118              0                1
335  2024-09-27  0.012805  0.010321  ...  0.014047              0                1

[336 rows x 7 columns]
last_db_date_data
2024-09-27
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 11, 17), 'Price': 0.00919}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.01038}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.00988}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00931}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.01008}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00843}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.00977}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.0099}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.01127}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.01107}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.00982}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.01241}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.01205}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.01272}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.01334}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01252}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01252}]
there are no available prices for all missing dates
Downloading from Kucoin
CRITICAL 1
"None of [Index([0, 2], dtype='int64')] are in the [columns]"
DATA VALIDATION PASSED!
successfully converted CUDOS_CUDOS
DATA VALIDATION PASSED!
successfully converted CUDOS_CUDOS
NECESSARRRY AAAA START
1
0
2024-09-23
2024-06-11
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
420  CUDOS CUDOS  0.01252  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Highstreet_HIGH
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.79807}]
success ya
UWAGA
db_HIGHUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.858309       NaN  ...              0                0       NaN
1      2023-01-02  0.866132       NaN  ...              0                0       NaN
2      2023-01-03  0.867640       NaN  ...              0                0       NaN
3      2023-01-04  0.898934       NaN  ...              0                0       NaN
4      2023-01-05  0.879551       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.754000  1.478279  ...              0                1  1.412971
27963  2024-11-28  1.747000  1.500673  ...              0                1  1.424691
27964  2024-11-29  1.809000  1.526367  ...              0                1  1.438175
27965  2024-11-30  1.888000  1.556503  ...              0                1  1.453959
27966  2024-12-01  1.854000  1.581294  ...              0                1  1.467995

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.79807}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.79807}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.858309       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.866132       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.867640       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.898934       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.879551       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.747000  1.500673  ...            0.0              1.0  1.424691
27964  2024-11-29  1.809000  1.526367  ...            0.0              1.0  1.438175
27965  2024-11-30  1.888000  1.556503  ...            0.0              1.0  1.453959
27966  2024-12-01  1.854000  1.581294  ...            0.0              1.0  1.467995
27967  2024-12-02  1.798070       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Highstreet_HIGH
NECESSARRRY AAAA START
1
0
2024-11-16
2024-06-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
421  Highstreet HIGH  1.79807  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Unizen_ZCX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.17906}]
success ya
UWAGA
db_ZCXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.082370       NaN  ...              0                0       NaN
1    2023-01-02  0.083286       NaN  ...              0                0       NaN
2    2023-01-03  0.076077       NaN  ...              0                0       NaN
3    2023-01-04  0.072892       NaN  ...              0                0       NaN
4    2023-01-05  0.073736       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.127880  0.116760  ...              0                0  0.141329
557  2024-11-28  0.129560  0.117827  ...              0                0  0.140916
558  2024-11-29  0.143590  0.119974  ...              0                0  0.141010
559  2024-11-30  0.150740  0.122538  ...              0                0  0.141351
560  2024-12-01  0.180990  0.127409  ...              1                0  0.142742

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.17906}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.17906}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.082370       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.083286       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.076077       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.072892       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.073736       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.129560  0.117827  ...            0.0              0.0  0.140916
558  2024-11-29  0.143590  0.119974  ...            0.0              0.0  0.141010
559  2024-11-30  0.150740  0.122538  ...            0.0              0.0  0.141351
560  2024-12-01  0.180990  0.127409  ...            1.0              0.0  0.142742
561  2024-12-02  0.179060       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Unizen_ZCX
NECESSARRRY AAAA START
0
1
2024-05-10
2024-12-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
422  Unizen ZCX  0.17906  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Hooked_Protocol_HOOK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.59429}]
success ya
UWAGA
db_HOOKUSD
COINDBBB
                    Date      Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00   1.339703  ...              0                0
1    2023-01-02 00:00:00   1.314888  ...              0                0
2    2023-01-03 00:00:00   1.331079  ...              0                0
3    2023-01-04 00:00:00   1.420528  ...              0                0
4    2023-01-05 00:00:00   1.360644  ...              0                0
..                   ...        ...  ...            ...              ...
468           2024-04-13  10.049000  ...              0                1
469           2024-04-14   0.902700  ...              0                1
470           2024-04-15   0.870190  ...              0                1
471           2024-04-16   0.903450  ...              0                1
472           2024-04-17   0.871150  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.87566}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.84912}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.84657}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.84657}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.81465}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.78098}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.84428}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.82871}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.84835}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.8277}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.77955}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.85734}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.86167}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.90227}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.9386}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.92607}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.91944}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.91944}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.92102}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.9063}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.88812}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.88728}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.88488}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.88003}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.90826}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.91282}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.9267}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.92746}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.91896}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.88758}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.79755}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.77744}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.78082}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.7026}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.74668}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.70939}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.69192}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.68264}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.68264}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.63203}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.5635}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.60512}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.59339}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.59574}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.58865}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.57987}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.55486}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.57238}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.55956}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.56825}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.55342}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.5417}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.568}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.56966}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.40512}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.44246}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.42586}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.41086}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.42194}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.41449}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.43651}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.48829}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.51798}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.46006}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.52864}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.58177}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.57272}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.58859}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.63361}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.59429}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.59429}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Bounce_Token_AUCTION
[{'Date': datetime.date(2024, 12, 2), 'Price': 18.5433}]
success ya
UWAGA
db_AUCTIONUSD
COINDBBB
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   4.058314  ...                0        NaN
1      2023-01-02   4.064420  ...                0        NaN
2      2023-01-03   4.026516  ...                0        NaN
3      2023-01-04   4.084285  ...                0        NaN
4      2023-01-05   4.101033  ...                0        NaN
...           ...        ...  ...              ...        ...
15402  2024-11-27  16.870000  ...                1  14.080032
15403  2024-11-28  16.060000  ...                1  14.149505
15404  2024-11-29  16.410000  ...                1  14.228820
15405  2024-11-30  18.260000  ...                1  14.370265
15406  2024-12-01  19.590000  ...                1  14.553414

[15407 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 18.5433}, {'Date': datetime.date(2024, 12, 2), 'Price': 18.5433}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date      Close  ...  Middle_Trend_Up      EMA56
0      2023-01-01   4.058314  ...              0.0        NaN
1      2023-01-02   4.064420  ...              0.0        NaN
2      2023-01-03   4.026516  ...              0.0        NaN
3      2023-01-04   4.084285  ...              0.0        NaN
4      2023-01-05   4.101033  ...              0.0        NaN
...           ...        ...  ...              ...        ...
15403  2024-11-28  16.060000  ...              1.0  14.149505
15404  2024-11-29  16.410000  ...              1.0  14.228820
15405  2024-11-30  18.260000  ...              1.0  14.370265
15406  2024-12-01  19.590000  ...              1.0  14.553414
15407  2024-12-02  18.543300  ...              NaN        NaN

[15408 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Bounce_Token_AUCTION
NECESSARRRY AAAA START
1
1
2024-11-23
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                     Name    Price  ...  middle_flip_date  long_flip_date
424  Bounce Token AUCTION  18.5433  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Radio_Caca_RACA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00038}]
success ya
UWAGA
db_RACAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-03-14  0.000196       NaN  ...              0                0       NaN
1      2023-03-15  0.000186       NaN  ...              0                0       NaN
2      2023-03-16  0.000191       NaN  ...              0                0       NaN
3      2023-03-17  0.000205       NaN  ...              0                0       NaN
4      2023-03-18  0.000198       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27890  2024-11-27  0.000242  0.000219  ...              1                1  0.000202
27891  2024-11-28  0.000241  0.000221  ...              1                1  0.000204
27892  2024-11-29  0.000246  0.000223  ...              1                1  0.000205
27893  2024-11-30  0.000253  0.000226  ...              1                1  0.000207
27894  2024-12-01  0.000266  0.000229  ...              1                1  0.000209

[27895 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00038}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00038}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-03-14  0.000196       NaN  ...            0.0              0.0       NaN
1      2023-03-15  0.000186       NaN  ...            0.0              0.0       NaN
2      2023-03-16  0.000191       NaN  ...            0.0              0.0       NaN
3      2023-03-17  0.000205       NaN  ...            0.0              0.0       NaN
4      2023-03-18  0.000198       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27891  2024-11-28  0.000241  0.000221  ...            1.0              1.0  0.000204
27892  2024-11-29  0.000246  0.000223  ...            1.0              1.0  0.000205
27893  2024-11-30  0.000253  0.000226  ...            1.0              1.0  0.000207
27894  2024-12-01  0.000266  0.000229  ...            1.0              1.0  0.000209
27895  2024-12-02  0.000380       NaN  ...            NaN              NaN       NaN

[27896 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Radio_Caca_RACA
NECESSARRRY AAAA START
1
1
2024-09-24
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
425  Radio Caca RACA  0.00038  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MiL.k_MLK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.29558}]
success ya
UWAGA
db_MLKUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.203567       NaN  ...              0                0       NaN
1    2023-01-02  0.208438       NaN  ...              0                0       NaN
2    2023-01-03  0.206898       NaN  ...              0                0       NaN
3    2023-01-04  0.214070       NaN  ...              0                0       NaN
4    2023-01-05  0.212244       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.304290  0.272642  ...              0                0  0.293388
557  2024-11-28  0.300190  0.274937  ...              0                0  0.293626
558  2024-11-29  0.303000  0.277276  ...              0                0  0.293955
559  2024-11-30  0.301900  0.279328  ...              0                0  0.294234
560  2024-12-01  0.299030  0.280970  ...              0                0  0.294402

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.29558}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.29558}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.203567       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.208438       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.206898       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.214070       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.212244       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.300190  0.274937  ...            0.0              0.0  0.293626
558  2024-11-29  0.303000  0.277276  ...            0.0              0.0  0.293955
559  2024-11-30  0.301900  0.279328  ...            0.0              0.0  0.294234
560  2024-12-01  0.299030  0.280970  ...            0.0              0.0  0.294402
561  2024-12-02  0.295580       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted MiL
NECESSARRRY AAAA START
0
0
2024-04-15
2024-06-14
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
426  MiL.k MLK  0.29558  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Syscoin_SYS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15097}]
success ya
UWAGA
db_SYSUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.099883       NaN  ...              0                0       NaN
1    2023-01-02  0.101865       NaN  ...              0                0       NaN
2    2023-01-03  0.103645       NaN  ...              0                0       NaN
3    2023-01-04  0.103324       NaN  ...              0                0       NaN
4    2023-01-05  0.101766       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.133360  0.125205  ...              0                0  0.148687
557  2024-11-28  0.133280  0.125878  ...              0                0  0.148146
558  2024-11-29  0.131470  0.126344  ...              0                0  0.147561
559  2024-11-30  0.134070  0.126987  ...              0                0  0.147088
560  2024-12-01  0.142600  0.128289  ...              0                0  0.146930

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15097}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15097}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.099883       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.101865       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.103645       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.103324       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.101766       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.133280  0.125878  ...            0.0              0.0  0.148146
558  2024-11-29  0.131470  0.126344  ...            0.0              0.0  0.147561
559  2024-11-30  0.134070  0.126987  ...            0.0              0.0  0.147088
560  2024-12-01  0.142600  0.128289  ...            0.0              0.0  0.146930
561  2024-12-02  0.150970       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Syscoin_SYS
NECESSARRRY AAAA START
0
0
2024-04-30
2024-06-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
427  Syscoin SYS  0.15097  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ardor_ARDR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11955}]
success ya
UWAGA
db_ARDRUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.069316       NaN  ...              0                0       NaN
1    2023-01-02  0.068950       NaN  ...              0                0       NaN
2    2023-01-03  0.067447       NaN  ...              0                0       NaN
3    2023-01-04  0.067442       NaN  ...              0                0       NaN
4    2023-01-05  0.066631       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.096090  0.108181  ...              0                0  0.111410
487  2024-05-02  0.102770  0.107731  ...              1                0  0.111106
488  2024-05-03  0.106760  0.107650  ...              1                0  0.110954
489  2024-05-04  0.106270  0.107535  ...              1                0  0.110790
490  2024-05-05  0.106270  0.107429  ...              1                0  0.110631

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.10116}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.10148}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.10148}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.09915}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.0975}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.10284}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.1016}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.1046}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.10391}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.09998}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.10542}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.10473}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.10447}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.10176}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.1014}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.10202}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.10202}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.1055}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.10234}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.10099}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.09922}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.09749}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.09772}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.09684}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.09085}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.09233}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.09309}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.09235}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.09388}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.08878}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.08878}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.08803}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.08018}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.08344}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.07995}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.08033}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.07833}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.07833}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.0655}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.06199}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.06402}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.06374}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.0654}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.06548}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.06629}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.06368}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.06745}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.06491}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.06532}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.06531}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.06415}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.06644}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.06591}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.09592}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.09832}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.10067}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.09589}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.09498}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.09525}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.09798}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.10405}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.11563}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.11258}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.11873}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.11663}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.1185}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.11936}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.12367}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.11955}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.11955}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Hashflow_HFT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.24882}]
success ya
UWAGA
db_HFTUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.000009       NaN  ...       NaN              0                0
1      2023-01-02  0.000009       NaN  ...       NaN              0                0
2      2023-01-03  0.000009       NaN  ...       NaN              0                0
3      2023-01-04  0.000009       NaN  ...       NaN              0                0
4      2023-01-05  0.000009       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
27275  2024-11-27  0.236700  0.183834  ...  0.165014              1                1
27276  2024-11-28  0.232600  0.187898  ...  0.167385              1                1
27277  2024-11-29  0.237000  0.191990  ...  0.169828              1                1
27278  2024-11-30  0.251800  0.196974  ...  0.172704              1                1
27279  2024-12-01  0.254200  0.201743  ...  0.175564              1                1

[27280 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.24882}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.24882}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.000009       NaN  ...       NaN            0.0              0.0
1      2023-01-02  0.000009       NaN  ...       NaN            0.0              0.0
2      2023-01-03  0.000009       NaN  ...       NaN            0.0              0.0
3      2023-01-04  0.000009       NaN  ...       NaN            0.0              0.0
4      2023-01-05  0.000009       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
27276  2024-11-28  0.232600  0.187898  ...  0.167385            1.0              1.0
27277  2024-11-29  0.237000  0.191990  ...  0.169828            1.0              1.0
27278  2024-11-30  0.251800  0.196974  ...  0.172704            1.0              1.0
27279  2024-12-01  0.254200  0.201743  ...  0.175564            1.0              1.0
27280  2024-12-02  0.248820       NaN  ...       NaN            NaN              NaN

[27281 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Hashflow_HFT
NECESSARRRY AAAA START
1
1
2024-11-19
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
429  Hashflow HFT  0.24882  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
 remove duplicates sprawdzone
duplicate info
[False, None, None]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Prom_PROM
[{'Date': datetime.date(2024, 12, 2), 'Price': 6.45517}]
success ya
UWAGA
db_PROMUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  3.835956       NaN  ...              0                0       NaN
1      2023-01-02  3.846320       NaN  ...              0                0       NaN
2      2023-01-03  3.853266       NaN  ...              0                0       NaN
3      2023-01-04  3.927386       NaN  ...              0                0       NaN
4      2023-01-05  3.902097       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  6.480000  5.720316  ...              0                1  5.650151
27963  2024-11-28  6.387000  5.775873  ...              0                1  5.676006
27964  2024-11-29  6.500000  5.836217  ...              0                1  5.704918
27965  2024-11-30  6.769000  5.913949  ...              1                1  5.742254
27966  2024-12-01  6.731000  5.982036  ...              1                1  5.776947

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 6.45517}, {'Date': datetime.date(2024, 12, 2), 'Price': 6.45517}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  3.835956       NaN  ...            0.0              0.0       NaN
1      2023-01-02  3.846320       NaN  ...            0.0              0.0       NaN
2      2023-01-03  3.853266       NaN  ...            0.0              0.0       NaN
3      2023-01-04  3.927386       NaN  ...            0.0              0.0       NaN
4      2023-01-05  3.902097       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  6.387000  5.775873  ...            0.0              1.0  5.676006
27964  2024-11-29  6.500000  5.836217  ...            0.0              1.0  5.704918
27965  2024-11-30  6.769000  5.913949  ...            1.0              1.0  5.742254
27966  2024-12-01  6.731000  5.982036  ...            1.0              1.0  5.776947
27967  2024-12-02  6.455170       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Prom_PROM
NECESSARRRY AAAA START
1
1
2024-11-25
2024-11-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
432  Prom PROM  6.45517  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Omni_Network_OMNI
[{'Date': datetime.date(2024, 12, 2), 'Price': 12.0886}]
success ya
UWAGA
db_OMNIUSD
COINDBBB
           Date    Close     EMA23  ...     SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-17  27.1260       NaN  ...        NaN              0                0
1    2024-04-18  24.9660       NaN  ...        NaN              0                0
2    2024-04-19  25.3670       NaN  ...        NaN              0                0
3    2024-04-20  28.8370       NaN  ...        NaN              0                0
4    2024-04-21  25.8800       NaN  ...        NaN              0                0
..          ...      ...       ...  ...        ...            ...              ...
223  2024-11-27  11.0514  8.870142  ...  10.994951              1                1
224  2024-11-28  11.2464  9.068163  ...  10.967318              1                1
225  2024-11-29  11.5627  9.276042  ...  10.938891              1                1
226  2024-11-30  11.5229  9.463280  ...  10.917061              1                1
227  2024-12-01  13.4711  9.797265  ...  10.913556              1                1

[228 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 12.0886}, {'Date': datetime.date(2024, 12, 2), 'Price': 12.0886}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...     SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-17  27.1260       NaN  ...        NaN            0.0              0.0
1    2024-04-18  24.9660       NaN  ...        NaN            0.0              0.0
2    2024-04-19  25.3670       NaN  ...        NaN            0.0              0.0
3    2024-04-20  28.8370       NaN  ...        NaN            0.0              0.0
4    2024-04-21  25.8800       NaN  ...        NaN            0.0              0.0
..          ...      ...       ...  ...        ...            ...              ...
224  2024-11-28  11.2464  9.068163  ...  10.967318            1.0              1.0
225  2024-11-29  11.5627  9.276042  ...  10.938891            1.0              1.0
226  2024-11-30  11.5229  9.463280  ...  10.917061            1.0              1.0
227  2024-12-01  13.4711  9.797265  ...  10.913556            1.0              1.0
228  2024-12-02  12.0886       NaN  ...        NaN            NaN              NaN

[229 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Omni_Network_OMNI
NECESSARRRY AAAA START
1
1
2024-11-25
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
433  Omni Network OMNI  12.0886  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Mines_of_Dalarnia_DAR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.18961}]
success ya
UWAGA
db_DARUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.117497       NaN  ...              0                0       NaN
1    2023-01-02  0.117311       NaN  ...              0                0       NaN
2    2023-01-03  0.119354       NaN  ...              0                0       NaN
3    2023-01-04  0.138850       NaN  ...              0                0       NaN
4    2023-01-05  0.127343       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.184920  0.154339  ...              1                1  0.154150
556  2024-11-28  0.187570  0.157108  ...              1                1  0.155323
557  2024-11-29  0.189690  0.159823  ...              1                1  0.156529
558  2024-11-30  0.192770  0.162569  ...              1                1  0.157800
559  2024-12-01  0.207140  0.166283  ...              1                1  0.159532

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.18961}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.18961}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.117497       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.117311       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.119354       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.138850       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.127343       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.187570  0.157108  ...            1.0              1.0  0.155323
557  2024-11-29  0.189690  0.159823  ...            1.0              1.0  0.156529
558  2024-11-30  0.192770  0.162569  ...            1.0              1.0  0.157800
559  2024-12-01  0.207140  0.166283  ...            1.0              1.0  0.159532
560  2024-12-02  0.189610       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Mines_of_Dalarnia_DAR
NECESSARRRY AAAA START
1
1
2024-11-27
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                      Name    Price  ...  middle_flip_date  long_flip_date
434  Mines of Dalarnia DAR  0.18961  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Aurora_AURORA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21257}]
success ya
UWAGA
db_AURORAUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-14  0.001281       NaN  ...       NaN              0                0
1      2023-01-15  0.001281       NaN  ...       NaN              0                0
2      2023-01-16  0.001281       NaN  ...       NaN              0                0
3      2023-01-17  0.001281       NaN  ...       NaN              0                0
4      2023-01-18  0.001281       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
26278  2024-11-27  0.213500  0.165367  ...  0.147106              1                1
26279  2024-11-28  0.212700  0.169311  ...  0.149408              1                1
26280  2024-11-29  0.216600  0.173252  ...  0.151765              1                1
26281  2024-11-30  0.235200  0.178414  ...  0.154693              1                1
26282  2024-12-01  0.224700  0.182271  ...  0.157149              1                1

[26283 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21257}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.21257}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-14  0.001281       NaN  ...       NaN            0.0              0.0
1      2023-01-15  0.001281       NaN  ...       NaN            0.0              0.0
2      2023-01-16  0.001281       NaN  ...       NaN            0.0              0.0
3      2023-01-17  0.001281       NaN  ...       NaN            0.0              0.0
4      2023-01-18  0.001281       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
26279  2024-11-28  0.212700  0.169311  ...  0.149408            1.0              1.0
26280  2024-11-29  0.216600  0.173252  ...  0.151765            1.0              1.0
26281  2024-11-30  0.235200  0.178414  ...  0.154693            1.0              1.0
26282  2024-12-01  0.224700  0.182271  ...  0.157149            1.0              1.0
26283  2024-12-02  0.212570       NaN  ...       NaN            NaN              NaN

[26284 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Aurora_AURORA
NECESSARRRY AAAA START
1
1
2024-11-10
2024-11-22
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
435  Aurora AURORA  0.21257  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MediBloc_MED
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01227}]
success ya
UWAGA
db_MEDUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.011496       NaN  ...              0                0       NaN
1    2023-01-02  0.011734       NaN  ...              0                0       NaN
2    2023-01-03  0.011856       NaN  ...              0                0       NaN
3    2023-01-04  0.012003       NaN  ...              0                0       NaN
4    2023-01-05  0.011977       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.011610  0.013727  ...              0                0  0.014505
487  2024-05-02  0.012250  0.013604  ...              0                0  0.014426
488  2024-05-03  0.012770  0.013534  ...              0                0  0.014368
489  2024-05-04  0.012790  0.013472  ...              0                0  0.014313
490  2024-05-05  0.012790  0.013415  ...              0                0  0.014259

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
/home/entukio/projects/scrapper_crypto_top/venv/lib/python3.11/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log10
  result = getattr(ufunc, method)(*inputs, **kwargs)
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.01202}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.01205}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.01205}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.01189}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.01196}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.01247}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.01232}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.0125}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.01264}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.01229}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.01276}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.01268}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.0125}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.01241}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.0124}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.0124}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.0124}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.01242}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.01242}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.01215}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.01186}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.01163}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.01168}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.01156}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.01081}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.01117}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.01119}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.01109}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.01128}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.01086}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.01082}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.01058}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.01009}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.01035}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.01003}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.00983}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.00972}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.00972}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.00785}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.00722}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.00762}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.00776}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.00772}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.00781}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.00779}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.00725}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.00864}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.00814}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.00805}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.00811}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.00808}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.00844}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.008}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.00958}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00989}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.01016}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00978}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00966}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00966}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.01022}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.01097}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.01135}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.01207}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.01314}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.01252}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.01273}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.01294}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.01286}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01227}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01227}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Orchid_OXT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11933}]
success ya
UWAGA
db_OXTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.066968       NaN  ...              0                0       NaN
1    2023-01-02  0.068585       NaN  ...              0                0       NaN
2    2023-01-03  0.069185       NaN  ...              0                0       NaN
3    2023-01-04  0.069363       NaN  ...              0                0       NaN
4    2023-01-05  0.068522       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.112020  0.088223  ...              1                0  0.091381
556  2024-11-28  0.110950  0.090117  ...              1                0  0.092067
557  2024-11-29  0.112760  0.092004  ...              1                0  0.092793
558  2024-11-30  0.112800  0.093737  ...              1                1  0.093495
559  2024-12-01  0.121010  0.096009  ...              1                1  0.094461

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11933}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.11933}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.066968       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.068585       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.069185       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.069363       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.068522       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.110950  0.090117  ...            1.0              0.0  0.092067
557  2024-11-29  0.112760  0.092004  ...            1.0              0.0  0.092793
558  2024-11-30  0.112800  0.093737  ...            1.0              1.0  0.093495
559  2024-12-01  0.121010  0.096009  ...            1.0              1.0  0.094461
560  2024-12-02  0.119330       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Orchid_OXT
NECESSARRRY AAAA START
1
1
2024-11-30
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
437  Orchid OXT  0.11933  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Dogelon_Mars_ELON
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_ELONUSD
COINDBBB
             Date         Close  ...  Middle_Trend_Up         EMA56
0      2023-01-01  0.000000e+00  ...                0           NaN
1      2023-01-02  0.000000e+00  ...                0           NaN
2      2023-01-03  0.000000e+00  ...                0           NaN
3      2023-01-04  0.000000e+00  ...                0           NaN
4      2023-01-05  0.000000e+00  ...                0           NaN
...           ...           ...  ...              ...           ...
27560  2024-11-27  2.008000e-07  ...                1  1.716990e-07
27561  2024-11-28  1.983000e-07  ...                1  1.726324e-07
27562  2024-11-29  2.039000e-07  ...                1  1.737295e-07
27563  2024-11-30  2.077000e-07  ...                1  1.749215e-07
27564  2024-12-01  2.239000e-07  ...                1  1.766400e-07

[27565 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date         Close  ...  Middle_Trend_Up         EMA56
0      2023-01-01  0.000000e+00  ...              0.0           NaN
1      2023-01-02  0.000000e+00  ...              0.0           NaN
2      2023-01-03  0.000000e+00  ...              0.0           NaN
3      2023-01-04  0.000000e+00  ...              0.0           NaN
4      2023-01-05  0.000000e+00  ...              0.0           NaN
...           ...           ...  ...              ...           ...
27561  2024-11-28  1.983000e-07  ...              1.0  1.726324e-07
27562  2024-11-29  2.039000e-07  ...              1.0  1.737295e-07
27563  2024-11-30  2.077000e-07  ...              1.0  1.749215e-07
27564  2024-12-01  2.239000e-07  ...              1.0  1.766400e-07
27565  2024-12-02  0.000000e+00  ...              NaN           NaN

[27566 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Dogelon_Mars_ELON
NECESSARRRY AAAA START
1
1
2024-10-29
2024-11-09
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name  Price  ...  middle_flip_date  long_flip_date
438  Dogelon Mars ELON    0.0  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
LUCE_LUCE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11666}]
success ya
UWAGA
db_LUCEUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_LUCEUSD': no such table: db_LUCEUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Covalent_X_Token_CXT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.12139}]
success ya
UWAGA
db_CXTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_CXTUSD': no such table: db_CXTUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Metal_MTL
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.47214}]
success ya
UWAGA
db_MTLUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.691203       NaN  ...              0                0       NaN
1      2023-01-02  0.695963       NaN  ...              0                0       NaN
2      2023-01-03  0.690745       NaN  ...              0                0       NaN
3      2023-01-04  0.699128       NaN  ...              0                0       NaN
4      2023-01-05  0.696246       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  1.478800  1.208137  ...              1                1  1.096476
27963  2024-11-28  1.479700  1.230768  ...              1                1  1.109922
27964  2024-11-29  1.546900  1.257112  ...              1                1  1.125255
27965  2024-11-30  1.543900  1.281011  ...              1                1  1.139944
27966  2024-12-01  1.570400  1.305127  ...              1                1  1.155048

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.47214}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.47214}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.691203       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.695963       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.690745       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.699128       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.696246       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  1.479700  1.230768  ...            1.0              1.0  1.109922
27964  2024-11-29  1.546900  1.257112  ...            1.0              1.0  1.125255
27965  2024-11-30  1.543900  1.281011  ...            1.0              1.0  1.139944
27966  2024-12-01  1.570400  1.305127  ...            1.0              1.0  1.155048
27967  2024-12-02  1.472140       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Metal_MTL
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-18
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
441  Metal MTL  1.47214  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
DODO_DODO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15925}]
success ya
UWAGA
db_DODOUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.094296       NaN  ...              0                0       NaN
1    2023-01-02  0.095595       NaN  ...              0                0       NaN
2    2023-01-03  0.095808       NaN  ...              0                0       NaN
3    2023-01-04  0.097634       NaN  ...              0                0       NaN
4    2023-01-05  0.096969       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.153970  0.139531  ...              0                0  0.155189
557  2024-11-28  0.154270  0.140759  ...              0                0  0.155157
558  2024-11-29  0.156260  0.142051  ...              0                0  0.155196
559  2024-11-30  0.155800  0.143197  ...              0                0  0.155217
560  2024-12-01  0.165570  0.145061  ...              0                0  0.155580

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15925}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15925}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.094296       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.095595       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.095808       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.097634       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.096969       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.154270  0.140759  ...            0.0              0.0  0.155157
558  2024-11-29  0.156260  0.142051  ...            0.0              0.0  0.155196
559  2024-11-30  0.155800  0.143197  ...            0.0              0.0  0.155217
560  2024-12-01  0.165570  0.145061  ...            0.0              0.0  0.155580
561  2024-12-02  0.159250       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted DODO_DODO
NECESSARRRY AAAA START
0
0
2024-06-10
2024-06-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
442  DODO DODO  0.15925  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Bazaars_BZR
[{'Date': datetime.date(2024, 12, 2), 'Price': 9.82118}]
success ya
UWAGA
db_BZRUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BZRUSD': no such table: db_BZRUSD
trying
 inicjacja duplicates
duplicate info
[False]
Moca_Network_MOCA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.08925}]
success ya
UWAGA
db_MOCAUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_MOCAUSD': no such table: db_MOCAUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
SmarDex_SDEX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01258}]
success ya
UWAGA
db_SDEXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-04-03  0.005386       NaN  ...              0                0       NaN
1    2023-04-04  0.005900       NaN  ...              0                0       NaN
2    2023-04-05  0.005227       NaN  ...              0                0       NaN
3    2023-04-06  0.005590       NaN  ...              0                0       NaN
4    2023-04-07  0.005910       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
394  2024-05-01  0.015410  0.017928  ...              0                0  0.018829
395  2024-05-02  0.015560  0.017731  ...              0                0  0.018714
396  2024-05-03  0.015610  0.017554  ...              0                0  0.018606
397  2024-05-04  0.015620  0.017393  ...              0                0  0.018501
398  2024-05-05  0.015620  0.017245  ...              0                0  0.018400

[399 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.01484}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.01475}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.01472}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.01472}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.01508}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.01582}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.0163}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.01622}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.01632}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.01623}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.01563}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.01611}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.01604}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.02005}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.01897}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.01912}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.01924}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.01924}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.02015}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.0198}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.01961}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.01933}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.01898}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.01892}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.01872}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.01851}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.01843}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.01907}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.01853}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.01851}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.01846}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.01797}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.01779}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.0168}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.01687}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.01628}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.01545}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.01515}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.01515}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.01518}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.01274}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.01317}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.01311}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.01264}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.01265}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.01268}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.01227}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.01253}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.01277}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.01301}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.01267}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.01367}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.01381}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.01431}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.01247}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.01319}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.01311}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.01295}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.01375}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.01338}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.01369}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.01374}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.01334}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.01248}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.01312}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.01308}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.01268}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.01275}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.01257}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01258}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01258}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Phoenix_Global_(new)_PHB
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.12935}]
success ya
UWAGA
db_PHBUSD
COINDBBB
                    Date     Close     EMA23     EMA82    SMA200
0    2023-01-01 00:00:00  0.498694       NaN       NaN       NaN
1    2023-01-02 00:00:00  0.501181       NaN       NaN       NaN
2    2023-01-03 00:00:00  0.497524       NaN       NaN       NaN
3    2023-01-04 00:00:00  0.520927       NaN       NaN       NaN
4    2023-01-05 00:00:00  0.516640       NaN       NaN       NaN
..                   ...       ...       ...       ...       ...
446  2024-03-22 00:00:00  2.501673  2.590493  1.807873  1.062417
447  2024-03-23 00:00:00  2.574459  2.589157  1.826345  1.072449
448  2024-03-24 00:00:00  2.696012  2.598062  1.847301  1.083064
449  2024-03-25 00:00:00  2.776113  2.612899  1.869682  1.094009
450  2024-03-26 00:00:00  2.900154  2.636837  1.894513  1.105450

[451 rows x 5 columns]
last_db_date_data
2024-03-26
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 2.3226}, {'Date': datetime.date(2024, 5, 11), 'Price': 2.27646}, {'Date': datetime.date(2024, 5, 12), 'Price': 2.27646}, {'Date': datetime.date(2024, 5, 13), 'Price': 2.23508}, {'Date': datetime.date(2024, 5, 14), 'Price': 2.19569}, {'Date': datetime.date(2024, 5, 15), 'Price': 2.71766}, {'Date': datetime.date(2024, 5, 16), 'Price': 2.69968}, {'Date': datetime.date(2024, 5, 17), 'Price': 2.63487}, {'Date': datetime.date(2024, 5, 18), 'Price': 2.66824}, {'Date': datetime.date(2024, 5, 19), 'Price': 2.51753}, {'Date': datetime.date(2024, 5, 20), 'Price': 2.59136}, {'Date': datetime.date(2024, 5, 21), 'Price': 2.91572}, {'Date': datetime.date(2024, 5, 22), 'Price': 2.95439}, {'Date': datetime.date(2024, 5, 23), 'Price': 2.74887}, {'Date': datetime.date(2024, 5, 24), 'Price': 2.70648}, {'Date': datetime.date(2024, 5, 25), 'Price': 2.6494}, {'Date': datetime.date(2024, 5, 26), 'Price': 2.6494}, {'Date': datetime.date(2024, 5, 27), 'Price': 2.63152}, {'Date': datetime.date(2024, 5, 28), 'Price': 2.59952}, {'Date': datetime.date(2024, 5, 29), 'Price': 2.89535}, {'Date': datetime.date(2024, 5, 30), 'Price': 2.74545}, {'Date': datetime.date(2024, 5, 31), 'Price': 2.72175}, {'Date': datetime.date(2024, 6, 1), 'Price': 2.63517}, {'Date': datetime.date(2024, 6, 2), 'Price': 2.6459}, {'Date': datetime.date(2024, 6, 3), 'Price': 2.6771}, {'Date': datetime.date(2024, 6, 4), 'Price': 2.71392}, {'Date': datetime.date(2024, 6, 5), 'Price': 2.79138}, {'Date': datetime.date(2024, 6, 6), 'Price': 2.71629}, {'Date': datetime.date(2024, 6, 7), 'Price': 2.63201}, {'Date': datetime.date(2024, 6, 8), 'Price': 2.34571}, {'Date': datetime.date(2024, 6, 9), 'Price': 2.33519}, {'Date': datetime.date(2024, 6, 10), 'Price': 2.38056}, {'Date': datetime.date(2024, 6, 11), 'Price': 2.1358}, {'Date': datetime.date(2024, 6, 12), 'Price': 2.38503}, {'Date': datetime.date(2024, 6, 13), 'Price': 2.19966}, {'Date': datetime.date(2024, 6, 14), 'Price': 2.10999}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.98855}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.98855}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.85414}, {'Date': datetime.date(2024, 6, 18), 'Price': 1.64615}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.76264}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.8596}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.88775}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.88081}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.784}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.77677}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.95372}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.94325}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.92322}, {'Date': datetime.date(2024, 6, 28), 'Price': 1.79204}, {'Date': datetime.date(2024, 6, 29), 'Price': 1.74634}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.82385}, {'Date': datetime.date(2024, 7, 1), 'Price': 1.92166}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.73786}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.80149}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.75948}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.70751}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.7365}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.72495}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.81262}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.95522}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.94629}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.77334}, {'Date': datetime.date(2024, 11, 27), 'Price': 2.00852}, {'Date': datetime.date(2024, 11, 28), 'Price': 2.1867}, {'Date': datetime.date(2024, 11, 29), 'Price': 2.24347}, {'Date': datetime.date(2024, 11, 30), 'Price': 2.32407}, {'Date': datetime.date(2024, 12, 1), 'Price': 2.29388}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.12935}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.12935}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
WINk_WIN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00011}]
success ya
UWAGA
db_WINUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000074       NaN  ...              0                0       NaN
1      2023-01-02  0.000075       NaN  ...              0                0       NaN
2      2023-01-03  0.000075       NaN  ...              0                0       NaN
3      2023-01-04  0.000076       NaN  ...              0                0       NaN
4      2023-01-05  0.000074       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27962  2024-11-27  0.000097  0.000085  ...              1                1  0.000084
27963  2024-11-28  0.000096  0.000086  ...              1                1  0.000085
27964  2024-11-29  0.000101  0.000087  ...              1                1  0.000085
27965  2024-11-30  0.000116  0.000089  ...              1                1  0.000086
27966  2024-12-01  0.000111  0.000091  ...              1                1  0.000087

[27967 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00011}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00011}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000074       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.000075       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.000075       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.000076       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.000074       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27963  2024-11-28  0.000096  0.000086  ...            1.0              1.0  0.000085
27964  2024-11-29  0.000101  0.000087  ...            1.0              1.0  0.000085
27965  2024-11-30  0.000116  0.000089  ...            1.0              1.0  0.000086
27966  2024-12-01  0.000111  0.000091  ...            1.0              1.0  0.000087
27967  2024-12-02  0.000110       NaN  ...            NaN              NaN       NaN

[27968 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted WINk_WIN
NECESSARRRY AAAA START
1
1
2024-11-27
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
447  WINk WIN  0.00011  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Satoshi_Airline_JET
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.21587}]
success ya
UWAGA
db_JETUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_JETUSD': no such table: db_JETUSD
trying
 inicjacja duplicates
duplicate info
[False]
Adventure_Gold_AGLD
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.43059}]
success ya
UWAGA
db_AGLDUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.272850       NaN  ...              0                0       NaN
1      2023-01-02  0.273994       NaN  ...              0                0       NaN
2      2023-01-03  0.273975       NaN  ...              0                0       NaN
3      2023-01-04  0.274283       NaN  ...              0                0       NaN
4      2023-01-05  0.270449       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27560  2024-11-27  1.383400  1.364118  ...              1                1  1.241152
27561  2024-11-28  1.425400  1.369225  ...              1                1  1.247617
27562  2024-11-29  1.568500  1.385831  ...              1                1  1.258876
27563  2024-11-30  1.536400  1.398379  ...              1                1  1.268614
27564  2024-12-01  1.538200  1.410030  ...              1                1  1.278073

[27565 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.43059}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.43059}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.272850       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.273994       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.273975       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.274283       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.270449       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27561  2024-11-28  1.425400  1.369225  ...            1.0              1.0  1.247617
27562  2024-11-29  1.568500  1.385831  ...            1.0              1.0  1.258876
27563  2024-11-30  1.536400  1.398379  ...            1.0              1.0  1.268614
27564  2024-12-01  1.538200  1.410030  ...            1.0              1.0  1.278073
27565  2024-12-02  1.430590       NaN  ...            NaN              NaN       NaN

[27566 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Adventure_Gold_AGLD
NECESSARRRY AAAA START
1
1
2024-09-23
2024-11-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
449  Adventure Gold AGLD  1.43059  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
CoW_Protocol_COW
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.40378}]
success ya
UWAGA
db_COWUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_COWUSD': no such table: db_COWUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
michi_$MICHI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.19737}]
success ya
UWAGA
db_$MICHIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_$MICHIUSD': no such table: db_$MICHIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Orbs_ORBS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03451}]
success ya
UWAGA
db_ORBSUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.021117       NaN  ...              0                0       NaN
1    2023-01-02  0.021257       NaN  ...              0                0       NaN
2    2023-01-03  0.020992       NaN  ...              0                0       NaN
3    2023-01-04  0.021380       NaN  ...              0                0       NaN
4    2023-01-05  0.021517       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.036120  0.029302  ...              0                0  0.029862
557  2024-11-28  0.035370  0.029808  ...              0                0  0.030055
558  2024-11-29  0.034970  0.030238  ...              0                1  0.030228
559  2024-11-30  0.036030  0.030721  ...              0                1  0.030431
560  2024-12-01  0.036030  0.031163  ...              0                1  0.030628

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03451}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.03451}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.021117       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.021257       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.020992       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.021380       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.021517       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.035370  0.029808  ...            0.0              0.0  0.030055
558  2024-11-29  0.034970  0.030238  ...            0.0              1.0  0.030228
559  2024-11-30  0.036030  0.030721  ...            0.0              1.0  0.030431
560  2024-12-01  0.036030  0.031163  ...            0.0              1.0  0.030628
561  2024-12-02  0.034510       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Orbs_ORBS
NECESSARRRY AAAA START
1
0
2024-11-29
2024-04-22
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
452  Orbs ORBS  0.03451  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Acala_Token_ACA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.09599}]
success ya
UWAGA
db_ACAUSD
COINDBBB
           Date   Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-05-24  0.0896       NaN  ...       NaN              0                0
1    2023-05-25  0.0851       NaN  ...       NaN              0                0
2    2023-05-26  0.0832       NaN  ...       NaN              0                0
3    2023-05-27  0.0839       NaN  ...       NaN              0                0
4    2023-05-28  0.0896       NaN  ...       NaN              0                0
..          ...     ...       ...  ...       ...            ...              ...
208  2023-12-18  0.1565  0.159324  ...  0.094398              1                1
209  2023-12-19  0.1419  0.157872  ...  0.094689              1                1
210  2023-12-20  0.1500  0.157216  ...  0.095017              1                1
211  2023-12-21  0.1208  0.154181  ...  0.095189              1                1
212  2023-12-22  0.0980  0.149499  ...  0.095277              1                1

[213 rows x 7 columns]
last_db_date_data
2023-12-22
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.1048}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.10435}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.10435}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.10368}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.10077}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.10659}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.10412}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.10798}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.10815}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.10211}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.10935}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.10811}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.10434}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.10151}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.10309}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.10207}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.10207}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.10451}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.1077}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.10253}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.10367}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.10202}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.10216}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.10286}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.10208}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.10435}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.10783}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.10694}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.1053}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.09539}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.09022}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.0883}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.08237}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.08588}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.08131}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.08069}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.081}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.081}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.0767}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.0691}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.07069}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.07171}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.07226}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.07146}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.07332}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.06538}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.06952}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.06794}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.06883}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.06852}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.06647}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.07017}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.06894}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.06978}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.08555}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.07826}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.08486}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.08674}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.10153}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.10029}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.10256}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.10099}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.08873}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.09453}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.10214}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.10463}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.10603}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.10327}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.09599}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.09599}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
ShibaBitcoin_SHIBTC
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.25654}]
success ya
UWAGA
db_SHIBTCUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_SHIBTCUSD': no such table: db_SHIBTCUSD
trying
 inicjacja duplicates
duplicate info
[False]
Polyhedra_Network_ZKJ
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.49392}]
success ya
UWAGA
db_ZKJUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ZKJUSD': no such table: db_ZKJUSD
2 failed
trying
 inicjacja duplicates
duplicate info
[False]
Velodrome_Finance_VELO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.12499}]
success ya
UWAGA
db_VELOUSD
COINDBBB
             Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0      2023-04-01  0.006754       NaN  ...       NaN              0                0
1      2023-04-02  0.006864       NaN  ...       NaN              0                0
2      2023-04-03  0.006599       NaN  ...       NaN              0                0
3      2023-04-04  0.007266       NaN  ...       NaN              0                0
4      2023-04-05  0.006790       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
27068  2024-11-27  0.018023  0.015217  ...  0.013766              1                1
27069  2024-11-28  0.017740  0.015427  ...  0.013735              1                1
27070  2024-11-29  0.019301  0.015750  ...  0.013715              1                1
27071  2024-11-30  0.019341  0.016049  ...  0.013707              1                1
27072  2024-12-01  0.019577  0.016343  ...  0.013694              1                1

[27073 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.12499}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.12499}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0      2023-04-01  0.006754       NaN  ...       NaN            0.0              0.0
1      2023-04-02  0.006864       NaN  ...       NaN            0.0              0.0
2      2023-04-03  0.006599       NaN  ...       NaN            0.0              0.0
3      2023-04-04  0.007266       NaN  ...       NaN            0.0              0.0
4      2023-04-05  0.006790       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
27069  2024-11-28  0.017740  0.015427  ...  0.013735            1.0              1.0
27070  2024-11-29  0.019301  0.015750  ...  0.013715            1.0              1.0
27071  2024-11-30  0.019341  0.016049  ...  0.013707            1.0              1.0
27072  2024-12-01  0.019577  0.016343  ...  0.013694            1.0              1.0
27073  2024-12-02  0.124990       NaN  ...       NaN            NaN              NaN

[27074 rows x 7 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Velodrome_Finance_VELO
NECESSARRRY AAAA START
1
1
2024-11-22
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                       Name    Price  ...  middle_flip_date  long_flip_date
456  Velodrome Finance VELO  0.12499  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
BENQI_QI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02098}]
success ya
UWAGA
db_QIUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  0.009684       NaN  ...       NaN              0                0
1    2023-01-02  0.009802       NaN  ...       NaN              0                0
2    2023-01-03  0.009919       NaN  ...       NaN              0                0
3    2023-01-04  0.009616       NaN  ...       NaN              0                0
4    2023-01-05  0.009753       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
515  2024-11-27  0.018750  0.016235  ...  0.016581              1                0
516  2024-11-28  0.018370  0.016413  ...  0.016644              1                0
517  2024-11-29  0.019130  0.016640  ...  0.016731              1                0
518  2024-11-30  0.019110  0.016845  ...  0.016814              1                1
519  2024-12-01  0.019010  0.017026  ...  0.016892              1                1

[520 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02098}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.02098}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  0.009684       NaN  ...       NaN            0.0              0.0
1    2023-01-02  0.009802       NaN  ...       NaN            0.0              0.0
2    2023-01-03  0.009919       NaN  ...       NaN            0.0              0.0
3    2023-01-04  0.009616       NaN  ...       NaN            0.0              0.0
4    2023-01-05  0.009753       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
516  2024-11-28  0.018370  0.016413  ...  0.016644            1.0              0.0
517  2024-11-29  0.019130  0.016640  ...  0.016731            1.0              0.0
518  2024-11-30  0.019110  0.016845  ...  0.016814            1.0              1.0
519  2024-12-01  0.019010  0.017026  ...  0.016892            1.0              1.0
520  2024-12-02  0.020980       NaN  ...       NaN            NaN              NaN

[521 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted BENQI_QI
NECESSARRRY AAAA START
1
1
2024-11-30
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
         Name    Price  ...  middle_flip_date  long_flip_date
457  BENQI QI  0.02098  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
SuperRare_RARE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.14869}]
success ya
UWAGA
db_RAREUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00  0.015899  ...              0                0
1    2023-01-02 00:00:00  0.015941  ...              0                0
2    2023-01-03 00:00:00  0.016056  ...              0                0
3    2023-01-04 00:00:00  0.016697  ...              0                0
4    2023-01-05 00:00:00  0.016657  ...              0                0
..                   ...       ...  ...            ...              ...
468           2024-04-13  0.138290  ...              1                1
469           2024-04-14  0.121540  ...              1                1
470           2024-04-15  0.115210  ...              1                1
471           2024-04-16  0.120170  ...              1                1
472           2024-04-17  0.113490  ...              1                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.12055}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.12057}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.12057}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.12554}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.11992}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.12613}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.12252}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.12347}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.12171}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.11828}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.1225}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.12264}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.12059}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.11705}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.12031}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.12309}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.12309}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.12151}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.12391}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.1218}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.11917}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.11832}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.11877}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.12022}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.12089}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.12424}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.1328}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.12802}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.12862}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.11627}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.11503}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.11377}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.10636}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.11466}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.11163}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.11071}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.11033}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.11033}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.10625}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.09276}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.095}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.09591}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.09762}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.09724}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.09624}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.09235}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.09575}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.09632}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.09302}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.09336}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.09157}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.09324}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.09488}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.12028}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.12261}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.12209}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.11633}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.11837}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.11829}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.12439}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.13344}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.13736}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.12185}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.13559}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.13476}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.13776}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.13791}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.14899}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.14869}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.14869}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
PaLM_AI_PALM
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.38079}]
success ya
UWAGA
db_PALMUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PALMUSD': no such table: db_PALMUSD
trying
 inicjacja duplicates
duplicate info
[False]
LimeWire_LMWR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.34479}]
success ya
UWAGA
db_LMWRUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-05-16  0.29630       NaN  ...       NaN              0                0
1    2023-05-17  0.21730       NaN  ...       NaN              0                0
2    2023-05-18  0.18570       NaN  ...       NaN              0                0
3    2023-05-19  0.15700       NaN  ...       NaN              0                0
4    2023-05-20  0.22320       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
418  2024-11-23  0.19038  0.319769  ...  0.677227              0                0
419  2024-11-24  0.19784  0.309609  ...  0.677075              0                0
420  2024-11-29  0.21800  0.301975  ...  0.676864              0                0
421  2024-11-30  0.22080  0.295210  ...  0.676358              0                0
422  2024-12-01  0.28510  0.294367  ...  0.676251              0                0

[423 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.34479}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.34479}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-05-16  0.29630       NaN  ...       NaN            0.0              0.0
1    2023-05-17  0.21730       NaN  ...       NaN            0.0              0.0
2    2023-05-18  0.18570       NaN  ...       NaN            0.0              0.0
3    2023-05-19  0.15700       NaN  ...       NaN            0.0              0.0
4    2023-05-20  0.22320       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
419  2024-11-24  0.19784  0.309609  ...  0.677075            0.0              0.0
420  2024-11-29  0.21800  0.301975  ...  0.676864            0.0              0.0
421  2024-11-30  0.22080  0.295210  ...  0.676358            0.0              0.0
422  2024-12-01  0.28510  0.294367  ...  0.676251            0.0              0.0
423  2024-12-02  0.34479       NaN  ...       NaN            NaN              NaN

[424 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted LimeWire_LMWR
NECESSARRRY AAAA START
0
0
2024-05-12
2024-05-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
460  LimeWire LMWR  0.34479  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
STP_STPT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05433}]
success ya
UWAGA
db_STPTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.026045       NaN  ...              0                0       NaN
1    2023-01-02  0.026203       NaN  ...              0                0       NaN
2    2023-01-03  0.025928       NaN  ...              0                0       NaN
3    2023-01-04  0.026818       NaN  ...              0                0       NaN
4    2023-01-05  0.027547       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.050290  0.058468  ...              0                0  0.062547
487  2024-05-02  0.054250  0.058117  ...              0                0  0.062256
488  2024-05-03  0.056850  0.058011  ...              0                0  0.062066
489  2024-05-04  0.056790  0.057910  ...              0                0  0.061881
490  2024-05-05  0.056790  0.057816  ...              0                0  0.061702

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.05829}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.0572}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.0572}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.05346}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.05338}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.05528}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.05467}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.05599}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.05695}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.05543}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.05829}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.05747}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.05609}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.05476}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.05477}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.05466}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.05466}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.05549}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.05431}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.05427}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.05372}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.05273}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.05353}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.05215}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.05062}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.05064}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.05097}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.05049}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.05018}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.04858}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.04887}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.04907}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.04583}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.04836}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.04787}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.04531}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.04473}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.04473}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.04039}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.041}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.03933}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.03941}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.04132}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.04019}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.04116}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.03948}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.04195}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.04112}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.04141}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.04304}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.04195}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.04284}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.04257}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.04596}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.04725}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.0494}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.04738}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.04726}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.04688}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.04838}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.051}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.05349}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.05296}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.05728}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.05759}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.05808}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.05749}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.0575}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.05433}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.05433}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Paycoin_PCI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1173}]
success ya
UWAGA
db_PCIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_PCIUSD': no such table: db_PCIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Wojak_WOJAK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00151}]
success ya
UWAGA
db_WOJAKUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_WOJAKUSD': no such table: db_WOJAKUSD
trying
 inicjacja duplicates
duplicate info
[False]
UXLINK_UXLINK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.61796}]
success ya
UWAGA
db_UXLINKUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_UXLINKUSD': no such table: db_UXLINKUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Mr_Miggles_MIGGLES
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10908}]
success ya
UWAGA
db_MIGGLESUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_MIGGLESUSD': no such table: db_MIGGLESUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
MyNeighborAlice_ALICE
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.53368}]
success ya
UWAGA
db_ALICEUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.062814       NaN  ...              0                0       NaN
1      2023-01-02  1.095868       NaN  ...              0                0       NaN
2      2023-01-03  1.091394       NaN  ...              0                0       NaN
3      2023-01-04  1.119013       NaN  ...              0                0       NaN
4      2023-01-05  1.114749       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27560  2024-11-27  1.467000  1.252544  ...              1                1  1.160568
27561  2024-11-28  1.497000  1.272916  ...              1                1  1.172373
27562  2024-11-29  1.527000  1.294089  ...              1                1  1.184816
27563  2024-11-30  1.586000  1.318415  ...              1                1  1.198892
27564  2024-12-01  1.581000  1.340297  ...              1                1  1.212300

[27565 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.53368}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.53368}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.062814       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.095868       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.091394       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.119013       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.114749       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27561  2024-11-28  1.497000  1.272916  ...            1.0              1.0  1.172373
27562  2024-11-29  1.527000  1.294089  ...            1.0              1.0  1.184816
27563  2024-11-30  1.586000  1.318415  ...            1.0              1.0  1.198892
27564  2024-12-01  1.581000  1.340297  ...            1.0              1.0  1.212300
27565  2024-12-02  1.533680       NaN  ...            NaN              NaN       NaN

[27566 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted MyNeighborAlice_ALICE
NECESSARRRY AAAA START
1
1
2024-11-10
2024-11-15
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                      Name    Price  ...  middle_flip_date  long_flip_date
465  MyNeighborAlice ALICE  1.53368  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MOBOX_MBOX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.26256}]
success ya
UWAGA
db_MBOXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.369787       NaN  ...              0                0       NaN
1    2023-01-02  0.372578       NaN  ...              0                0       NaN
2    2023-01-03  0.376363       NaN  ...              0                0       NaN
3    2023-01-04  0.384632       NaN  ...              0                0       NaN
4    2023-01-05  0.377126       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.311400  0.354676  ...              0                0  0.379438
487  2024-05-02  0.335450  0.353074  ...              0                0  0.377894
488  2024-05-03  0.345600  0.352451  ...              1                0  0.376761
489  2024-05-04  0.345350  0.351859  ...              1                0  0.375659
490  2024-05-05  0.345350  0.351317  ...              1                0  0.374596

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.34433}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.36348}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.36348}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.33325}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.31563}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.33635}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.32401}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.33556}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.33436}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.32954}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.34713}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.35066}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.34688}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.33808}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.34178}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.3425}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.3425}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.34391}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.33778}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.33335}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.33072}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.33296}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.33477}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.35354}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.36482}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.37945}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.37789}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.3841}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.37983}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.34484}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.33855}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.32998}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.29834}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.32145}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.30076}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.28907}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.2806}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.2806}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.26101}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.23102}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.23948}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.24075}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.23648}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.23637}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.239}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.22342}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.23587}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.22903}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.24045}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.23432}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.23161}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.23579}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.23761}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.18419}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.1956}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.19295}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.18625}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.18934}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.19067}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.19952}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.2398}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.23343}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.21314}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.24733}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.24898}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.25379}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.25174}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.28219}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.26256}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.26256}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
DIA_DIA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.86921}]
success ya
UWAGA
db_DIAUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.37000       NaN  ...       NaN              0                0
1    2023-04-07  0.36160       NaN  ...       NaN              0                0
2    2023-04-08  0.38240       NaN  ...       NaN              0                0
3    2023-04-09  0.38310       NaN  ...       NaN              0                0
4    2023-04-10  0.39670       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
449  2024-11-27  0.83675  0.648234  ...  0.507076              1                1
450  2024-11-28  0.81544  0.662168  ...  0.509521              1                1
451  2024-11-29  0.84858  0.677702  ...  0.512108              1                1
452  2024-11-30  0.82329  0.689835  ...  0.514546              1                1
453  2024-12-01  0.88453  0.706059  ...  0.517376              1                1

[454 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.86921}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.86921}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.37000       NaN  ...       NaN            0.0              0.0
1    2023-04-07  0.36160       NaN  ...       NaN            0.0              0.0
2    2023-04-08  0.38240       NaN  ...       NaN            0.0              0.0
3    2023-04-09  0.38310       NaN  ...       NaN            0.0              0.0
4    2023-04-10  0.39670       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
450  2024-11-28  0.81544  0.662168  ...  0.509521            1.0              1.0
451  2024-11-29  0.84858  0.677702  ...  0.512108            1.0              1.0
452  2024-11-30  0.82329  0.689835  ...  0.514546            1.0              1.0
453  2024-12-01  0.88453  0.706059  ...  0.517376            1.0              1.0
454  2024-12-02  0.86921       NaN  ...       NaN            NaN              NaN

[455 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted DIA_DIA
NECESSARRRY AAAA START
1
1
2024-11-19
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
467  DIA DIA  0.86921  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
RSS3_RSS3
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15381}]
success ya
UWAGA
db_RSS3USD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.104232       NaN  ...              0                0       NaN
1    2023-01-02  0.103941       NaN  ...              0                0       NaN
2    2023-01-03  0.104075       NaN  ...              0                0       NaN
3    2023-01-04  0.105049       NaN  ...              0                0       NaN
4    2023-01-05  0.102981       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.320180  0.375392  ...              1                1  0.373972
487  2024-05-02  0.336870  0.372182  ...              1                0  0.372670
488  2024-05-03  0.362720  0.371394  ...              1                0  0.372321
489  2024-05-04  0.363240  0.370714  ...              1                0  0.372002
490  2024-05-05  0.363240  0.370091  ...              1                0  0.371695

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.35041}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.33696}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.33519}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.33519}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.334}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.30777}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.34889}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.31757}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.3283}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.32583}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.31486}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.33514}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.32375}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.30996}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.30035}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.28803}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.29452}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.29452}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.28508}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.27806}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.28434}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.2957}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.29691}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.28747}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.28275}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.31437}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.31683}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.31305}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.31922}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.33813}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.33278}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.31779}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.32852}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.28407}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.32273}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.3014}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.31381}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.30304}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.30304}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.28133}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.24261}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.27859}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.28782}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.28043}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.27679}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.28345}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.26331}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.27429}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.25767}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.26048}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.24519}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.23125}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.20998}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.19414}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.11087}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.12093}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.1116}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.10871}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.11022}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.10843}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.11202}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.1229}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.12399}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.12157}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.136}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.15952}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.15479}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.1648}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.16467}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15381}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15381}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Mumu_the_Bull_MUMU
[{'Date': datetime.date(2024, 12, 2), 'Price': 5e-05}]
success ya
UWAGA
db_MUMUUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_MUMUUSD': no such table: db_MUMUUSD
trying
 inicjacja duplicates
duplicate info
[False]
inSure_SURE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00386}]
success ya
UWAGA
db_SUREUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.001786       NaN  ...              0                0       NaN
1    2023-01-02  0.001833       NaN  ...              0                0       NaN
2    2023-01-03  0.001821       NaN  ...              0                0       NaN
3    2023-01-04  0.001878       NaN  ...              0                0       NaN
4    2023-01-05  0.001905       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.005160  0.005526  ...              0                0  0.005715
487  2024-05-02  0.005480  0.005522  ...              1                0  0.005707
488  2024-05-03  0.005260  0.005500  ...              1                0  0.005691
489  2024-05-04  0.005260  0.005480  ...              0                0  0.005676
490  2024-05-05  0.005260  0.005462  ...              0                0  0.005662

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.00514}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.00502}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.00502}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.00502}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.00519}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.0051}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.00524}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.00519}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.00541}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.00582}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.00556}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.00592}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.00588}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.00551}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.00537}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.00552}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.00577}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.00577}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.00567}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.00521}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.00529}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.00523}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.00524}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.00526}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.00504}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.00505}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.00505}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.00512}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.00517}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.00513}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.00498}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.00532}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.00534}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.006}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.00544}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.00572}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.00569}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.00562}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.00562}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.0059}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.00571}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.00611}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.00553}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.00549}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.00549}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.00543}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.00521}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.00532}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.00537}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.00534}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.00536}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.00514}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.0049}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.0051}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.00297}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00325}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.00321}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00322}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00339}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00321}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.00332}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.00312}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.00336}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.00312}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.00335}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.00331}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.00337}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.00329}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.00376}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00386}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00386}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
ResearchCoin_RSC
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.08045}]
success ya
UWAGA
db_RSCUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_RSCUSD': no such table: db_RSCUSD
trying
 inicjacja duplicates
duplicate info
[False]
RETARDIO_RETARDIO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10419}]
success ya
UWAGA
db_RETARDIOUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_RETARDIOUSD': no such table: db_RETARDIOUSD
trying
 inicjacja duplicates
duplicate info
[False]
OX_Coin_OX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.02547}]
success ya
UWAGA
db_OXUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_OXUSD': no such table: db_OXUSD
trying
 inicjacja duplicates
duplicate info
[False]
Zano_ZANO
[{'Date': datetime.date(2024, 12, 2), 'Price': 7.53101}]
success ya
UWAGA
db_ZANOUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ZANOUSD': no such table: db_ZANOUSD
trying
 inicjacja duplicates
duplicate info
[False]
Wen_WEN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00014}]
success ya
UWAGA
db_WENUSD
COINDBBB
             Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0      2024-01-30  0.000078       NaN  ...             0                0       NaN
1      2024-01-31  0.000080       NaN  ...             0                0       NaN
2      2024-02-01  0.000062       NaN  ...             0                0       NaN
3      2024-02-02  0.000053       NaN  ...             0                0       NaN
4      2024-02-03  0.000053       NaN  ...             0                0       NaN
...           ...       ...       ...  ...           ...              ...       ...
11027  2024-11-27  0.000146  0.000148  ...             1                1  0.000132
11028  2024-11-28  0.000136  0.000147  ...             1                1  0.000133
11029  2024-11-29  0.000146  0.000147  ...             1                1  0.000133
11030  2024-11-30  0.000142  0.000147  ...             1                1  0.000133
11031  2024-12-01  0.000155  0.000147  ...             1                1  0.000134

[11032 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00014}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00014}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0      2024-01-30  0.000078       NaN  ...           0.0              0.0       NaN
1      2024-01-31  0.000080       NaN  ...           0.0              0.0       NaN
2      2024-02-01  0.000062       NaN  ...           0.0              0.0       NaN
3      2024-02-02  0.000053       NaN  ...           0.0              0.0       NaN
4      2024-02-03  0.000053       NaN  ...           0.0              0.0       NaN
...           ...       ...       ...  ...           ...              ...       ...
11028  2024-11-28  0.000136  0.000147  ...           1.0              1.0  0.000133
11029  2024-11-29  0.000146  0.000147  ...           1.0              1.0  0.000133
11030  2024-11-30  0.000142  0.000147  ...           1.0              1.0  0.000133
11031  2024-12-01  0.000155  0.000147  ...           1.0              1.0  0.000134
11032  2024-12-02  0.000140       NaN  ...           NaN              NaN       NaN

[11033 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Wen_WEN
NECESSARRRY AAAA START
1
1
2024-10-12
2024-11-13
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
475  Wen WEN  0.00014  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Tokenlon_Network_Token_LON
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.8757}]
success ya
UWAGA
db_LONUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.572342       NaN  ...              0                0       NaN
1    2023-01-02  0.584536       NaN  ...              0                0       NaN
2    2023-01-03  0.583245       NaN  ...              0                0       NaN
3    2023-01-04  0.574345       NaN  ...              0                0       NaN
4    2023-01-05  0.537961       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.859790  0.882910  ...              1                1  0.843275
487  2024-05-02  0.867570  0.881631  ...              1                1  0.844128
488  2024-05-03  0.876310  0.881188  ...              1                1  0.845257
489  2024-05-04  0.877720  0.880899  ...              1                1  0.846396
490  2024-05-05  0.877720  0.880634  ...              1                1  0.847495

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.89867}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.9036}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.9036}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.88891}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.90799}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.94943}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.94466}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.95166}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.92863}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.92722}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.96657}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.97347}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.98199}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.97948}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.98826}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.981}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.981}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.99547}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.98781}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.98078}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.956}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.97538}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.99465}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.99592}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.96771}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.97327}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.97599}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.9742}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.99062}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.95594}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.958}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.96133}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.93411}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.95589}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.94839}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.93074}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.94587}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.94587}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.94337}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.92269}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.93763}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.93071}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.94737}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.92805}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.92589}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.93315}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.95457}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.90811}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.95355}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.96684}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.98026}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.92651}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.94867}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.02913}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.03842}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.03859}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.03395}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.95482}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.9605}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.97024}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.97433}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.89734}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.84709}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.89713}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.88093}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.87684}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.87862}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.87772}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.8757}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.8757}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Gitcoin_GTC
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.17534}]
success ya
UWAGA
db_GTCUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000442       NaN  ...              0                0       NaN
1      2023-01-02  0.000421       NaN  ...              0                0       NaN
2      2023-01-03  0.000431       NaN  ...              0                0       NaN
3      2023-01-04  0.000418       NaN  ...              0                0       NaN
4      2023-01-05  0.000417       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27560  2024-11-27  0.941700  0.759085  ...              1                1  0.709300
27561  2024-11-28  0.967200  0.776428  ...              1                1  0.718349
27562  2024-11-29  1.012600  0.796109  ...              1                1  0.728674
27563  2024-11-30  1.086500  0.820308  ...              1                1  0.741229
27564  2024-12-01  1.270500  0.857824  ...              1                1  0.759800

[27565 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.17534}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.17534}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000442       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.000421       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.000431       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.000418       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.000417       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27561  2024-11-28  0.967200  0.776428  ...            1.0              1.0  0.718349
27562  2024-11-29  1.012600  0.796109  ...            1.0              1.0  0.728674
27563  2024-11-30  1.086500  0.820308  ...            1.0              1.0  0.741229
27564  2024-12-01  1.270500  0.857824  ...            1.0              1.0  0.759800
27565  2024-12-02  1.175340       NaN  ...            NaN              NaN       NaN

[27566 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Gitcoin_GTC
NECESSARRRY AAAA START
1
1
2024-11-17
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
477  Gitcoin GTC  1.17534  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
RadioCaca_RACA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00025}]
success ya
UWAGA
db_RACAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-03-14  0.000196       NaN  ...              0                0       NaN
1      2023-03-15  0.000186       NaN  ...              0                0       NaN
2      2023-03-16  0.000191       NaN  ...              0                0       NaN
3      2023-03-17  0.000205       NaN  ...              0                0       NaN
4      2023-03-18  0.000198       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27488  2024-11-27  0.000242  0.000219  ...              1                1  0.000202
27489  2024-11-28  0.000241  0.000221  ...              1                1  0.000204
27490  2024-11-29  0.000246  0.000223  ...              1                1  0.000205
27491  2024-11-30  0.000253  0.000226  ...              1                1  0.000207
27492  2024-12-01  0.000266  0.000229  ...              1                1  0.000209

[27493 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00025}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00025}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-03-14  0.000196       NaN  ...            0.0              0.0       NaN
1      2023-03-15  0.000186       NaN  ...            0.0              0.0       NaN
2      2023-03-16  0.000191       NaN  ...            0.0              0.0       NaN
3      2023-03-17  0.000205       NaN  ...            0.0              0.0       NaN
4      2023-03-18  0.000198       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27489  2024-11-28  0.000241  0.000221  ...            1.0              1.0  0.000204
27490  2024-11-29  0.000246  0.000223  ...            1.0              1.0  0.000205
27491  2024-11-30  0.000253  0.000226  ...            1.0              1.0  0.000207
27492  2024-12-01  0.000266  0.000229  ...            1.0              1.0  0.000209
27493  2024-12-02  0.000250       NaN  ...            NaN              NaN       NaN

[27494 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted RadioCaca_RACA
NECESSARRRY AAAA START
1
1
2024-09-24
2024-11-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
478  RadioCaca RACA  0.00025  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
NFPrompt_NFP
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.34354}]
success ya
UWAGA
db_NFPUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.006247       NaN  ...       NaN              0                0
1      2023-01-02  0.006444       NaN  ...       NaN              0                0
2      2023-01-03  0.006488       NaN  ...       NaN              0                0
3      2023-01-04  0.006733       NaN  ...       NaN              0                0
4      2023-01-05  0.006756       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
15211  2024-11-27  0.306900  0.251909  ...  0.234427              1                1
15212  2024-11-28  0.324900  0.257992  ...  0.237601              1                1
15213  2024-11-29  0.330600  0.264042  ...  0.240864              1                1
15214  2024-11-30  0.359900  0.272030  ...  0.245041              1                1
15215  2024-12-01  0.356300  0.279053  ...  0.248945              1                1

[15216 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.34354}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.34354}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2023-01-01  0.006247       NaN  ...       NaN            0.0              0.0
1      2023-01-02  0.006444       NaN  ...       NaN            0.0              0.0
2      2023-01-03  0.006488       NaN  ...       NaN            0.0              0.0
3      2023-01-04  0.006733       NaN  ...       NaN            0.0              0.0
4      2023-01-05  0.006756       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
15212  2024-11-28  0.324900  0.257992  ...  0.237601            1.0              1.0
15213  2024-11-29  0.330600  0.264042  ...  0.240864            1.0              1.0
15214  2024-11-30  0.359900  0.272030  ...  0.245041            1.0              1.0
15215  2024-12-01  0.356300  0.279053  ...  0.248945            1.0              1.0
15216  2024-12-02  0.343540       NaN  ...       NaN            NaN              NaN

[15217 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted NFPrompt_NFP
NECESSARRRY AAAA START
1
1
2024-11-15
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
479  NFPrompt NFP  0.34354  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Myro_MYRO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10636}]
success ya
UWAGA
db_MYROUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-11-11  0.002820       NaN  ...              0                0       NaN
1    2023-11-12  0.006055       NaN  ...              0                0       NaN
2    2023-11-13  0.002326       NaN  ...              0                0       NaN
3    2023-11-14  0.003948       NaN  ...              0                0       NaN
4    2023-11-15  0.006583       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
373  2024-11-27  0.110150  0.136534  ...              0                0  0.163306
374  2024-11-28  0.105490  0.133947  ...              0                0  0.161277
375  2024-11-29  0.114850  0.132356  ...              0                0  0.159648
376  2024-11-30  0.112930  0.130737  ...              0                0  0.158009
377  2024-12-01  0.118600  0.129726  ...              0                0  0.156626

[378 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10636}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.10636}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-11-11  0.002820       NaN  ...            0.0              0.0       NaN
1    2023-11-12  0.006055       NaN  ...            0.0              0.0       NaN
2    2023-11-13  0.002326       NaN  ...            0.0              0.0       NaN
3    2023-11-14  0.003948       NaN  ...            0.0              0.0       NaN
4    2023-11-15  0.006583       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
374  2024-11-28  0.105490  0.133947  ...            0.0              0.0  0.161277
375  2024-11-29  0.114850  0.132356  ...            0.0              0.0  0.159648
376  2024-11-30  0.112930  0.130737  ...            0.0              0.0  0.158009
377  2024-12-01  0.118600  0.129726  ...            0.0              0.0  0.156626
378  2024-12-02  0.106360       NaN  ...            NaN              NaN       NaN

[379 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Myro_MYRO
NECESSARRRY AAAA START
0
0
2024-06-18
2024-06-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
480  Myro MYRO  0.10636  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Request_Network_REQ
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1303}]
success ya
UWAGA
db_REQUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.085375       NaN  ...              0                0       NaN
1    2023-01-02  0.085977       NaN  ...              0                0       NaN
2    2023-01-03  0.085643       NaN  ...              0                0       NaN
3    2023-01-04  0.086672       NaN  ...              0                0       NaN
4    2023-01-05  0.086392       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.115820  0.112457  ...              0                0  0.119543
556  2024-11-28  0.123650  0.113390  ...              1                0  0.119688
557  2024-11-29  0.121240  0.114044  ...              1                0  0.119742
558  2024-11-30  0.122200  0.114724  ...              1                0  0.119828
559  2024-12-01  0.125940  0.115658  ...              1                0  0.120043

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1303}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.1303}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.085375       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.085977       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.085643       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.086672       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.086392       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.123650  0.113390  ...            1.0              0.0  0.119688
557  2024-11-29  0.121240  0.114044  ...            1.0              0.0  0.119742
558  2024-11-30  0.122200  0.114724  ...            1.0              0.0  0.119828
559  2024-12-01  0.125940  0.115658  ...            1.0              0.0  0.120043
560  2024-12-02  0.130300       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Request_Network_REQ
NECESSARRRY AAAA START
0
1
2024-06-15
2024-11-28
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name   Price  ...  middle_flip_date  long_flip_date
481  Request Network REQ  0.1303  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Radiant_Capital_RDNT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.08506}]
success ya
UWAGA
db_RDNTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.040786       NaN  ...              0                0       NaN
1    2023-01-02  0.050259       NaN  ...              0                0       NaN
2    2023-01-03  0.047413       NaN  ...              0                0       NaN
3    2023-01-04  0.046184       NaN  ...              0                0       NaN
4    2023-01-05  0.042239       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
554  2024-11-26  0.067360  0.095734  ...              0                0  0.137934
555  2024-11-27  0.077950  0.094252  ...              0                0  0.135829
556  2024-11-28  0.077140  0.092826  ...              0                0  0.133770
557  2024-11-29  0.078760  0.091654  ...              0                0  0.131840
558  2024-12-01  0.086500  0.091224  ...              0                0  0.130249

[559 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.08506}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.08506}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.040786       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.050259       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.047413       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.046184       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.042239       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.077950  0.094252  ...            0.0              0.0  0.135829
556  2024-11-28  0.077140  0.092826  ...            0.0              0.0  0.133770
557  2024-11-29  0.078760  0.091654  ...            0.0              0.0  0.131840
558  2024-12-01  0.086500  0.091224  ...            0.0              0.0  0.130249
559  2024-12-02  0.085060       NaN  ...            NaN              NaN       NaN

[560 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Radiant_Capital_RDNT
NECESSARRRY AAAA START
0
0
2024-04-02
2024-04-12
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                     Name    Price  ...  middle_flip_date  long_flip_date
482  Radiant Capital RDNT  0.08506  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Braintrust_BTRST
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.41318}]
success ya
UWAGA
db_BTRSTUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00  0.926881  ...              0                0
1    2023-01-02 00:00:00  0.911614  ...              0                0
2    2023-01-03 00:00:00  0.915750  ...              0                0
3    2023-01-04 00:00:00  0.919269  ...              0                0
4    2023-01-05 00:00:00  0.893492  ...              0                0
..                   ...       ...  ...            ...              ...
468           2024-04-13  0.807100  ...              0                1
469           2024-04-14  0.786300  ...              0                1
470           2024-04-15  0.799490  ...              0                1
471           2024-04-16  0.781560  ...              0                1
472           2024-04-17  0.807770  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.81036}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.81966}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.81121}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.81121}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.80424}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.80452}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.82989}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.83366}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.8392}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.81402}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.80722}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.81154}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.80953}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.79887}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.79212}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.75921}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.80569}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.80569}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.80511}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.80466}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.77777}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.78739}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.77675}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.79491}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.76312}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.77075}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.77201}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.75874}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.75979}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.74946}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.75009}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.74712}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.73781}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.66819}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.67702}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.61665}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.57625}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.53592}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.53592}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.51197}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.44299}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.50048}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.53212}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.52634}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.53691}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.56324}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.59563}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.56422}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.54108}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.54371}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.50259}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.52852}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.49483}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.49932}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.34737}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.33342}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.34905}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.355}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.34439}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.3442}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.33271}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.37499}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.37944}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.36715}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.39312}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.39341}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.39904}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.41146}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.4191}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.41318}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.41318}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Stella_ALPHA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10952}]
success ya
UWAGA
db_ALPHAUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.064607       NaN  ...              0                0       NaN
1    2023-01-02  0.070576       NaN  ...              0                0       NaN
2    2023-01-03  0.078276       NaN  ...              0                0       NaN
3    2023-01-04  0.079853       NaN  ...              0                0       NaN
4    2023-01-05  0.077002       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.098140  0.087646  ...              0                0  0.097498
556  2024-11-28  0.098550  0.088555  ...              0                0  0.097535
557  2024-11-29  0.100790  0.089574  ...              0                0  0.097649
558  2024-11-30  0.100730  0.090504  ...              0                0  0.097757
559  2024-12-01  0.118850  0.092866  ...              0                0  0.098497

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10952}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.10952}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.064607       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.070576       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.078276       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.079853       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.077002       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.098550  0.088555  ...            0.0              0.0  0.097535
557  2024-11-29  0.100790  0.089574  ...            0.0              0.0  0.097649
558  2024-11-30  0.100730  0.090504  ...            0.0              0.0  0.097757
559  2024-12-01  0.118850  0.092866  ...            0.0              0.0  0.098497
560  2024-12-02  0.109520       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Stella_ALPHA
NECESSARRRY AAAA START
0
0
2024-04-17
2024-06-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
484  Stella ALPHA  0.10952  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
BakeryToken_BAKE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.34173}]
success ya
UWAGA
db_BAKEUSD
COINDBBB
                    Date     Close     EMA23     EMA82    SMA200
0    2023-01-01 00:00:00  0.129815       NaN       NaN       NaN
1    2023-01-02 00:00:00  0.132613       NaN       NaN       NaN
2    2023-01-03 00:00:00  0.132756       NaN       NaN       NaN
3    2023-01-04 00:00:00  0.134741       NaN       NaN       NaN
4    2023-01-05 00:00:00  0.134986       NaN       NaN       NaN
..                   ...       ...       ...       ...       ...
446  2024-03-22 00:00:00  0.443570  0.424226  0.385040  0.271617
447  2024-03-23 00:00:00  0.411858  0.423196  0.385686  0.273179
448  2024-03-24 00:00:00  0.432952  0.424009  0.386825  0.274817
449  2024-03-25 00:00:00  0.448817  0.426076  0.388319  0.276529
450  2024-03-26 00:00:00  0.464747  0.429299  0.390160  0.278338

[451 rows x 5 columns]
last_db_date_data
2024-03-26
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.26529}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.264}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.264}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.26654}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.26067}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.28981}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.27223}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.27968}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.27726}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.26277}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.28785}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.29655}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.31354}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.32035}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.33425}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.34021}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.34021}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.32529}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.31164}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.3033}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.30188}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.30419}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.30056}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.29107}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.31482}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.32864}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.35498}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.34389}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.34064}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.32405}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.31065}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.31162}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.27581}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.38287}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.38817}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.38385}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.44519}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.44519}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.45775}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.39556}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.34229}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.33052}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.37431}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.38265}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.39435}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.27821}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.27962}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.26662}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.27234}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.27462}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.28076}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.28258}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.29312}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.24921}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.25414}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.25126}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.24722}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.24945}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.25668}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.27045}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.29872}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.30901}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.28127}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.32179}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.31159}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.32191}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.31973}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.31964}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.36509}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.34173}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.34173}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Lista_DAO_LISTA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.53443}]
success ya
UWAGA
db_LISTAUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_LISTAUSD': no such table: db_LISTAUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Bancor_BNT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.81666}]
success ya
UWAGA
db_BNTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.369401       NaN  ...              0                0       NaN
1    2023-01-02  0.358273       NaN  ...              0                0       NaN
2    2023-01-03  0.350831       NaN  ...              0                0       NaN
3    2023-01-04  0.351936       NaN  ...              0                0       NaN
4    2023-01-05  0.347097       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.637650  0.731323  ...              0                0  0.776833
487  2024-05-02  0.669610  0.726180  ...              0                0  0.773071
488  2024-05-03  0.699950  0.723994  ...              0                0  0.770505
489  2024-05-04  0.699880  0.721984  ...              0                0  0.768027
490  2024-05-05  0.699880  0.720142  ...              0                0  0.765636

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.68866}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.6833}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.6833}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.6748}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.66037}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.69436}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.70541}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.73221}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.73662}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.72542}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.78198}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.79025}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.78399}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.79344}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.81362}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.80072}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.80072}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.84107}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.80857}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.80198}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.80562}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.79753}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.81446}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.80488}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.8089}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.82551}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.8268}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.80944}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.79589}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.74717}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.73086}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.74175}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.69633}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.7351}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.70189}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.69951}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.68947}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.68947}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.66807}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.62244}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.64601}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.64716}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.64293}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.64185}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.63337}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.60174}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.63286}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.62272}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.63383}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.63016}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.61477}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.6258}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.63908}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.61695}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.635}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.63499}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.63389}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.65624}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.65814}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.65751}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.68539}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.70398}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.71458}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.67306}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.74047}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.73794}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.75494}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.75638}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.79287}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.81666}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.81666}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Verum_Coin_VERUM
[{'Date': datetime.date(2024, 12, 2), 'Price': 1049.24}]
success ya
UWAGA
db_VERUMUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_VERUMUSD': no such table: db_VERUMUSD
trying
 inicjacja duplicates
duplicate info
[False]
Tornado_Cash_TORN
[{'Date': datetime.date(2024, 12, 2), 'Price': 18.5649}]
success ya
UWAGA
db_TORNUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_TORNUSD': no such table: db_TORNUSD
trying
 inicjacja duplicates
duplicate info
[False]
Lista_DAO_LISTA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.53443}]
success ya
UWAGA
db_LISTAUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_LISTAUSD': no such table: db_LISTAUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Origin_Protocol_OGN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.14063}]
success ya
UWAGA
db_OGNUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.085692       NaN  ...              0                0       NaN
1    2023-01-02  0.087487       NaN  ...              0                0       NaN
2    2023-01-03  0.089700       NaN  ...              0                0       NaN
3    2023-01-04  0.089998       NaN  ...              0                0       NaN
4    2023-01-05  0.088848       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.127520  0.113571  ...              0                0  0.125207
556  2024-11-28  0.127060  0.114695  ...              0                0  0.125272
557  2024-11-29  0.131290  0.116078  ...              0                0  0.125484
558  2024-11-30  0.130360  0.117268  ...              0                0  0.125655
559  2024-12-01  0.138340  0.119024  ...              0                0  0.126100

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.14063}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.14063}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.085692       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.087487       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.089700       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.089998       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.088848       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.127060  0.114695  ...            0.0              0.0  0.125272
557  2024-11-29  0.131290  0.116078  ...            0.0              0.0  0.125484
558  2024-11-30  0.130360  0.117268  ...            0.0              0.0  0.125655
559  2024-12-01  0.138340  0.119024  ...            0.0              0.0  0.126100
560  2024-12-02  0.140630       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Origin_Protocol_OGN
NECESSARRRY AAAA START
0
0
2024-04-16
2024-05-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
491  Origin Protocol OGN  0.14063  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ARPA_Chain_ARPA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.06268}]
success ya
UWAGA
db_ARPAUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.026610       NaN  ...              0                0       NaN
1    2023-01-02  0.026697       NaN  ...              0                0       NaN
2    2023-01-03  0.026548       NaN  ...              0                0       NaN
3    2023-01-04  0.027219       NaN  ...              0                0       NaN
4    2023-01-05  0.026861       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.059130  0.054581  ...              0                0  0.059297
556  2024-11-28  0.059240  0.054970  ...              0                0  0.059295
557  2024-11-29  0.059250  0.055326  ...              0                0  0.059294
558  2024-11-30  0.059240  0.055652  ...              0                0  0.059292
559  2024-12-01  0.064430  0.056384  ...              0                0  0.059472

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.06268}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.06268}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.026610       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.026697       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.026548       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.027219       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.026861       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.059240  0.054970  ...            0.0              0.0  0.059295
557  2024-11-29  0.059250  0.055326  ...            0.0              0.0  0.059294
558  2024-11-30  0.059240  0.055652  ...            0.0              0.0  0.059292
559  2024-12-01  0.064430  0.056384  ...            0.0              0.0  0.059472
560  2024-12-02  0.062680       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted ARPA_Chain_ARPA
NECESSARRRY AAAA START
0
0
2024-06-08
2024-06-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
492  ARPA Chain ARPA  0.06268  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Clash_of_Lilliput_COL
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.15518}]
success ya
UWAGA
db_COLUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_COLUSD': no such table: db_COLUSD
trying
 inicjacja duplicates
duplicate info
[False]
StormX_STMX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00764}]
success ya
UWAGA
db_STMXUSD
COINDBBB
                    Date     Close     EMA23     EMA82    SMA200
0    2023-01-01 00:00:00  0.003591       NaN       NaN       NaN
1    2023-01-02 00:00:00  0.003710       NaN       NaN       NaN
2    2023-01-03 00:00:00  0.003743       NaN       NaN       NaN
3    2023-01-04 00:00:00  0.003823       NaN       NaN       NaN
4    2023-01-05 00:00:00  0.003755       NaN       NaN       NaN
..                   ...       ...       ...       ...       ...
446  2024-03-22 00:00:00  0.010110  0.010297  0.008942  0.007859
447  2024-03-23 00:00:00  0.010277  0.010295  0.008975  0.007886
448  2024-03-24 00:00:00  0.010832  0.010340  0.009019  0.007916
449  2024-03-25 00:00:00  0.011430  0.010431  0.009077  0.007949
450  2024-03-26 00:00:00  0.013204  0.010662  0.009177  0.007991

[451 rows x 5 columns]
last_db_date_data
2024-03-26
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.00709}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.00706}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.00706}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.00694}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.00696}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.00738}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.0074}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.00752}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.0074}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.00714}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.00778}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.0086}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.00885}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.00808}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.00804}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.00805}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.00805}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.00821}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.00807}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.008}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.00778}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.00768}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.00769}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.00755}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.00718}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.00726}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.0074}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.00732}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.00729}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.00672}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.00674}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.00678}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.00617}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.00657}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.00634}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.0062}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.00602}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.00602}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.00482}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.00462}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.00462}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.00453}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.00463}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.00456}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.00483}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.0048}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.00483}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.00483}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.00475}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.00489}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.00475}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.00614}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00646}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.00765}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00682}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00665}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00667}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.00698}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.00732}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.00728}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.0073}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.00802}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.00779}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.00799}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.00794}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.00812}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00764}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00764}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
GameBuild_GAME
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00583}]
success ya
UWAGA
db_GAMEUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_GAMEUSD': no such table: db_GAMEUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
LUKSO_LYX
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.07465}]
success ya
UWAGA
db_LYXUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-07-24  7.122588       NaN  ...              0                0       NaN
1      2023-07-25  7.027936       NaN  ...              0                0       NaN
2      2023-07-26  6.587325       NaN  ...              0                0       NaN
3      2023-07-27  6.390066       NaN  ...              0                0       NaN
4      2023-07-28  6.499017       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
17283  2024-11-27  1.843600  1.600687  ...              0                0  1.611183
17284  2024-11-28  1.860700  1.622355  ...              0                1  1.619938
17285  2024-11-29  1.993200  1.653259  ...              0                1  1.633035
17286  2024-11-30  3.165600  1.779287  ...              1                1  1.686809
17287  2024-12-01  3.085300  1.888122  ...              1                1  1.735879

[17288 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.07465}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.07465}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-07-24  7.122588       NaN  ...            0.0              0.0       NaN
1      2023-07-25  7.027936       NaN  ...            0.0              0.0       NaN
2      2023-07-26  6.587325       NaN  ...            0.0              0.0       NaN
3      2023-07-27  6.390066       NaN  ...            0.0              0.0       NaN
4      2023-07-28  6.499017       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
17284  2024-11-28  1.860700  1.622355  ...            0.0              1.0  1.619938
17285  2024-11-29  1.993200  1.653259  ...            0.0              1.0  1.633035
17286  2024-11-30  3.165600  1.779287  ...            1.0              1.0  1.686809
17287  2024-12-01  3.085300  1.888122  ...            1.0              1.0  1.735879
17288  2024-12-02  3.074650       NaN  ...            NaN              NaN       NaN

[17289 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted LUKSO_LYX
NECESSARRRY AAAA START
1
1
2024-11-28
2024-11-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
496  LUKSO LYX  3.07465  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Renzo_REZ
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05579}]
success ya
UWAGA
db_REZUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-30  0.16030       NaN  ...       NaN              0                0
1    2024-05-01  0.15270       NaN  ...       NaN              0                0
2    2024-05-02  0.15660       NaN  ...       NaN              0                0
3    2024-05-03  0.18310       NaN  ...       NaN              0                0
4    2024-05-04  0.19280       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
211  2024-11-27  0.05349  0.041195  ...  0.066078              0                1
212  2024-11-28  0.05249  0.042136  ...  0.065672              0                1
213  2024-11-29  0.05156  0.042922  ...  0.065335              0                1
214  2024-11-30  0.05208  0.043685  ...  0.065051              0                1
215  2024-12-01  0.05637  0.044742  ...  0.064758              0                1

[216 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05579}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.05579}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-30  0.16030       NaN  ...       NaN            0.0              0.0
1    2024-05-01  0.15270       NaN  ...       NaN            0.0              0.0
2    2024-05-02  0.15660       NaN  ...       NaN            0.0              0.0
3    2024-05-03  0.18310       NaN  ...       NaN            0.0              0.0
4    2024-05-04  0.19280       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
212  2024-11-28  0.05249  0.042136  ...  0.065672            0.0              1.0
213  2024-11-29  0.05156  0.042922  ...  0.065335            0.0              1.0
214  2024-11-30  0.05208  0.043685  ...  0.065051            0.0              1.0
215  2024-12-01  0.05637  0.044742  ...  0.064758            0.0              1.0
216  2024-12-02  0.05579       NaN  ...       NaN            NaN              NaN

[217 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Renzo_REZ
NECESSARRRY AAAA START
1
0
2024-11-27
None
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
          Name    Price  ...  middle_flip_date  long_flip_date
497  Renzo REZ  0.05579  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Loom_Network_LOOM
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07532}]
success ya
UWAGA
db_LOOMUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.040250       NaN  ...              0                0       NaN
1      2023-01-02  0.040954       NaN  ...              0                0       NaN
2      2023-01-03  0.040284       NaN  ...              0                0       NaN
3      2023-01-04  0.041292       NaN  ...              0                0       NaN
4      2023-01-05  0.040827       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
15372  2024-11-27  0.080330  0.065236  ...              1                1  0.059493
15373  2024-11-28  0.077370  0.066247  ...              1                1  0.060120
15374  2024-11-29  0.078470  0.067266  ...              1                1  0.060764
15375  2024-11-30  0.079350  0.068273  ...              1                1  0.061416
15376  2024-12-01  0.079530  0.069211  ...              1                1  0.062052

[15377 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07532}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.07532}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.040250       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.040954       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.040284       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.041292       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.040827       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
15373  2024-11-28  0.077370  0.066247  ...            1.0              1.0  0.060120
15374  2024-11-29  0.078470  0.067266  ...            1.0              1.0  0.060764
15375  2024-11-30  0.079350  0.068273  ...            1.0              1.0  0.061416
15376  2024-12-01  0.079530  0.069211  ...            1.0              1.0  0.062052
15377  2024-12-02  0.075320       NaN  ...            NaN              NaN       NaN

[15378 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Loom_Network_LOOM
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-16
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
[*********************100%%**********************]  1 of 1 completed
                  Name    Price  ...  middle_flip_date  long_flip_date
498  Loom Network LOOM  0.07532  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Toshi_TOSHI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00023}]
success ya
UWAGA
db_TOSHIUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-08-05 00:00:00  0.000041  ...              0                0
1    2023-08-06 00:00:00  0.000040  ...              0                0
2    2023-08-07 00:00:00  0.000067  ...              0                0
3    2023-08-08 00:00:00  0.000060  ...              0                0
4    2023-08-09 00:00:00  0.000060  ...              0                0
..                   ...       ...  ...            ...              ...
252           2024-04-13  0.000500  ...              1                1
253           2024-04-14  0.000460  ...              1                1
254           2024-04-15  0.000440  ...              1                1
255           2024-04-16  0.000380  ...              1                1
256           2024-04-17  0.000370  ...              1                1

[257 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 0.00029}, {'Date': datetime.date(2024, 5, 10), 'Price': 0.00029}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.00029}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.00029}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.0003}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.00031}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.00034}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.00033}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.00034}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.00032}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.0003}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.00031}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.00035}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.00033}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.0003}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.0003}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.0003}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.0003}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.00029}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.00023}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.00025}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.00031}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.00039}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.00038}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.00043}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.0005}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.0005}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.00048}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.00044}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.00054}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.00046}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.0005}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.00047}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.00037}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.00044}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.00038}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.00036}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.00036}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.00036}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.00031}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.00028}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.00028}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.00026}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.00022}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.00024}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.00029}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.00026}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.00028}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.00026}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.00025}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.00025}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.00026}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.00025}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.00029}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.0003}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00028}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.00027}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00027}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00029}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00027}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.00027}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.00026}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.00026}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.00023}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.00024}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.00024}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.00022}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.00021}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.00022}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00023}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00023}]
there are no available prices for all missing dates
Downloading from Kucoin
CRITICAL 1
"None of [Index([0, 2], dtype='int64')] are in the [columns]"
trying
 inicjacja duplicates
duplicate info
[False]
KARRAT_KARRAT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.59261}]
success ya
UWAGA
db_KARRATUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-22  0.88850       NaN  ...       NaN              0                0
1    2024-04-23  0.79900       NaN  ...       NaN              0                0
2    2024-04-24  0.72950       NaN  ...       NaN              0                0
3    2024-04-25  0.68760       NaN  ...       NaN              0                0
4    2024-04-26  0.68480       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
219  2024-11-27  0.52214  0.501703  ...  0.547516              0                1
220  2024-11-28  0.50214  0.501739  ...  0.547525              0                1
221  2024-11-29  0.48845  0.500632  ...  0.547509              0                1
222  2024-11-30  0.49853  0.500457  ...  0.547757              0                1
223  2024-12-01  0.49556  0.500049  ...  0.547344              0                1

[224 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.59261}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.59261}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-04-22  0.88850       NaN  ...       NaN            0.0              0.0
1    2024-04-23  0.79900       NaN  ...       NaN            0.0              0.0
2    2024-04-24  0.72950       NaN  ...       NaN            0.0              0.0
3    2024-04-25  0.68760       NaN  ...       NaN            0.0              0.0
4    2024-04-26  0.68480       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
220  2024-11-28  0.50214  0.501739  ...  0.547525            0.0              1.0
221  2024-11-29  0.48845  0.500632  ...  0.547509            0.0              1.0
222  2024-11-30  0.49853  0.500457  ...  0.547757            0.0              1.0
223  2024-12-01  0.49556  0.500049  ...  0.547344            0.0              1.0
224  2024-12-02  0.59261       NaN  ...       NaN            NaN              NaN

[225 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted KARRAT_KARRAT
NECESSARRRY AAAA START
1
1
2024-09-28
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
500  KARRAT KARRAT  0.59261  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
 remove duplicates sprawdzone
duplicate info
[False, None, None]
BUBCAT_BUB
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04133}]
success ya
UWAGA
db_BUBUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BUBUSD': no such table: db_BUBUSD
trying
 inicjacja duplicates
duplicate info
[False]
BUBCAT_BUB
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04133}]
success ya
UWAGA
db_BUBUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BUBUSD': no such table: db_BUBUSD
trying
 inicjacja duplicates
duplicate info
[False]
BUBCAT_BUB
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04133}]
success ya
UWAGA
db_BUBUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BUBUSD': no such table: db_BUBUSD
trying
 inicjacja duplicates
duplicate info
[False]
BUBCAT_BUB
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04133}]
success ya
UWAGA
db_BUBUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BUBUSD': no such table: db_BUBUSD
trying
 inicjacja duplicates
duplicate info
[False]
Euro_Coin_EURC
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.0517}]
success ya
UWAGA
db_EURCUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_EURCUSD': no such table: db_EURCUSD
trying
 inicjacja duplicates
duplicate info
[False]
Tokamak_Network_TON
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.08856}]
success ya
UWAGA
db_TONUSD
COINDBBB
            Date   Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0     2023-03-14  2.4273       NaN  ...              0                0       NaN
1     2023-03-15  2.4542       NaN  ...              0                0       NaN
2     2023-03-16  2.4325       NaN  ...              0                0       NaN
3     2023-03-17  2.4596       NaN  ...              0                0       NaN
4     2023-03-18  2.4025       NaN  ...              0                0       NaN
...          ...     ...       ...  ...            ...              ...       ...
6097  2024-11-27  6.3724  5.614106  ...              1                1  5.449296
6098  2024-11-28  6.4335  5.682389  ...              1                1  5.483830
6099  2024-11-29  6.4490  5.746273  ...              1                1  5.517695
6100  2024-11-30  6.8212  5.835850  ...              1                1  5.563432
6101  2024-12-01  6.8344  5.919063  ...              1                1  5.608028

[6102 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.08856}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.08856}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date    Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0     2023-03-14  2.42730       NaN  ...            0.0              0.0       NaN
1     2023-03-15  2.45420       NaN  ...            0.0              0.0       NaN
2     2023-03-16  2.43250       NaN  ...            0.0              0.0       NaN
3     2023-03-17  2.45960       NaN  ...            0.0              0.0       NaN
4     2023-03-18  2.40250       NaN  ...            0.0              0.0       NaN
...          ...      ...       ...  ...            ...              ...       ...
6098  2024-11-28  6.43350  5.682389  ...            1.0              1.0  5.483830
6099  2024-11-29  6.44900  5.746273  ...            1.0              1.0  5.517695
6100  2024-11-30  6.82120  5.835850  ...            1.0              1.0  5.563432
6101  2024-12-01  6.83440  5.919063  ...            1.0              1.0  5.608028
6102  2024-12-02  2.08856       NaN  ...            NaN              NaN       NaN

[6103 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Tokamak_Network_TON
NECESSARRRY AAAA START
1
1
2024-11-23
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
504  Tokamak Network TON  2.08856  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Myria_MYRIA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00352}]
success ya
UWAGA
db_MYRIAUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000094       NaN  ...              0                0       NaN
1      2023-01-02  0.000163       NaN  ...              0                0       NaN
2      2023-01-03  0.000179       NaN  ...              0                0       NaN
3      2023-01-04  0.000175       NaN  ...              0                0       NaN
4      2023-01-05  0.000175       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
26753  2024-11-27  0.002840  0.002281  ...              0                0  0.002334
26754  2024-11-28  0.002897  0.002332  ...              0                0  0.002353
26755  2024-11-29  0.003344  0.002416  ...              1                1  0.002388
26756  2024-11-30  0.003482  0.002505  ...              1                1  0.002426
26757  2024-12-01  0.004183  0.002645  ...              1                1  0.002488

[26758 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00352}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00352}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.000094       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.000163       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.000179       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.000175       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.000175       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
26754  2024-11-28  0.002897  0.002332  ...            0.0              0.0  0.002353
26755  2024-11-29  0.003344  0.002416  ...            1.0              1.0  0.002388
26756  2024-11-30  0.003482  0.002505  ...            1.0              1.0  0.002426
26757  2024-12-01  0.004183  0.002645  ...            1.0              1.0  0.002488
26758  2024-12-02  0.003520       NaN  ...            NaN              NaN       NaN

[26759 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Myria_MYRIA
NECESSARRRY AAAA START
1
1
2024-11-29
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
505  Myria MYRIA  0.00352  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MARBLEX_MBX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.51427}]
success ya
UWAGA
db_MBXUSD
COINDBBB
                    Date     Close     EMA23     EMA82    SMA200
0    2023-01-01 00:00:00  0.000157       NaN       NaN       NaN
1    2023-01-02 00:00:00  0.000157       NaN       NaN       NaN
2    2023-01-03 00:00:00  0.000164       NaN       NaN       NaN
3    2023-01-04 00:00:00  0.000154       NaN       NaN       NaN
4    2023-01-05 00:00:00  0.000155       NaN       NaN       NaN
..                   ...       ...       ...       ...       ...
231  2023-08-20 00:00:00  0.000035  0.000037  0.000050  0.000087
232  2023-08-21 00:00:00  0.000035  0.000037  0.000049  0.000087
233  2023-08-22 00:00:00  0.000035  0.000036  0.000049  0.000086
234  2023-08-23 00:00:00  0.000035  0.000036  0.000048  0.000085
235  2023-08-24 00:00:00  0.000035  0.000036  0.000048  0.000085

[236 rows x 5 columns]
last_db_date_data
2023-08-24
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.76297}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.76425}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.76425}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.75668}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.73513}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.78284}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.78263}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.78603}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.78014}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.76318}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.77625}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.79056}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.78604}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.77625}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.78137}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.8016}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.8016}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.85478}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.9318}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.92873}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.89748}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.86786}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.90562}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.88056}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.89966}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.89773}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.87423}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.87111}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.86142}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.80847}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.77983}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.75874}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.71727}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.77283}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.73264}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.71392}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.69246}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.69246}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.64705}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.61846}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.63735}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.64641}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.63182}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.6312}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.63299}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.6083}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.62997}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.64901}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.64599}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.63402}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.61626}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.61256}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.60686}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.35057}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.39618}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.39372}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.36855}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.37108}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.37888}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.3866}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.43524}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.44673}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.41034}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.42666}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.42542}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.43488}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.43296}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.49421}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.51427}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.51427}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
BILLION•DOLLAR•CAT_BDC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.09036}]
success ya
UWAGA
db_BDCUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BDCUSD': no such table: db_BDCUSD
trying
 inicjacja duplicates
duplicate info
[False]
AI_Analysis_Token_AIAT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.613}]
success ya
UWAGA
db_AIATUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_AIATUSD': no such table: db_AIATUSD
trying
 inicjacja duplicates
duplicate info
[False]
NKN_NKN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11201}]
success ya
UWAGA
db_NKNUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.080644       NaN  ...              0                0       NaN
1    2023-01-02  0.082040       NaN  ...              0                0       NaN
2    2023-01-03  0.082412       NaN  ...              0                0       NaN
3    2023-01-04  0.082351       NaN  ...              0                0       NaN
4    2023-01-05  0.083750       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.113370  0.094378  ...              0                0  0.100572
556  2024-11-28  0.110090  0.095687  ...              0                0  0.100906
557  2024-11-29  0.112410  0.097081  ...              0                0  0.101309
558  2024-11-30  0.111250  0.098262  ...              0                0  0.101658
559  2024-12-01  0.114880  0.099646  ...              0                0  0.102122

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11201}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.11201}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.080644       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.082040       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.082412       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.082351       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.083750       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.110090  0.095687  ...            0.0              0.0  0.100906
557  2024-11-29  0.112410  0.097081  ...            0.0              0.0  0.101309
558  2024-11-30  0.111250  0.098262  ...            0.0              0.0  0.101658
559  2024-12-01  0.114880  0.099646  ...            0.0              0.0  0.102122
560  2024-12-02  0.112010       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted NKN_NKN
NECESSARRRY AAAA START
0
0
2024-04-19
2024-06-06
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
509  NKN NKN  0.11201  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
LeverFi_LEVER
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00249}]
success ya
UWAGA
db_LEVERUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_LEVERUSD': no such table: db_LEVERUSD
trying
 inicjacja duplicates
duplicate info
[False]
BitMart_Token_BMX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.26703}]
success ya
UWAGA
db_BMXUSD
COINDBBB
           Date    Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-02-02  0.21920       NaN  ...             0                0       NaN
1    2024-02-03  0.20590       NaN  ...             0                0       NaN
2    2024-02-04  0.20920       NaN  ...             0                0       NaN
3    2024-02-05  0.22150       NaN  ...             0                0       NaN
4    2024-02-06  0.21600       NaN  ...             0                0       NaN
..          ...      ...       ...  ...           ...              ...       ...
351  2024-11-27  0.27987  0.322407  ...             0                0  0.343046
352  2024-11-28  0.27629  0.318564  ...             0                0  0.340704
353  2024-11-29  0.27365  0.314821  ...             0                0  0.338351
354  2024-11-30  0.27376  0.311399  ...             0                0  0.336085
355  2024-12-01  0.27332  0.308226  ...             0                0  0.333883

[356 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.26703}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.26703}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-02-02  0.21920       NaN  ...           0.0              0.0       NaN
1    2024-02-03  0.20590       NaN  ...           0.0              0.0       NaN
2    2024-02-04  0.20920       NaN  ...           0.0              0.0       NaN
3    2024-02-05  0.22150       NaN  ...           0.0              0.0       NaN
4    2024-02-06  0.21600       NaN  ...           0.0              0.0       NaN
..          ...      ...       ...  ...           ...              ...       ...
352  2024-11-28  0.27629  0.318564  ...           0.0              0.0  0.340704
353  2024-11-29  0.27365  0.314821  ...           0.0              0.0  0.338351
354  2024-11-30  0.27376  0.311399  ...           0.0              0.0  0.336085
355  2024-12-01  0.27332  0.308226  ...           0.0              0.0  0.333883
356  2024-12-02  0.26703       NaN  ...           NaN              NaN       NaN

[357 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted BitMart_Token_BMX
NECESSARRRY AAAA START
0
0
2024-11-20
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
511  BitMart Token BMX  0.26703  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
QuarkChain_QKC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01224}]
success ya
UWAGA
db_QKCUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.007952       NaN  ...              0                0       NaN
1    2023-01-02  0.007725       NaN  ...              0                0       NaN
2    2023-01-03  0.007578       NaN  ...              0                0       NaN
3    2023-01-04  0.007602       NaN  ...              0                0       NaN
4    2023-01-05  0.007525       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.014460  0.009862  ...              1                0  0.010150
556  2024-11-28  0.012950  0.010119  ...              1                0  0.010248
557  2024-11-29  0.012680  0.010332  ...              1                0  0.010334
558  2024-11-30  0.012720  0.010531  ...              1                1  0.010417
559  2024-12-01  0.012690  0.010711  ...              1                1  0.010497

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01224}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01224}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.007952       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.007725       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.007578       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.007602       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.007525       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.012950  0.010119  ...            1.0              0.0  0.010248
557  2024-11-29  0.012680  0.010332  ...            1.0              0.0  0.010334
558  2024-11-30  0.012720  0.010531  ...            1.0              1.0  0.010417
559  2024-12-01  0.012690  0.010711  ...            1.0              1.0  0.010497
560  2024-12-02  0.012240       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted QuarkChain_QKC
NECESSARRRY AAAA START
1
1
2024-11-30
2024-11-27
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
512  QuarkChain QKC  0.01224  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
SaucerSwap_SAUCE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11775}]
success ya
UWAGA
db_SAUCEUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_SAUCEUSD': no such table: db_SAUCEUSD
trying
 inicjacja duplicates
duplicate info
[False]
NYM_NYM
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10652}]
success ya
UWAGA
db_NYMUSD
COINDBBB
            Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0     2023-01-01  0.179380       NaN  ...              0                0       NaN
1     2023-01-02  0.186696       NaN  ...              0                0       NaN
2     2023-01-03  0.186921       NaN  ...              0                0       NaN
3     2023-01-04  0.192813       NaN  ...              0                0       NaN
4     2023-01-05  0.189595       NaN  ...              0                0       NaN
...          ...       ...       ...  ...            ...              ...       ...
6982  2024-11-27  0.101800  0.093278  ...              0                1  0.085503
6983  2024-11-28  0.108940  0.094583  ...              1                1  0.086325
6984  2024-11-29  0.105960  0.095531  ...              1                1  0.087014
6985  2024-11-30  0.106240  0.096424  ...              1                1  0.087688
6986  2024-12-01  0.107120  0.097315  ...              1                1  0.088370

[6987 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10652}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.10652}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0     2023-01-01  0.179380       NaN  ...            0.0              0.0       NaN
1     2023-01-02  0.186696       NaN  ...            0.0              0.0       NaN
2     2023-01-03  0.186921       NaN  ...            0.0              0.0       NaN
3     2023-01-04  0.192813       NaN  ...            0.0              0.0       NaN
4     2023-01-05  0.189595       NaN  ...            0.0              0.0       NaN
...          ...       ...       ...  ...            ...              ...       ...
6983  2024-11-28  0.108940  0.094583  ...            1.0              1.0  0.086325
6984  2024-11-29  0.105960  0.095531  ...            1.0              1.0  0.087014
6985  2024-11-30  0.106240  0.096424  ...            1.0              1.0  0.087688
6986  2024-12-01  0.107120  0.097315  ...            1.0              1.0  0.088370
6987  2024-12-02  0.106520       NaN  ...            NaN              NaN       NaN

[6988 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted NYM_NYM
NECESSARRRY AAAA START
1
1
2024-11-13
2024-11-28
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
        Name    Price  ...  middle_flip_date  long_flip_date
514  NYM NYM  0.10652  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
ApeX_Protocol_APEX
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.75767}]
success ya
UWAGA
db_APEXUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    0.001309  ...              0                0
1    2023-01-02 00:00:00    0.001306  ...              0                0
2    2023-01-03 00:00:00    0.000831  ...              0                0
3    2023-01-04 00:00:00    0.000956  ...              0                0
4    2023-01-05 00:00:00    0.001132  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  276.054000  ...              1                1
469           2024-04-14  258.529000  ...              1                1
470           2024-04-15  272.939000  ...              1                1
471           2024-04-16   26.673000  ...              1                1
472           2024-04-17    2.488220  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 2.36935}, {'Date': datetime.date(2024, 5, 11), 'Price': 2.4038}, {'Date': datetime.date(2024, 5, 12), 'Price': 2.4038}, {'Date': datetime.date(2024, 5, 13), 'Price': 2.41235}, {'Date': datetime.date(2024, 5, 14), 'Price': 2.38234}, {'Date': datetime.date(2024, 5, 15), 'Price': 2.57394}, {'Date': datetime.date(2024, 5, 16), 'Price': 2.83699}, {'Date': datetime.date(2024, 5, 17), 'Price': 3.07753}, {'Date': datetime.date(2024, 5, 18), 'Price': 2.84346}, {'Date': datetime.date(2024, 5, 19), 'Price': 2.97205}, {'Date': datetime.date(2024, 5, 20), 'Price': 2.9967}, {'Date': datetime.date(2024, 5, 21), 'Price': 3.00904}, {'Date': datetime.date(2024, 5, 22), 'Price': 2.93703}, {'Date': datetime.date(2024, 5, 23), 'Price': 2.95502}, {'Date': datetime.date(2024, 5, 24), 'Price': 2.85007}, {'Date': datetime.date(2024, 5, 25), 'Price': 2.95863}, {'Date': datetime.date(2024, 5, 26), 'Price': 2.95863}, {'Date': datetime.date(2024, 5, 27), 'Price': 3.03725}, {'Date': datetime.date(2024, 5, 28), 'Price': 2.95999}, {'Date': datetime.date(2024, 5, 29), 'Price': 3.05799}, {'Date': datetime.date(2024, 5, 30), 'Price': 3.0224}, {'Date': datetime.date(2024, 5, 31), 'Price': 2.93842}, {'Date': datetime.date(2024, 6, 1), 'Price': 2.98049}, {'Date': datetime.date(2024, 6, 2), 'Price': 2.90496}, {'Date': datetime.date(2024, 6, 3), 'Price': 2.89531}, {'Date': datetime.date(2024, 6, 4), 'Price': 2.94755}, {'Date': datetime.date(2024, 6, 5), 'Price': 2.90025}, {'Date': datetime.date(2024, 6, 6), 'Price': 2.86433}, {'Date': datetime.date(2024, 6, 7), 'Price': 2.84683}, {'Date': datetime.date(2024, 6, 8), 'Price': 2.73911}, {'Date': datetime.date(2024, 6, 9), 'Price': 2.72555}, {'Date': datetime.date(2024, 6, 10), 'Price': 2.69311}, {'Date': datetime.date(2024, 6, 11), 'Price': 2.52005}, {'Date': datetime.date(2024, 6, 12), 'Price': 2.64637}, {'Date': datetime.date(2024, 6, 13), 'Price': 2.63477}, {'Date': datetime.date(2024, 6, 14), 'Price': 2.56169}, {'Date': datetime.date(2024, 6, 15), 'Price': 2.48661}, {'Date': datetime.date(2024, 6, 16), 'Price': 2.48661}, {'Date': datetime.date(2024, 6, 17), 'Price': 2.30578}, {'Date': datetime.date(2024, 6, 18), 'Price': 2.37127}, {'Date': datetime.date(2024, 6, 19), 'Price': 2.52038}, {'Date': datetime.date(2024, 6, 20), 'Price': 2.75288}, {'Date': datetime.date(2024, 6, 21), 'Price': 2.78431}, {'Date': datetime.date(2024, 6, 22), 'Price': 2.77384}, {'Date': datetime.date(2024, 6, 23), 'Price': 2.67387}, {'Date': datetime.date(2024, 6, 24), 'Price': 2.61996}, {'Date': datetime.date(2024, 6, 25), 'Price': 2.63831}, {'Date': datetime.date(2024, 6, 26), 'Price': 2.64328}, {'Date': datetime.date(2024, 6, 27), 'Price': 2.5672}, {'Date': datetime.date(2024, 6, 28), 'Price': 2.51644}, {'Date': datetime.date(2024, 6, 29), 'Price': 2.50427}, {'Date': datetime.date(2024, 6, 30), 'Price': 2.4648}, {'Date': datetime.date(2024, 7, 1), 'Price': 2.54105}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.75017}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.81693}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.83339}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.98298}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.93704}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.97426}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.987}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.99063}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.92108}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.77107}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.87916}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.79511}, {'Date': datetime.date(2024, 11, 29), 'Price': 1.80531}, {'Date': datetime.date(2024, 11, 30), 'Price': 1.79237}, {'Date': datetime.date(2024, 12, 1), 'Price': 1.80424}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.75767}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.75767}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Gods_Unchained_GODS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.25329}]
success ya
UWAGA
db_GODSUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.22390       NaN  ...       NaN              0                0
1    2023-04-07  0.22260       NaN  ...       NaN              0                0
2    2023-04-08  0.21920       NaN  ...       NaN              0                0
3    2023-04-09  0.22540       NaN  ...       NaN              0                0
4    2023-04-10  0.22760       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
463  2024-11-27  0.23251  0.211084  ...  0.279404              0                0
464  2024-11-28  0.23566  0.213132  ...  0.278689              0                0
465  2024-11-29  0.24040  0.215404  ...  0.277998              0                0
466  2024-11-30  0.24162  0.217589  ...  0.277418              0                0
467  2024-12-01  0.25561  0.220757  ...  0.276889              0                1

[468 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.25329}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.25329}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.22390       NaN  ...       NaN            0.0              0.0
1    2023-04-07  0.22260       NaN  ...       NaN            0.0              0.0
2    2023-04-08  0.21920       NaN  ...       NaN            0.0              0.0
3    2023-04-09  0.22540       NaN  ...       NaN            0.0              0.0
4    2023-04-10  0.22760       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
464  2024-11-28  0.23566  0.213132  ...  0.278689            0.0              0.0
465  2024-11-29  0.24040  0.215404  ...  0.277998            0.0              0.0
466  2024-11-30  0.24162  0.217589  ...  0.277418            0.0              0.0
467  2024-12-01  0.25561  0.220757  ...  0.276889            0.0              1.0
468  2024-12-02  0.25329       NaN  ...       NaN            NaN              NaN

[469 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Gods_Unchained_GODS
NECESSARRRY AAAA START
1
0
2024-12-01
2024-04-09
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
516  Gods Unchained GODS  0.25329  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Pocket_Network_POKT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05127}]
success ya
UWAGA
db_POKTUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.055663       NaN  ...              0                0       NaN
1    2023-01-02  0.057674       NaN  ...              0                0       NaN
2    2023-01-03  0.056125       NaN  ...              0                0       NaN
3    2023-01-04  0.056010       NaN  ...              0                0       NaN
4    2023-01-05  0.054541       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-27  0.049960  0.064503  ...              0                0  0.091759
557  2024-11-28  0.051290  0.063402  ...              0                0  0.090339
558  2024-11-29  0.051690  0.062426  ...              0                0  0.088983
559  2024-11-30  0.050510  0.061433  ...              0                0  0.087633
560  2024-12-01  0.053550  0.060776  ...              0                0  0.086437

[561 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05127}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.05127}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.055663       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.057674       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.056125       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.056010       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.054541       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
557  2024-11-28  0.051290  0.063402  ...            0.0              0.0  0.090339
558  2024-11-29  0.051690  0.062426  ...            0.0              0.0  0.088983
559  2024-11-30  0.050510  0.061433  ...            0.0              0.0  0.087633
560  2024-12-01  0.053550  0.060776  ...            0.0              0.0  0.086437
561  2024-12-02  0.051270       NaN  ...            NaN              NaN       NaN

[562 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Pocket_Network_POKT
NECESSARRRY AAAA START
0
0
2024-04-16
2024-04-26
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
517  Pocket Network POKT  0.05127  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
LTO_Network_LTO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.19343}]
success ya
UWAGA
db_LTOUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.066238       NaN  ...              0                0       NaN
1    2023-01-02  0.067904       NaN  ...              0                0       NaN
2    2023-01-03  0.067124       NaN  ...              0                0       NaN
3    2023-01-04  0.068354       NaN  ...              0                0       NaN
4    2023-01-05  0.068718       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.186990  0.159883  ...              1                0  0.166194
556  2024-11-28  0.179150  0.161489  ...              1                0  0.166648
557  2024-11-29  0.188670  0.163754  ...              1                0  0.167421
558  2024-11-30  0.186020  0.165610  ...              1                0  0.168073
559  2024-12-01  0.199170  0.168406  ...              1                0  0.169165

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.19343}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.19343}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.066238       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.067904       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.067124       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.068354       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.068718       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.179150  0.161489  ...            1.0              0.0  0.166648
557  2024-11-29  0.188670  0.163754  ...            1.0              0.0  0.167421
558  2024-11-30  0.186020  0.165610  ...            1.0              0.0  0.168073
559  2024-12-01  0.199170  0.168406  ...            1.0              0.0  0.169165
560  2024-12-02  0.193430       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted LTO_Network_LTO
NECESSARRRY AAAA START
1
1
2024-12-02
2024-11-18
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
518  LTO Network LTO  0.19343  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Maple_MPL
[{'Date': datetime.date(2024, 12, 2), 'Price': 19.0052}]
success ya
UWAGA
db_MPLUSD
COINDBBB
                    Date      Close      EMA23      EMA82     SMA200
0    2023-01-01 00:00:00   2.842794        NaN        NaN        NaN
1    2023-01-02 00:00:00   3.183177        NaN        NaN        NaN
2    2023-01-03 00:00:00   3.075191        NaN        NaN        NaN
3    2023-01-04 00:00:00   3.032224        NaN        NaN        NaN
4    2023-01-05 00:00:00   2.973787        NaN        NaN        NaN
..                   ...        ...        ...        ...        ...
446  2024-03-22 00:00:00  17.038860  15.894677  14.497595  11.873924
447  2024-03-23 00:00:00  20.170116  16.250964  14.634282  11.952829
448  2024-03-24 00:00:00  20.636621  16.616435  14.778917  12.033975
449  2024-03-25 00:00:00  23.395695  17.181373  14.986550  12.128618
450  2024-03-26 00:00:00  25.060202  17.837942  15.229289  12.230964

[451 rows x 5 columns]
last_db_date_data
2024-03-26
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 13.0248}, {'Date': datetime.date(2024, 5, 11), 'Price': 13.2853}, {'Date': datetime.date(2024, 5, 12), 'Price': 13.2853}, {'Date': datetime.date(2024, 5, 13), 'Price': 12.4027}, {'Date': datetime.date(2024, 5, 14), 'Price': 11.7068}, {'Date': datetime.date(2024, 5, 15), 'Price': 12.5483}, {'Date': datetime.date(2024, 5, 16), 'Price': 13.4066}, {'Date': datetime.date(2024, 5, 17), 'Price': 14.0467}, {'Date': datetime.date(2024, 5, 18), 'Price': 13.8253}, {'Date': datetime.date(2024, 5, 19), 'Price': 13.4905}, {'Date': datetime.date(2024, 5, 20), 'Price': 15.0015}, {'Date': datetime.date(2024, 5, 21), 'Price': 16.4485}, {'Date': datetime.date(2024, 5, 22), 'Price': 15.8626}, {'Date': datetime.date(2024, 5, 23), 'Price': 15.3892}, {'Date': datetime.date(2024, 5, 24), 'Price': 14.7549}, {'Date': datetime.date(2024, 5, 25), 'Price': 15.0034}, {'Date': datetime.date(2024, 5, 26), 'Price': 15.0034}, {'Date': datetime.date(2024, 5, 27), 'Price': 14.9637}, {'Date': datetime.date(2024, 5, 28), 'Price': 14.7886}, {'Date': datetime.date(2024, 5, 29), 'Price': 14.6864}, {'Date': datetime.date(2024, 5, 30), 'Price': 13.8478}, {'Date': datetime.date(2024, 5, 31), 'Price': 13.9931}, {'Date': datetime.date(2024, 6, 1), 'Price': 14.6735}, {'Date': datetime.date(2024, 6, 2), 'Price': 13.6935}, {'Date': datetime.date(2024, 6, 3), 'Price': 14.0077}, {'Date': datetime.date(2024, 6, 4), 'Price': 14.3059}, {'Date': datetime.date(2024, 6, 5), 'Price': 16.9373}, {'Date': datetime.date(2024, 6, 6), 'Price': 16.2488}, {'Date': datetime.date(2024, 6, 7), 'Price': 17.0}, {'Date': datetime.date(2024, 6, 8), 'Price': 15.7797}, {'Date': datetime.date(2024, 6, 9), 'Price': 16.9217}, {'Date': datetime.date(2024, 6, 10), 'Price': 16.7137}, {'Date': datetime.date(2024, 6, 11), 'Price': 14.776}, {'Date': datetime.date(2024, 6, 12), 'Price': 14.9751}, {'Date': datetime.date(2024, 6, 13), 'Price': 14.3113}, {'Date': datetime.date(2024, 6, 14), 'Price': 13.9594}, {'Date': datetime.date(2024, 6, 15), 'Price': 12.7696}, {'Date': datetime.date(2024, 6, 16), 'Price': 12.7696}, {'Date': datetime.date(2024, 6, 17), 'Price': 12.796}, {'Date': datetime.date(2024, 6, 18), 'Price': 11.0142}, {'Date': datetime.date(2024, 6, 19), 'Price': 11.9023}, {'Date': datetime.date(2024, 6, 20), 'Price': 12.2434}, {'Date': datetime.date(2024, 6, 21), 'Price': 11.9023}, {'Date': datetime.date(2024, 6, 22), 'Price': 11.943}, {'Date': datetime.date(2024, 6, 23), 'Price': 13.196}, {'Date': datetime.date(2024, 6, 24), 'Price': 12.1527}, {'Date': datetime.date(2024, 6, 25), 'Price': 13.1518}, {'Date': datetime.date(2024, 6, 26), 'Price': 12.9058}, {'Date': datetime.date(2024, 6, 27), 'Price': 12.9286}, {'Date': datetime.date(2024, 6, 28), 'Price': 11.6884}, {'Date': datetime.date(2024, 6, 29), 'Price': 11.9352}, {'Date': datetime.date(2024, 6, 30), 'Price': 11.6463}, {'Date': datetime.date(2024, 7, 1), 'Price': 14.2598}, {'Date': datetime.date(2024, 11, 17), 'Price': 22.4456}, {'Date': datetime.date(2024, 11, 18), 'Price': 23.1482}, {'Date': datetime.date(2024, 11, 19), 'Price': 22.0768}, {'Date': datetime.date(2024, 11, 20), 'Price': 20.6421}, {'Date': datetime.date(2024, 11, 21), 'Price': 24.9359}, {'Date': datetime.date(2024, 11, 22), 'Price': 23.7041}, {'Date': datetime.date(2024, 11, 23), 'Price': 23.3273}, {'Date': datetime.date(2024, 11, 24), 'Price': 22.4836}, {'Date': datetime.date(2024, 11, 25), 'Price': 22.7886}, {'Date': datetime.date(2024, 11, 26), 'Price': 21.2685}, {'Date': datetime.date(2024, 11, 27), 'Price': 22.748}, {'Date': datetime.date(2024, 11, 28), 'Price': 21.8255}, {'Date': datetime.date(2024, 11, 29), 'Price': 20.0826}, {'Date': datetime.date(2024, 11, 30), 'Price': 20.4178}, {'Date': datetime.date(2024, 12, 1), 'Price': 20.8251}, {'Date': datetime.date(2024, 12, 2), 'Price': 19.0052}, {'Date': datetime.date(2024, 12, 2), 'Price': 19.0052}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Tensor_TNSR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.66978}]
success ya
UWAGA
db_TNSRUSD
COINDBBB
           Date    Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-04-08  1.65510       NaN  ...             0                0       NaN
1    2024-04-09  1.82680       NaN  ...             0                0       NaN
2    2024-04-10  1.63400       NaN  ...             0                0       NaN
3    2024-04-11  1.40110       NaN  ...             0                0       NaN
4    2024-04-12  1.07030       NaN  ...             0                0       NaN
..          ...      ...       ...  ...           ...              ...       ...
295  2024-11-27  0.59790  0.631996  ...             0                0  0.758257
296  2024-11-28  0.62752  0.631623  ...             0                0  0.753670
297  2024-11-29  0.63542  0.631940  ...             0                0  0.749521
298  2024-11-30  0.64002  0.632613  ...             0                0  0.745679
299  2024-12-01  0.69996  0.638225  ...             0                0  0.744075

[300 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.66978}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.66978}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0    2024-04-08  1.65510       NaN  ...           0.0              0.0       NaN
1    2024-04-09  1.82680       NaN  ...           0.0              0.0       NaN
2    2024-04-10  1.63400       NaN  ...           0.0              0.0       NaN
3    2024-04-11  1.40110       NaN  ...           0.0              0.0       NaN
4    2024-04-12  1.07030       NaN  ...           0.0              0.0       NaN
..          ...      ...       ...  ...           ...              ...       ...
296  2024-11-28  0.62752  0.631623  ...           0.0              0.0  0.753670
297  2024-11-29  0.63542  0.631940  ...           0.0              0.0  0.749521
298  2024-11-30  0.64002  0.632613  ...           0.0              0.0  0.745679
299  2024-12-01  0.69996  0.638225  ...           0.0              0.0  0.744075
300  2024-12-02  0.66978       NaN  ...           NaN              NaN       NaN

[301 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Tensor_TNSR
NECESSARRRY AAAA START
0
0
2024-06-17
2024-06-11
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
520  Tensor TNSR  0.66978  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Gains_Network_GNS
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.51347}]
success ya
UWAGA
db_GNSUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  3.377984       NaN  ...              0                0       NaN
1      2023-01-02  3.362727       NaN  ...              0                0       NaN
2      2023-01-03  3.112973       NaN  ...              0                0       NaN
3      2023-01-04  3.145234       NaN  ...              0                0       NaN
4      2023-01-05  3.260677       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27560  2024-11-27  2.571000  2.129687  ...              1                1  2.061798
27561  2024-11-28  2.440000  2.155546  ...              0                1  2.075068
27562  2024-11-29  2.522000  2.186084  ...              0                1  2.090750
27563  2024-11-30  2.589000  2.219660  ...              1                1  2.108233
27564  2024-12-01  2.578000  2.249522  ...              1                1  2.124716

[27565 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.51347}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.51347}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  3.377984       NaN  ...            0.0              0.0       NaN
1      2023-01-02  3.362727       NaN  ...            0.0              0.0       NaN
2      2023-01-03  3.112973       NaN  ...            0.0              0.0       NaN
3      2023-01-04  3.145234       NaN  ...            0.0              0.0       NaN
4      2023-01-05  3.260677       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27561  2024-11-28  2.440000  2.155546  ...            0.0              1.0  2.075068
27562  2024-11-29  2.522000  2.186084  ...            0.0              1.0  2.090750
27563  2024-11-30  2.589000  2.219660  ...            1.0              1.0  2.108233
27564  2024-12-01  2.578000  2.249522  ...            1.0              1.0  2.124716
27565  2024-12-02  2.513470       NaN  ...            NaN              NaN       NaN

[27566 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Gains_Network_GNS
NECESSARRRY AAAA START
1
1
2024-11-24
2024-11-30
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
521  Gains Network GNS  2.51347  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Aragon_ANT
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.91473}]
success ya
UWAGA
db_ANTUSD
COINDBBB
           Date   Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-05-27  3.4798       NaN  ...       NaN              0                0
1    2023-05-28  3.5409       NaN  ...       NaN              0                0
2    2023-05-29  3.5913       NaN  ...       NaN              0                0
3    2023-05-30  3.5747       NaN  ...       NaN              0                0
4    2023-05-31  3.5162       NaN  ...       NaN              0                0
..          ...     ...       ...  ...       ...            ...              ...
275  2024-02-26  8.0371  7.082522  ...  5.327171              1                1
276  2024-02-27  8.2081  7.176320  ...  5.347330              1                1
277  2024-02-28  8.5841  7.293635  ...  5.369073              1                1
278  2024-02-29  8.4913  7.393440  ...  5.389601              1                1
279  2024-03-01  8.6829  7.500895  ...  5.411132              1                1

[280 rows x 7 columns]
last_db_date_data
2024-03-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 7.60415}, {'Date': datetime.date(2024, 5, 10), 'Price': 7.35747}, {'Date': datetime.date(2024, 5, 11), 'Price': 7.34368}, {'Date': datetime.date(2024, 5, 12), 'Price': 7.34368}, {'Date': datetime.date(2024, 5, 13), 'Price': 7.45199}, {'Date': datetime.date(2024, 5, 14), 'Price': 7.34133}, {'Date': datetime.date(2024, 5, 15), 'Price': 7.65516}, {'Date': datetime.date(2024, 5, 16), 'Price': 7.46272}, {'Date': datetime.date(2024, 5, 17), 'Price': 7.85558}, {'Date': datetime.date(2024, 5, 18), 'Price': 7.90759}, {'Date': datetime.date(2024, 5, 19), 'Price': 7.76046}, {'Date': datetime.date(2024, 5, 20), 'Price': 9.20941}, {'Date': datetime.date(2024, 5, 21), 'Price': 9.6235}, {'Date': datetime.date(2024, 5, 22), 'Price': 9.30284}, {'Date': datetime.date(2024, 5, 23), 'Price': 9.5318}, {'Date': datetime.date(2024, 5, 24), 'Price': 9.42936}, {'Date': datetime.date(2024, 5, 25), 'Price': 9.46191}, {'Date': datetime.date(2024, 5, 26), 'Price': 9.46191}, {'Date': datetime.date(2024, 5, 27), 'Price': 9.86728}, {'Date': datetime.date(2024, 5, 28), 'Price': 9.90121}, {'Date': datetime.date(2024, 5, 29), 'Price': 9.64159}, {'Date': datetime.date(2024, 5, 30), 'Price': 9.447}, {'Date': datetime.date(2024, 5, 31), 'Price': 9.4263}, {'Date': datetime.date(2024, 6, 1), 'Price': 9.58253}, {'Date': datetime.date(2024, 6, 2), 'Price': 9.58408}, {'Date': datetime.date(2024, 6, 3), 'Price': 9.53529}, {'Date': datetime.date(2024, 6, 4), 'Price': 9.65298}, {'Date': datetime.date(2024, 6, 5), 'Price': 9.73625}, {'Date': datetime.date(2024, 6, 6), 'Price': 9.70037}, {'Date': datetime.date(2024, 6, 7), 'Price': 9.59197}, {'Date': datetime.date(2024, 6, 8), 'Price': 9.31958}, {'Date': datetime.date(2024, 6, 9), 'Price': 9.33431}, {'Date': datetime.date(2024, 6, 10), 'Price': 9.35553}, {'Date': datetime.date(2024, 6, 11), 'Price': 8.72031}, {'Date': datetime.date(2024, 6, 12), 'Price': 9.12322}, {'Date': datetime.date(2024, 6, 13), 'Price': 8.84167}, {'Date': datetime.date(2024, 6, 14), 'Price': 8.76837}, {'Date': datetime.date(2024, 6, 15), 'Price': 8.98259}, {'Date': datetime.date(2024, 6, 16), 'Price': 8.98259}, {'Date': datetime.date(2024, 6, 17), 'Price': 8.89298}, {'Date': datetime.date(2024, 6, 18), 'Price': 8.66537}, {'Date': datetime.date(2024, 6, 19), 'Price': 8.99184}, {'Date': datetime.date(2024, 6, 20), 'Price': 8.8345}, {'Date': datetime.date(2024, 6, 21), 'Price': 8.81909}, {'Date': datetime.date(2024, 6, 22), 'Price': 8.89564}, {'Date': datetime.date(2024, 6, 23), 'Price': 8.90272}, {'Date': datetime.date(2024, 6, 24), 'Price': 8.26323}, {'Date': datetime.date(2024, 6, 25), 'Price': 8.65357}, {'Date': datetime.date(2024, 6, 26), 'Price': 8.53615}, {'Date': datetime.date(2024, 6, 27), 'Price': 8.73902}, {'Date': datetime.date(2024, 6, 28), 'Price': 8.62733}, {'Date': datetime.date(2024, 6, 29), 'Price': 8.5823}, {'Date': datetime.date(2024, 6, 30), 'Price': 8.68559}, {'Date': datetime.date(2024, 7, 1), 'Price': 8.79904}, {'Date': datetime.date(2024, 11, 17), 'Price': 2.5462}, {'Date': datetime.date(2024, 11, 18), 'Price': 3.12131}, {'Date': datetime.date(2024, 11, 19), 'Price': 2.56582}, {'Date': datetime.date(2024, 11, 20), 'Price': 2.10056}, {'Date': datetime.date(2024, 11, 21), 'Price': 4.67468}, {'Date': datetime.date(2024, 11, 22), 'Price': 2.89028}, {'Date': datetime.date(2024, 11, 23), 'Price': 2.34832}, {'Date': datetime.date(2024, 11, 24), 'Price': 3.32224}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.74395}, {'Date': datetime.date(2024, 11, 26), 'Price': 2.28262}, {'Date': datetime.date(2024, 11, 27), 'Price': 2.86154}, {'Date': datetime.date(2024, 11, 28), 'Price': 3.01786}, {'Date': datetime.date(2024, 11, 29), 'Price': 4.43388}, {'Date': datetime.date(2024, 11, 30), 'Price': 3.62772}, {'Date': datetime.date(2024, 12, 1), 'Price': 5.62442}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.91473}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.91473}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
DAO_Maker_DAO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.42947}]
success ya
UWAGA
db_DAOUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.828534       NaN  ...              0                0       NaN
1      2023-01-02  0.825435       NaN  ...              0                0       NaN
2      2023-01-03  0.822467       NaN  ...              0                0       NaN
3      2023-01-04  0.826194       NaN  ...              0                0       NaN
4      2023-01-05  0.814231       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27159  2024-11-27  0.436000  0.379490  ...              1                1  0.342073
27160  2024-11-28  0.421000  0.382949  ...              0                1  0.344842
27161  2024-11-29  0.436000  0.387370  ...              1                1  0.348041
27162  2024-11-30  0.464000  0.393756  ...              1                1  0.352110
27163  2024-12-01  0.458000  0.399110  ...              1                1  0.355825

[27164 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.42947}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.42947}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.828534       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.825435       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.822467       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.826194       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.814231       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27160  2024-11-28  0.421000  0.382949  ...            0.0              1.0  0.344842
27161  2024-11-29  0.436000  0.387370  ...            1.0              1.0  0.348041
27162  2024-11-30  0.464000  0.393756  ...            1.0              1.0  0.352110
27163  2024-12-01  0.458000  0.399110  ...            1.0              1.0  0.355825
27164  2024-12-02  0.429470       NaN  ...            NaN              NaN       NaN

[27165 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted DAO_Maker_DAO
NECESSARRRY AAAA START
1
1
2024-11-17
2024-11-29
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
523  DAO Maker DAO  0.42947  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
First_Convicted_Raccon_Fred_FRED
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.08195}]
success ya
UWAGA
db_FREDUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_FREDUSD': no such table: db_FREDUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Tectum_TET
[{'Date': datetime.date(2024, 12, 2), 'Price': 10.4221}]
success ya
UWAGA
db_TETUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-07-03 00:00:00    5.453747  ...              0                0
1    2023-07-04 00:00:00    4.203793  ...              0                0
2    2023-07-05 00:00:00    6.136406  ...              0                0
3    2023-07-06 00:00:00    5.335695  ...              0                0
4    2023-07-07 00:00:00    5.261456  ...              0                0
..                   ...         ...  ...            ...              ...
282           2024-04-13  214.785000  ...              1                1
283           2024-04-14  200.042000  ...              1                1
284           2024-04-15   21.122000  ...              0                1
285           2024-04-16  202.446000  ...              1                1
286           2024-04-17   19.362000  ...              0                1

[287 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 14.5721}, {'Date': datetime.date(2024, 5, 11), 'Price': 14.6152}, {'Date': datetime.date(2024, 5, 12), 'Price': 14.6152}, {'Date': datetime.date(2024, 5, 13), 'Price': 14.5145}, {'Date': datetime.date(2024, 5, 14), 'Price': 14.6821}, {'Date': datetime.date(2024, 5, 15), 'Price': 14.2482}, {'Date': datetime.date(2024, 5, 16), 'Price': 13.7473}, {'Date': datetime.date(2024, 5, 17), 'Price': 13.6544}, {'Date': datetime.date(2024, 5, 18), 'Price': 13.315}, {'Date': datetime.date(2024, 5, 19), 'Price': 12.2509}, {'Date': datetime.date(2024, 5, 20), 'Price': 14.6059}, {'Date': datetime.date(2024, 5, 21), 'Price': 14.6827}, {'Date': datetime.date(2024, 5, 22), 'Price': 14.8568}, {'Date': datetime.date(2024, 5, 23), 'Price': 14.33}, {'Date': datetime.date(2024, 5, 24), 'Price': 14.1559}, {'Date': datetime.date(2024, 5, 25), 'Price': 13.9987}, {'Date': datetime.date(2024, 5, 26), 'Price': 13.9987}, {'Date': datetime.date(2024, 5, 27), 'Price': 13.7157}, {'Date': datetime.date(2024, 5, 28), 'Price': 12.4202}, {'Date': datetime.date(2024, 5, 29), 'Price': 12.3615}, {'Date': datetime.date(2024, 5, 30), 'Price': 12.3032}, {'Date': datetime.date(2024, 5, 31), 'Price': 12.0211}, {'Date': datetime.date(2024, 6, 1), 'Price': 12.1712}, {'Date': datetime.date(2024, 6, 2), 'Price': 12.0084}, {'Date': datetime.date(2024, 6, 3), 'Price': 12.3102}, {'Date': datetime.date(2024, 6, 4), 'Price': 12.2861}, {'Date': datetime.date(2024, 6, 5), 'Price': 14.2895}, {'Date': datetime.date(2024, 6, 6), 'Price': 13.6735}, {'Date': datetime.date(2024, 6, 7), 'Price': 12.9601}, {'Date': datetime.date(2024, 6, 8), 'Price': 12.1151}, {'Date': datetime.date(2024, 6, 9), 'Price': 13.1495}, {'Date': datetime.date(2024, 6, 10), 'Price': 12.2866}, {'Date': datetime.date(2024, 6, 11), 'Price': 11.7216}, {'Date': datetime.date(2024, 6, 12), 'Price': 11.8878}, {'Date': datetime.date(2024, 6, 13), 'Price': 10.6876}, {'Date': datetime.date(2024, 6, 14), 'Price': 9.48945}, {'Date': datetime.date(2024, 6, 15), 'Price': 9.91602}, {'Date': datetime.date(2024, 6, 16), 'Price': 9.91602}, {'Date': datetime.date(2024, 6, 17), 'Price': 9.73557}, {'Date': datetime.date(2024, 6, 18), 'Price': 9.43014}, {'Date': datetime.date(2024, 6, 19), 'Price': 9.43987}, {'Date': datetime.date(2024, 6, 20), 'Price': 9.07927}, {'Date': datetime.date(2024, 6, 21), 'Price': 8.96544}, {'Date': datetime.date(2024, 6, 22), 'Price': 9.08734}, {'Date': datetime.date(2024, 6, 23), 'Price': 9.3682}, {'Date': datetime.date(2024, 6, 24), 'Price': 8.85211}, {'Date': datetime.date(2024, 6, 25), 'Price': 9.05597}, {'Date': datetime.date(2024, 6, 26), 'Price': 8.69123}, {'Date': datetime.date(2024, 6, 27), 'Price': 8.35303}, {'Date': datetime.date(2024, 6, 28), 'Price': 8.06022}, {'Date': datetime.date(2024, 6, 29), 'Price': 7.63928}, {'Date': datetime.date(2024, 6, 30), 'Price': 7.24147}, {'Date': datetime.date(2024, 7, 1), 'Price': 7.48051}, {'Date': datetime.date(2024, 11, 17), 'Price': 7.25262}, {'Date': datetime.date(2024, 11, 18), 'Price': 8.12744}, {'Date': datetime.date(2024, 11, 19), 'Price': 7.91371}, {'Date': datetime.date(2024, 11, 20), 'Price': 7.36851}, {'Date': datetime.date(2024, 11, 21), 'Price': 7.61849}, {'Date': datetime.date(2024, 11, 22), 'Price': 7.52091}, {'Date': datetime.date(2024, 11, 23), 'Price': 7.07963}, {'Date': datetime.date(2024, 11, 24), 'Price': 7.98038}, {'Date': datetime.date(2024, 11, 25), 'Price': 7.84588}, {'Date': datetime.date(2024, 11, 26), 'Price': 7.45239}, {'Date': datetime.date(2024, 11, 27), 'Price': 8.39589}, {'Date': datetime.date(2024, 11, 28), 'Price': 9.21}, {'Date': datetime.date(2024, 11, 29), 'Price': 9.89168}, {'Date': datetime.date(2024, 11, 30), 'Price': 9.99274}, {'Date': datetime.date(2024, 12, 1), 'Price': 9.97861}, {'Date': datetime.date(2024, 12, 2), 'Price': 10.4221}, {'Date': datetime.date(2024, 12, 2), 'Price': 10.4221}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
ArchLoot_AL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.14523}]
success ya
UWAGA
db_ALUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ALUSD': no such table: db_ALUSD
trying
 inicjacja duplicates
duplicate info
[False]
XPLA_XPLA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.10887}]
success ya
UWAGA
db_XPLAUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00  0.406475  ...              0                0
1    2023-01-02 00:00:00  0.442469  ...              0                0
2    2023-01-03 00:00:00  0.416450  ...              0                0
3    2023-01-04 00:00:00  0.428398  ...              0                0
4    2023-01-05 00:00:00  0.434998  ...              0                0
..                   ...       ...  ...            ...              ...
468           2024-04-13  0.179710  ...              0                1
469           2024-04-14  0.162840  ...              0                0
470           2024-04-15  0.180160  ...              0                0
471           2024-04-16  0.171720  ...              0                0
472           2024-04-17  0.165170  ...              0                0

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.14303}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.14244}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.14244}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.1394}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.13781}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.14337}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.14332}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.14466}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.14378}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.1414}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.14382}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.14509}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.14228}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.13924}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.14566}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.15204}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.15204}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.16072}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.16924}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.16878}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.17029}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.1643}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.16736}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.16671}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.16253}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.16243}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.16248}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.16153}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.152}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.14447}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.13987}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.13892}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.13224}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.13284}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.12979}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.12749}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.12107}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.12107}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.10393}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.09837}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.10176}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.10118}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.10174}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.10113}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.09998}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.09681}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.09954}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.10104}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.10157}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.09832}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.09778}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.09596}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.09876}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.08518}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.09395}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.09042}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.08776}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.08702}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.08617}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.08648}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.09526}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.10141}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.09588}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.09846}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.09813}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.10309}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.10312}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.10748}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.10887}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.10887}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Pangolin_PNG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.36947}]
success ya
UWAGA
db_PNGUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.034156       NaN  ...              0                0       NaN
1    2023-01-02  0.036406       NaN  ...              0                0       NaN
2    2023-01-03  0.040429       NaN  ...              0                0       NaN
3    2023-01-04  0.040192       NaN  ...              0                0       NaN
4    2023-01-05  0.040184       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
486  2024-05-01  0.339190  0.405222  ...              1                1  0.394758
487  2024-05-02  0.387550  0.403749  ...              1                1  0.394505
488  2024-05-03  0.442280  0.406960  ...              1                1  0.396182
489  2024-05-04  0.439570  0.409678  ...              1                1  0.397704
490  2024-05-05  0.439570  0.412169  ...              1                1  0.399173

[491 rows x 8 columns]
last_db_date_data
2024-05-05
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.49414}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.52146}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.52146}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.51758}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.48058}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.51149}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.50653}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.51721}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.53418}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.53153}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.5508}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.57425}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.57955}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.551}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.50674}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.50776}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.50776}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.50266}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.47676}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.46152}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.46771}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.4669}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.45191}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.45257}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.47116}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.47266}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.51026}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.49443}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.46498}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.45392}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.44235}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.43444}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.3951}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.4184}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.40538}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.38357}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.38061}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.38061}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.3744}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.34111}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.38024}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.38315}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.37146}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.37379}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.38079}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.35983}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.37359}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.36781}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.41002}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.38095}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.38062}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.34923}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.36384}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.25667}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.32449}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.34618}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.36778}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.36947}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.36947}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
BOBO_BOBO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_BOBOUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_BOBOUSD': no such table: db_BOBOUSD
trying
 inicjacja duplicates
duplicate info
[False]
Heroes_of_Mavia_MAVIA
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.07715}]
success ya
UWAGA
db_MAVIAUSD
COINDBBB
            Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0     2024-02-06  3.270156       NaN  ...             0                0       NaN
1     2024-02-07  3.623158       NaN  ...             0                0       NaN
2     2024-02-08  4.332079       NaN  ...             0                0       NaN
3     2024-02-09  5.894462       NaN  ...             0                0       NaN
4     2024-02-10  7.962881       NaN  ...             0                0       NaN
...          ...       ...       ...  ...           ...              ...       ...
9194  2024-11-27  2.143200  1.601185  ...             1                1  1.497407
9195  2024-11-28  2.111700  1.643728  ...             1                1  1.518961
9196  2024-11-29  2.212800  1.691150  ...             1                1  1.543306
9197  2024-11-30  2.286200  1.740738  ...             1                1  1.569372
9198  2024-12-01  2.214100  1.780185  ...             1                1  1.591994

[9199 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.07715}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.07715}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date     Close     EMA23  ... Long_Trend_Up  Middle_Trend_Up     EMA56
0     2024-02-06  3.270156       NaN  ...           0.0              0.0       NaN
1     2024-02-07  3.623158       NaN  ...           0.0              0.0       NaN
2     2024-02-08  4.332079       NaN  ...           0.0              0.0       NaN
3     2024-02-09  5.894462       NaN  ...           0.0              0.0       NaN
4     2024-02-10  7.962881       NaN  ...           0.0              0.0       NaN
...          ...       ...       ...  ...           ...              ...       ...
9195  2024-11-28  2.111700  1.643728  ...           1.0              1.0  1.518961
9196  2024-11-29  2.212800  1.691150  ...           1.0              1.0  1.543306
9197  2024-11-30  2.286200  1.740738  ...           1.0              1.0  1.569372
9198  2024-12-01  2.214100  1.780185  ...           1.0              1.0  1.591994
9199  2024-12-02  2.077150       NaN  ...           NaN              NaN       NaN

[9200 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Heroes_of_Mavia_MAVIA
NECESSARRRY AAAA START
1
1
2024-11-24
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                      Name    Price  ...  middle_flip_date  long_flip_date
530  Heroes of Mavia MAVIA  2.07715  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Entangle_NGL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.13982}]
success ya
UWAGA
db_NGLUSD
COINDBBB
             Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0      2023-04-01  0.22596       NaN  ...       NaN              0                0
1      2023-04-02  0.22344       NaN  ...       NaN              0                0
2      2023-04-03  0.22752       NaN  ...       NaN              0                0
3      2023-04-04  0.22596       NaN  ...       NaN              0                0
4      2023-04-05  0.22202       NaN  ...       NaN              0                0
...           ...      ...       ...  ...       ...            ...              ...
19443  2024-11-27  0.07010  0.066450  ...  0.072247              0                0
19444  2024-11-28  0.07219  0.066928  ...  0.072040              1                0
19445  2024-11-29  0.07195  0.067346  ...  0.071839              1                0
19446  2024-11-30  0.06960  0.067534  ...  0.071639              0                0
19447  2024-12-01  0.07516  0.068170  ...  0.071429              1                1

[19448 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.13982}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.13982}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0      2023-04-01  0.22596       NaN  ...       NaN            0.0              0.0
1      2023-04-02  0.22344       NaN  ...       NaN            0.0              0.0
2      2023-04-03  0.22752       NaN  ...       NaN            0.0              0.0
3      2023-04-04  0.22596       NaN  ...       NaN            0.0              0.0
4      2023-04-05  0.22202       NaN  ...       NaN            0.0              0.0
...           ...      ...       ...  ...       ...            ...              ...
19444  2024-11-28  0.07219  0.066928  ...  0.072040            1.0              0.0
19445  2024-11-29  0.07195  0.067346  ...  0.071839            1.0              0.0
19446  2024-11-30  0.06960  0.067534  ...  0.071639            0.0              0.0
19447  2024-12-01  0.07516  0.068170  ...  0.071429            1.0              1.0
19448  2024-12-02  0.13982       NaN  ...       NaN            NaN              NaN

[19449 rows x 7 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Entangle_NGL
NECESSARRRY AAAA START
1
1
2024-12-01
2024-12-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
531  Entangle NGL  0.13982  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Stargate_Finance_STG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.39073}]
success ya
UWAGA
db_STGUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2022-03-21  3.316121       NaN  ...       NaN              0                0
1    2022-03-28  3.642575       NaN  ...       NaN              0                0
2    2022-04-04  2.237627       NaN  ...       NaN              0                0
3    2022-04-11  2.032978       NaN  ...       NaN              0                0
4    2022-04-18  1.397943       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
616  2024-11-27  0.381420  0.379286  ...  0.444199              0                0
617  2024-11-28  0.377080  0.379102  ...  0.441844              0                0
618  2024-11-29  0.382720  0.379404  ...  0.439769              0                0
619  2024-11-30  0.380030  0.379456  ...  0.437673              0                0
620  2024-12-01  0.421270  0.382941  ...  0.437098              0                0

[621 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.39073}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.39073}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2022-03-21  3.316121       NaN  ...       NaN            0.0              0.0
1    2022-03-28  3.642575       NaN  ...       NaN            0.0              0.0
2    2022-04-04  2.237627       NaN  ...       NaN            0.0              0.0
3    2022-04-11  2.032978       NaN  ...       NaN            0.0              0.0
4    2022-04-18  1.397943       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
617  2024-11-28  0.377080  0.379102  ...  0.441844            0.0              0.0
618  2024-11-29  0.382720  0.379404  ...  0.439769            0.0              0.0
619  2024-11-30  0.380030  0.379456  ...  0.437673            0.0              0.0
620  2024-12-01  0.421270  0.382941  ...  0.437098            0.0              0.0
621  2024-12-02  0.390730       NaN  ...       NaN            NaN              NaN

[622 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Stargate_Finance_STG
NECESSARRRY AAAA START
0
0
2024-06-17
2024-06-08
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                     Name    Price  ...  middle_flip_date  long_flip_date
532  Stargate Finance STG  0.39073  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MobileCoin_MOB
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.39975}]
success ya
UWAGA
db_MOBUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_MOBUSD': no such table: db_MOBUSD
trying
 inicjacja duplicates
duplicate info
[False]
Badger_DAO_BADGER
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.90692}]
success ya
UWAGA
db_BADGERUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    2.119206  ...              0                0
1    2023-01-02 00:00:00    2.153892  ...              0                0
2    2023-01-03 00:00:00    2.345861  ...              0                0
3    2023-01-04 00:00:00    2.372990  ...              0                0
4    2023-01-05 00:00:00    2.301792  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  458.327000  ...              1                1
469           2024-04-14  417.663000  ...              1                1
470           2024-04-15  419.948000  ...              1                1
471           2024-04-16   42.957000  ...              0                1
472           2024-04-17    4.061750  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 4.3254}, {'Date': datetime.date(2024, 5, 11), 'Price': 4.29317}, {'Date': datetime.date(2024, 5, 12), 'Price': 4.29317}, {'Date': datetime.date(2024, 5, 13), 'Price': 4.16078}, {'Date': datetime.date(2024, 5, 14), 'Price': 4.08536}, {'Date': datetime.date(2024, 5, 15), 'Price': 4.34769}, {'Date': datetime.date(2024, 5, 16), 'Price': 4.09665}, {'Date': datetime.date(2024, 5, 17), 'Price': 4.40325}, {'Date': datetime.date(2024, 5, 18), 'Price': 4.30885}, {'Date': datetime.date(2024, 5, 19), 'Price': 4.13571}, {'Date': datetime.date(2024, 5, 20), 'Price': 4.53788}, {'Date': datetime.date(2024, 5, 21), 'Price': 4.57929}, {'Date': datetime.date(2024, 5, 22), 'Price': 4.44329}, {'Date': datetime.date(2024, 5, 23), 'Price': 4.31036}, {'Date': datetime.date(2024, 5, 24), 'Price': 4.32359}, {'Date': datetime.date(2024, 5, 25), 'Price': 4.52218}, {'Date': datetime.date(2024, 5, 26), 'Price': 4.52218}, {'Date': datetime.date(2024, 5, 27), 'Price': 4.63958}, {'Date': datetime.date(2024, 5, 28), 'Price': 4.61384}, {'Date': datetime.date(2024, 5, 29), 'Price': 4.81515}, {'Date': datetime.date(2024, 5, 30), 'Price': 4.9478}, {'Date': datetime.date(2024, 5, 31), 'Price': 4.82853}, {'Date': datetime.date(2024, 6, 1), 'Price': 4.68324}, {'Date': datetime.date(2024, 6, 2), 'Price': 4.60326}, {'Date': datetime.date(2024, 6, 3), 'Price': 4.61408}, {'Date': datetime.date(2024, 6, 4), 'Price': 4.97354}, {'Date': datetime.date(2024, 6, 5), 'Price': 4.96164}, {'Date': datetime.date(2024, 6, 6), 'Price': 4.86368}, {'Date': datetime.date(2024, 6, 7), 'Price': 4.9271}, {'Date': datetime.date(2024, 6, 8), 'Price': 4.35231}, {'Date': datetime.date(2024, 6, 9), 'Price': 4.16615}, {'Date': datetime.date(2024, 6, 10), 'Price': 4.20028}, {'Date': datetime.date(2024, 6, 11), 'Price': 3.85708}, {'Date': datetime.date(2024, 6, 12), 'Price': 4.14841}, {'Date': datetime.date(2024, 6, 13), 'Price': 3.90392}, {'Date': datetime.date(2024, 6, 14), 'Price': 3.79254}, {'Date': datetime.date(2024, 6, 15), 'Price': 3.69193}, {'Date': datetime.date(2024, 6, 16), 'Price': 3.69193}, {'Date': datetime.date(2024, 6, 17), 'Price': 3.52559}, {'Date': datetime.date(2024, 6, 18), 'Price': 3.06451}, {'Date': datetime.date(2024, 6, 19), 'Price': 3.18666}, {'Date': datetime.date(2024, 6, 20), 'Price': 3.18171}, {'Date': datetime.date(2024, 6, 21), 'Price': 3.21611}, {'Date': datetime.date(2024, 6, 22), 'Price': 3.20592}, {'Date': datetime.date(2024, 6, 23), 'Price': 3.24344}, {'Date': datetime.date(2024, 6, 24), 'Price': 3.07185}, {'Date': datetime.date(2024, 6, 25), 'Price': 3.23359}, {'Date': datetime.date(2024, 6, 26), 'Price': 3.163}, {'Date': datetime.date(2024, 6, 27), 'Price': 3.21113}, {'Date': datetime.date(2024, 6, 28), 'Price': 3.1923}, {'Date': datetime.date(2024, 6, 29), 'Price': 3.12542}, {'Date': datetime.date(2024, 6, 30), 'Price': 3.17884}, {'Date': datetime.date(2024, 7, 1), 'Price': 3.2507}, {'Date': datetime.date(2024, 11, 17), 'Price': 3.19871}, {'Date': datetime.date(2024, 11, 18), 'Price': 3.36461}, {'Date': datetime.date(2024, 11, 19), 'Price': 3.3456}, {'Date': datetime.date(2024, 11, 20), 'Price': 3.26276}, {'Date': datetime.date(2024, 11, 21), 'Price': 3.33266}, {'Date': datetime.date(2024, 11, 22), 'Price': 3.35028}, {'Date': datetime.date(2024, 11, 23), 'Price': 3.47149}, {'Date': datetime.date(2024, 11, 24), 'Price': 3.7326}, {'Date': datetime.date(2024, 11, 25), 'Price': 3.74246}, {'Date': datetime.date(2024, 11, 26), 'Price': 3.30214}, {'Date': datetime.date(2024, 11, 27), 'Price': 3.7208}, {'Date': datetime.date(2024, 11, 28), 'Price': 3.72369}, {'Date': datetime.date(2024, 11, 29), 'Price': 3.7989}, {'Date': datetime.date(2024, 11, 30), 'Price': 3.77939}, {'Date': datetime.date(2024, 12, 1), 'Price': 3.95873}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.90692}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.90692}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Telos_TLOS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21105}]
success ya
UWAGA
db_TLOSUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.114762       NaN  ...              0                0       NaN
1    2023-01-02  0.115788       NaN  ...              0                0       NaN
2    2023-01-03  0.119643       NaN  ...              0                0       NaN
3    2023-01-04  0.120391       NaN  ...              0                0       NaN
4    2023-01-05  0.116830       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.199730  0.211194  ...              0                0  0.239582
556  2024-11-28  0.198790  0.210161  ...              0                0  0.238151
557  2024-11-29  0.199370  0.209262  ...              0                0  0.236790
558  2024-11-30  0.200170  0.208504  ...              0                0  0.235505
559  2024-12-01  0.207730  0.208439  ...              0                0  0.234531

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.21105}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.21105}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.114762       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.115788       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.119643       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.120391       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.116830       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.198790  0.210161  ...            0.0              0.0  0.238151
557  2024-11-29  0.199370  0.209262  ...            0.0              0.0  0.236790
558  2024-11-30  0.200170  0.208504  ...            0.0              0.0  0.235505
559  2024-12-01  0.207730  0.208439  ...            0.0              0.0  0.234531
560  2024-12-02  0.211050       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Telos_TLOS
NECESSARRRY AAAA START
0
0
2024-05-10
2024-06-07
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
535  Telos TLOS  0.21105  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Clover_CLV
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07923}]
success ya
UWAGA
db_CLVUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.06140       NaN  ...       NaN              0                0
1    2023-04-07  0.06027       NaN  ...       NaN              0                0
2    2023-04-08  0.06302       NaN  ...       NaN              0                0
3    2023-04-09  0.06388       NaN  ...       NaN              0                0
4    2023-04-10  0.06390       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
448  2024-11-27  0.08946  0.078954  ...  0.071893              1                1
449  2024-11-28  0.08619  0.079557  ...  0.072070              1                1
450  2024-11-29  0.08950  0.080386  ...  0.072263              1                1
451  2024-11-30  0.08902  0.081105  ...  0.072448              1                1
452  2024-12-01  0.08725  0.081617  ...  0.072625              1                1

[453 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07923}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.07923}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.06140       NaN  ...       NaN            0.0              0.0
1    2023-04-07  0.06027       NaN  ...       NaN            0.0              0.0
2    2023-04-08  0.06302       NaN  ...       NaN            0.0              0.0
3    2023-04-09  0.06388       NaN  ...       NaN            0.0              0.0
4    2023-04-10  0.06390       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
449  2024-11-28  0.08619  0.079557  ...  0.072070            1.0              1.0
450  2024-11-29  0.08950  0.080386  ...  0.072263            1.0              1.0
451  2024-11-30  0.08902  0.081105  ...  0.072448            1.0              1.0
452  2024-12-01  0.08725  0.081617  ...  0.072625            1.0              1.0
453  2024-12-02  0.07923       NaN  ...       NaN            NaN              NaN

[454 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Clover_CLV
NECESSARRRY AAAA START
1
1
2024-11-22
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
536  Clover CLV  0.07923  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Radworks_RAD
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.52267}]
success ya
UWAGA
db_RADUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    1.483714  ...              0                0
1    2023-01-02 00:00:00    1.498402  ...              0                0
2    2023-01-03 00:00:00    1.562326  ...              0                0
3    2023-01-04 00:00:00    1.550676  ...              0                0
4    2023-01-05 00:00:00    1.514366  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  195.577000  ...              1                1
469           2024-04-14  176.217000  ...              1                1
470           2024-04-15  171.072000  ...              1                1
471           2024-04-16  175.065000  ...              1                1
472           2024-04-17    1.649580  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 1.72206}, {'Date': datetime.date(2024, 5, 11), 'Price': 1.69197}, {'Date': datetime.date(2024, 5, 12), 'Price': 1.69197}, {'Date': datetime.date(2024, 5, 13), 'Price': 1.72504}, {'Date': datetime.date(2024, 5, 14), 'Price': 1.66236}, {'Date': datetime.date(2024, 5, 15), 'Price': 1.73301}, {'Date': datetime.date(2024, 5, 16), 'Price': 1.70777}, {'Date': datetime.date(2024, 5, 17), 'Price': 1.73569}, {'Date': datetime.date(2024, 5, 18), 'Price': 1.68925}, {'Date': datetime.date(2024, 5, 19), 'Price': 1.63419}, {'Date': datetime.date(2024, 5, 20), 'Price': 1.70763}, {'Date': datetime.date(2024, 5, 21), 'Price': 1.70706}, {'Date': datetime.date(2024, 5, 22), 'Price': 1.69278}, {'Date': datetime.date(2024, 5, 23), 'Price': 1.66882}, {'Date': datetime.date(2024, 5, 24), 'Price': 1.78}, {'Date': datetime.date(2024, 5, 25), 'Price': 1.77484}, {'Date': datetime.date(2024, 5, 26), 'Price': 1.77484}, {'Date': datetime.date(2024, 5, 27), 'Price': 1.71991}, {'Date': datetime.date(2024, 5, 28), 'Price': 1.73338}, {'Date': datetime.date(2024, 5, 29), 'Price': 1.75569}, {'Date': datetime.date(2024, 5, 30), 'Price': 1.82927}, {'Date': datetime.date(2024, 5, 31), 'Price': 1.78697}, {'Date': datetime.date(2024, 6, 1), 'Price': 1.80807}, {'Date': datetime.date(2024, 6, 2), 'Price': 1.83715}, {'Date': datetime.date(2024, 6, 3), 'Price': 1.78099}, {'Date': datetime.date(2024, 6, 4), 'Price': 1.80031}, {'Date': datetime.date(2024, 6, 5), 'Price': 1.82423}, {'Date': datetime.date(2024, 6, 6), 'Price': 1.80907}, {'Date': datetime.date(2024, 6, 7), 'Price': 1.83013}, {'Date': datetime.date(2024, 6, 8), 'Price': 1.67415}, {'Date': datetime.date(2024, 6, 9), 'Price': 1.65021}, {'Date': datetime.date(2024, 6, 10), 'Price': 1.63246}, {'Date': datetime.date(2024, 6, 11), 'Price': 1.5001}, {'Date': datetime.date(2024, 6, 12), 'Price': 1.58264}, {'Date': datetime.date(2024, 6, 13), 'Price': 1.51431}, {'Date': datetime.date(2024, 6, 14), 'Price': 1.50302}, {'Date': datetime.date(2024, 6, 15), 'Price': 1.46233}, {'Date': datetime.date(2024, 6, 16), 'Price': 1.46233}, {'Date': datetime.date(2024, 6, 17), 'Price': 1.37587}, {'Date': datetime.date(2024, 6, 18), 'Price': 1.20982}, {'Date': datetime.date(2024, 6, 19), 'Price': 1.19768}, {'Date': datetime.date(2024, 6, 20), 'Price': 1.1719}, {'Date': datetime.date(2024, 6, 21), 'Price': 1.16698}, {'Date': datetime.date(2024, 6, 22), 'Price': 1.16684}, {'Date': datetime.date(2024, 6, 23), 'Price': 1.16302}, {'Date': datetime.date(2024, 6, 24), 'Price': 1.10859}, {'Date': datetime.date(2024, 6, 25), 'Price': 1.16683}, {'Date': datetime.date(2024, 6, 26), 'Price': 1.58957}, {'Date': datetime.date(2024, 6, 27), 'Price': 1.42398}, {'Date': datetime.date(2024, 6, 28), 'Price': 1.31125}, {'Date': datetime.date(2024, 6, 29), 'Price': 1.24453}, {'Date': datetime.date(2024, 6, 30), 'Price': 1.4291}, {'Date': datetime.date(2024, 7, 1), 'Price': 1.31175}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.23019}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.32911}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.30303}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.30223}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.30491}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.28391}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.31953}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.38772}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.46617}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.34968}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.4232}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.45897}, {'Date': datetime.date(2024, 11, 29), 'Price': 1.57348}, {'Date': datetime.date(2024, 11, 30), 'Price': 1.53666}, {'Date': datetime.date(2024, 12, 1), 'Price': 1.571}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.52267}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.52267}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Gearbox_GEAR
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00785}]
success ya
UWAGA
db_GEARUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_GEARUSD': no such table: db_GEARUSD
trying
 inicjacja duplicates
duplicate info
[False]
Cobak_Token_CBK
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.87819}]
success ya
UWAGA
db_CBKUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_CBKUSD': no such table: db_CBKUSD
trying
 inicjacja duplicates
duplicate info
[False]
MANEKI_MANEKI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00875}]
success ya
UWAGA
db_MANEKIUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-05-03  0.01189       NaN  ...       NaN              0                0
1    2024-05-04  0.01085       NaN  ...       NaN              0                0
2    2024-05-05  0.00947       NaN  ...       NaN              0                0
3    2024-05-06  0.00865       NaN  ...       NaN              0                0
4    2024-05-07  0.00768       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
207  2024-11-26  0.00959  0.010278  ...  0.007817              1                1
208  2024-11-28  0.00989  0.010246  ...  0.007840              1                1
209  2024-11-29  0.01010  0.010233  ...  0.007866              1                1
210  2024-11-30  0.01000  0.010214  ...  0.007888              1                1
211  2024-12-01  0.00944  0.010149  ...  0.007909              1                1

[212 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00875}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00875}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-05-03  0.01189       NaN  ...       NaN            0.0              0.0
1    2024-05-04  0.01085       NaN  ...       NaN            0.0              0.0
2    2024-05-05  0.00947       NaN  ...       NaN            0.0              0.0
3    2024-05-06  0.00865       NaN  ...       NaN            0.0              0.0
4    2024-05-07  0.00768       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
208  2024-11-28  0.00989  0.010246  ...  0.007840            1.0              1.0
209  2024-11-29  0.01010  0.010233  ...  0.007866            1.0              1.0
210  2024-11-30  0.01000  0.010214  ...  0.007888            1.0              1.0
211  2024-12-01  0.00944  0.010149  ...  0.007909            1.0              1.0
212  2024-12-02  0.00875       NaN  ...       NaN            NaN              NaN

[213 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted MANEKI_MANEKI
NECESSARRRY AAAA START
1
1
2024-10-16
2024-11-18
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
540  MANEKI MANEKI  0.00875  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Zero1_Labs_DEAI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.83786}]
success ya
UWAGA
db_DEAIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_DEAIUSD': no such table: db_DEAIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Uquid_Coin_UQC
[{'Date': datetime.date(2024, 12, 2), 'Price': 7.60095}]
success ya
UWAGA
db_UQCUSD
COINDBBB
            Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0     2023-11-24  17.8857       NaN  ...       NaN              0                0
1     2023-11-25  14.2080       NaN  ...       NaN              0                0
2     2023-11-26  13.4000       NaN  ...       NaN              0                0
3     2023-11-27  11.3278       NaN  ...       NaN              0                0
4     2023-11-28  11.6217       NaN  ...       NaN              0                0
...          ...      ...       ...  ...       ...            ...              ...
5431  2024-11-27   8.7035  7.152068  ...  5.644545              1                1
5432  2024-11-28   8.1241  7.233071  ...  5.651143              1                1
5433  2024-11-29   7.4712  7.252915  ...  5.654634              1                1
5434  2024-11-30   7.6496  7.285972  ...  5.660000              1                1
5435  2024-12-01   7.6911  7.319733  ...  5.664720              1                1

[5436 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 7.60095}, {'Date': datetime.date(2024, 12, 2), 'Price': 7.60095}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0     2023-11-24  17.88570       NaN  ...       NaN            0.0              0.0
1     2023-11-25  14.20800       NaN  ...       NaN            0.0              0.0
2     2023-11-26  13.40000       NaN  ...       NaN            0.0              0.0
3     2023-11-27  11.32780       NaN  ...       NaN            0.0              0.0
4     2023-11-28  11.62170       NaN  ...       NaN            0.0              0.0
...          ...       ...       ...  ...       ...            ...              ...
5432  2024-11-28   8.12410  7.233071  ...  5.651143            1.0              1.0
5433  2024-11-29   7.47120  7.252915  ...  5.654634            1.0              1.0
5434  2024-11-30   7.64960  7.285972  ...  5.660000            1.0              1.0
5435  2024-12-01   7.69110  7.319733  ...  5.664720            1.0              1.0
5436  2024-12-02   7.60095       NaN  ...       NaN            NaN              NaN

[5437 rows x 7 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Uquid_Coin_UQC
NECESSARRRY AAAA START
1
1
2024-10-28
2024-11-09
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
               Name    Price  ...  middle_flip_date  long_flip_date
542  Uquid Coin UQC  7.60095  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Hippocrat_HPO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07341}]
success ya
UWAGA
db_HPOUSD
COINDBBB
                    Date     Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00  0.003106  ...              0                0
1    2023-01-02 00:00:00  0.003071  ...              0                0
2    2023-01-03 00:00:00  0.003209  ...              0                0
3    2023-01-04 00:00:00  0.003404  ...              0                0
4    2023-01-05 00:00:00  0.003390  ...              0                0
..                   ...       ...  ...            ...              ...
467           2024-04-13  0.091150  ...              1                1
468           2024-04-14  0.085830  ...              1                1
469           2024-04-15  0.086150  ...              1                1
470           2024-04-16  0.083340  ...              0                1
471           2024-04-17  0.079880  ...              0                1

[472 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.07795}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.07687}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.07687}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.07651}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.07481}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.07809}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.07778}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.0784}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.07841}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.07679}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.07872}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.07863}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.077}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.07588}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.07558}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.07683}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.07683}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.07598}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.07557}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.07466}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.07275}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.0714}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.07146}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.07088}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.06566}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.06629}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.06886}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.068}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.06892}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.06718}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.06521}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.06463}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.06145}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.06466}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.06227}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.06257}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.06107}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.06107}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.04812}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.04546}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.04539}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.04613}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.04375}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.04694}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.04524}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.05004}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.04812}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.04652}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.04616}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.04621}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.05883}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.06142}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.06199}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.06017}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.05966}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.05851}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.06088}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.06346}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.06712}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.0695}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.07219}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.07053}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.07179}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.08047}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.07732}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.07341}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.07341}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Zebec_Network_ZBCN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00111}]
success ya
UWAGA
db_ZBCNUSD
COINDBBB
           Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-05-02  0.002197       NaN  ...       NaN              0                0
1    2024-05-03  0.002314       NaN  ...       NaN              0                0
2    2024-05-04  0.002255       NaN  ...       NaN              0                0
3    2024-05-05  0.002266       NaN  ...       NaN              0                0
4    2024-05-06  0.002172       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
209  2024-11-27  0.001100  0.001008  ...  0.001223              0                0
210  2024-11-28  0.001070  0.001013  ...  0.001218              0                0
211  2024-11-29  0.001240  0.001032  ...  0.001214              1                0
212  2024-11-30  0.001210  0.001047  ...  0.001211              0                1
213  2024-12-01  0.001240  0.001063  ...  0.001207              1                1

[214 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00111}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00111}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-05-02  0.002197       NaN  ...       NaN            0.0              0.0
1    2024-05-03  0.002314       NaN  ...       NaN            0.0              0.0
2    2024-05-04  0.002255       NaN  ...       NaN            0.0              0.0
3    2024-05-05  0.002266       NaN  ...       NaN            0.0              0.0
4    2024-05-06  0.002172       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
210  2024-11-28  0.001070  0.001013  ...  0.001218            0.0              0.0
211  2024-11-29  0.001240  0.001032  ...  0.001214            1.0              0.0
212  2024-11-30  0.001210  0.001047  ...  0.001211            0.0              1.0
213  2024-12-01  0.001240  0.001063  ...  0.001207            1.0              1.0
214  2024-12-02  0.001110       NaN  ...       NaN            NaN              NaN

[215 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Zebec_Network_ZBCN
NECESSARRRY AAAA START
1
0
2024-11-30
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                   Name    Price  ...  middle_flip_date  long_flip_date
544  Zebec Network ZBCN  0.00111  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
DeFi_Pulse_Index_DPI
[{'Date': datetime.date(2024, 12, 2), 'Price': 132.17}]
success ya
UWAGA
db_DPIUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_DPIUSD': no such table: db_DPIUSD
trying
 inicjacja duplicates
duplicate info
[False]
Venom_VENOM
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07429}]
success ya
UWAGA
db_VENOMUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-03-28  0.68600       NaN  ...       NaN              0                0
1    2024-03-29  0.61920       NaN  ...       NaN              0                0
2    2024-03-30  0.56140       NaN  ...       NaN              0                0
3    2024-03-31  0.57360       NaN  ...       NaN              0                0
4    2024-04-01  0.54200       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
244  2024-11-27  0.06850  0.071185  ...  0.134072              0                0
245  2024-11-28  0.06870  0.070977  ...  0.133025              0                0
246  2024-11-29  0.07163  0.071032  ...  0.132059              0                0
247  2024-11-30  0.07240  0.071146  ...  0.131068              0                0
248  2024-12-01  0.07890  0.071792  ...  0.130067              0                0

[249 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07429}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.07429}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2024-03-28  0.68600       NaN  ...       NaN            0.0              0.0
1    2024-03-29  0.61920       NaN  ...       NaN            0.0              0.0
2    2024-03-30  0.56140       NaN  ...       NaN            0.0              0.0
3    2024-03-31  0.57360       NaN  ...       NaN            0.0              0.0
4    2024-04-01  0.54200       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
245  2024-11-28  0.06870  0.070977  ...  0.133025            0.0              0.0
246  2024-11-29  0.07163  0.071032  ...  0.132059            0.0              0.0
247  2024-11-30  0.07240  0.071146  ...  0.131068            0.0              0.0
248  2024-12-01  0.07890  0.071792  ...  0.130067            0.0              0.0
249  2024-12-02  0.07429       NaN  ...       NaN            NaN              NaN

[250 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Venom_VENOM
NECESSARRRY AAAA START
0
0
None
None
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
546  Venom VENOM  0.07429  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MovieBloc_MBL
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00407}]
success ya
UWAGA
db_MBLUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.002294       NaN  ...              0                0       NaN
1    2023-01-02  0.002314       NaN  ...              0                0       NaN
2    2023-01-03  0.002312       NaN  ...              0                0       NaN
3    2023-01-04  0.002341       NaN  ...              0                0       NaN
4    2023-01-05  0.002350       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.004190  0.003425  ...              0                0  0.003659
556  2024-11-28  0.004050  0.003478  ...              0                0  0.003673
557  2024-11-29  0.004290  0.003545  ...              0                0  0.003694
558  2024-11-30  0.004250  0.003604  ...              0                0  0.003714
559  2024-12-01  0.004240  0.003657  ...              0                0  0.003732

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00407}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00407}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.002294       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.002314       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.002312       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.002341       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.002350       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.004050  0.003478  ...            0.0              0.0  0.003673
557  2024-11-29  0.004290  0.003545  ...            0.0              0.0  0.003694
558  2024-11-30  0.004250  0.003604  ...            0.0              0.0  0.003714
559  2024-12-01  0.004240  0.003657  ...            0.0              0.0  0.003732
560  2024-12-02  0.004070       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted MovieBloc_MBL
NECESSARRRY AAAA START
0
0
2024-04-15
2024-04-25
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
547  MovieBloc MBL  0.00407  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Access_Protocol_ACS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00199}]
success ya
UWAGA
db_ACSUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.440281       NaN  ...              0                0       NaN
1      2023-01-02  0.447721       NaN  ...              0                0       NaN
2      2023-01-03  0.456188       NaN  ...              0                0       NaN
3      2023-01-04  0.506520       NaN  ...              0                0       NaN
4      2023-01-05  0.478676       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27560  2024-11-27  0.001804  0.001698  ...              1                1  0.001623
27561  2024-11-28  0.001905  0.001715  ...              1                1  0.001632
27562  2024-11-29  0.001845  0.001726  ...              1                1  0.001640
27563  2024-11-30  0.001855  0.001737  ...              1                1  0.001647
27564  2024-12-01  0.001879  0.001749  ...              1                1  0.001656

[27565 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00199}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00199}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  0.440281       NaN  ...            0.0              0.0       NaN
1      2023-01-02  0.447721       NaN  ...            0.0              0.0       NaN
2      2023-01-03  0.456188       NaN  ...            0.0              0.0       NaN
3      2023-01-04  0.506520       NaN  ...            0.0              0.0       NaN
4      2023-01-05  0.478676       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27561  2024-11-28  0.001905  0.001715  ...            1.0              1.0  0.001632
27562  2024-11-29  0.001845  0.001726  ...            1.0              1.0  0.001640
27563  2024-11-30  0.001855  0.001737  ...            1.0              1.0  0.001647
27564  2024-12-01  0.001879  0.001749  ...            1.0              1.0  0.001656
27565  2024-12-02  0.001990       NaN  ...            NaN              NaN       NaN

[27566 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Access_Protocol_ACS
NECESSARRRY AAAA START
1
1
2024-11-12
2024-11-26
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
548  Access Protocol ACS  0.00199  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Milady_Meme_Coin_LADYS
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_LADYSUSD
COINDBBB
             Date         Close  ...  Middle_Trend_Up         EMA56
0      2023-05-08  0.000000e+00  ...                0           NaN
1      2023-05-09  0.000000e+00  ...                0           NaN
2      2023-05-10  0.000000e+00  ...                0           NaN
3      2023-05-11  0.000000e+00  ...                0           NaN
4      2023-05-12  0.000000e+00  ...                0           NaN
...           ...           ...  ...              ...           ...
26654  2024-11-27  1.048000e-07  ...                1  9.537683e-08
26655  2024-11-28  1.035000e-07  ...                1  9.566185e-08
26656  2024-11-29  1.135000e-07  ...                1  9.628775e-08
26657  2024-11-30  1.090000e-07  ...                1  9.673379e-08
26658  2024-12-01  1.098000e-07  ...                1  9.719226e-08

[26659 rows x 8 columns]
/home/entukio/projects/scrapper_crypto_top/venv/lib/python3.11/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log10
  result = getattr(ufunc, method)(*inputs, **kwargs)
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date         Close  ...  Middle_Trend_Up         EMA56
0      2023-05-08  0.000000e+00  ...              0.0           NaN
1      2023-05-09  0.000000e+00  ...              0.0           NaN
2      2023-05-10  0.000000e+00  ...              0.0           NaN
3      2023-05-11  0.000000e+00  ...              0.0           NaN
4      2023-05-12  0.000000e+00  ...              0.0           NaN
...           ...           ...  ...              ...           ...
26655  2024-11-28  1.035000e-07  ...              1.0  9.566185e-08
26656  2024-11-29  1.135000e-07  ...              1.0  9.628775e-08
26657  2024-11-30  1.090000e-07  ...              1.0  9.673379e-08
26658  2024-12-01  1.098000e-07  ...              1.0  9.719226e-08
26659  2024-12-02  0.000000e+00  ...              NaN           NaN

[26660 rows x 8 columns]
2 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Milady_Meme_Coin_LADYS
NECESSARRRY AAAA START
1
0
2024-11-13
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                       Name  Price  ...  middle_flip_date  long_flip_date
549  Milady Meme Coin LADYS    0.0  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Verasity_VRA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00742}]
success ya
UWAGA
db_VRAUSD
COINDBBB
           Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.006217       NaN  ...       NaN              0                0
1    2023-04-07  0.006185       NaN  ...       NaN              0                0
2    2023-04-08  0.006195       NaN  ...       NaN              0                0
3    2023-04-09  0.006175       NaN  ...       NaN              0                0
4    2023-04-10  0.006584       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
407  2024-05-17  0.005370  0.005572  ...  0.007365              0                0
408  2024-05-20  0.005530  0.005568  ...  0.007361              0                0
409  2024-05-21  0.005590  0.005570  ...  0.007358              0                0
410  2024-05-22  0.005290  0.005547  ...  0.007354              0                0
411  2024-12-01  0.007753  0.005731  ...  0.007363              1                0

[412 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00742}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00742}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.006217       NaN  ...       NaN            0.0              0.0
1    2023-04-07  0.006185       NaN  ...       NaN            0.0              0.0
2    2023-04-08  0.006195       NaN  ...       NaN            0.0              0.0
3    2023-04-09  0.006175       NaN  ...       NaN            0.0              0.0
4    2023-04-10  0.006584       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
408  2024-05-20  0.005530  0.005568  ...  0.007361            0.0              0.0
409  2024-05-21  0.005590  0.005570  ...  0.007358            0.0              0.0
410  2024-05-22  0.005290  0.005547  ...  0.007354            0.0              0.0
411  2024-12-01  0.007753  0.005731  ...  0.007363            1.0              0.0
412  2024-12-02  0.007420       NaN  ...       NaN            NaN              NaN

[413 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Verasity_VRA
NECESSARRRY AAAA START
0
1
2024-04-06
2024-12-01
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
550  Verasity VRA  0.00742  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MESSIER_M87
[{'Date': datetime.date(2024, 12, 2), 'Price': 8e-05}]
success ya
UWAGA
db_M87USD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_M87USD': no such table: db_M87USD
trying
 inicjacja duplicates
duplicate info
[False]
Krypton_DAO_KRD
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.71085}]
success ya
UWAGA
db_KRDUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_KRDUSD': no such table: db_KRDUSD
trying
 inicjacja duplicates
duplicate info
[False]
Dione_Protocol_DIONE
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00717}]
success ya
UWAGA
db_DIONEUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_DIONEUSD': no such table: db_DIONEUSD
trying
 inicjacja duplicates
duplicate info
[False]
Bifrost_BFC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05223}]
success ya
UWAGA
db_BFCUSD
COINDBBB
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2020-12-14  0.044666       NaN  ...       NaN              0                0
1      2020-12-21  0.046281       NaN  ...       NaN              0                0
2      2020-12-28  0.020362       NaN  ...       NaN              0                0
3      2021-01-04  0.021843       NaN  ...       NaN              0                0
4      2021-01-11  0.025556       NaN  ...       NaN              0                0
...           ...       ...       ...  ...       ...            ...              ...
26879  2024-11-27  0.050350  0.044477  ...  0.042109              1                1
26880  2024-11-28  0.049600  0.044904  ...  0.042372              1                1
26881  2024-11-29  0.054760  0.045725  ...  0.042806              1                1
26882  2024-11-30  0.054100  0.046423  ...  0.043203              1                1
26883  2024-12-01  0.053430  0.047007  ...  0.043561              1                1

[26884 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.05223}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.05223}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0      2020-12-14  0.044666       NaN  ...       NaN            0.0              0.0
1      2020-12-21  0.046281       NaN  ...       NaN            0.0              0.0
2      2020-12-28  0.020362       NaN  ...       NaN            0.0              0.0
3      2021-01-04  0.021843       NaN  ...       NaN            0.0              0.0
4      2021-01-11  0.025556       NaN  ...       NaN            0.0              0.0
...           ...       ...       ...  ...       ...            ...              ...
26880  2024-11-28  0.049600  0.044904  ...  0.042372            1.0              1.0
26881  2024-11-29  0.054760  0.045725  ...  0.042806            1.0              1.0
26882  2024-11-30  0.054100  0.046423  ...  0.043203            1.0              1.0
26883  2024-12-01  0.053430  0.047007  ...  0.043561            1.0              1.0
26884  2024-12-02  0.052230       NaN  ...       NaN            NaN              NaN

[26885 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Bifrost_BFC
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
554  Bifrost BFC  0.05223  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Shadow_Token_SHDW
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.44745}]
success ya
UWAGA
db_SHDWUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_SHDWUSD': no such table: db_SHDWUSD
trying
 inicjacja duplicates
duplicate info
[False]
OORT_OORT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.25373}]
success ya
UWAGA
db_OORTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_OORTUSD': no such table: db_OORTUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
WHY_WHY
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0}]
success ya
UWAGA
db_WHYUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_WHYUSD': no such table: db_WHYUSD
trying
 inicjacja duplicates
duplicate info
[False]
Neiro_Ethereum_NEIRO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07165}]
success ya
UWAGA
db_NEIROUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_NEIROUSD': no such table: db_NEIROUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Alien_Worlds_TLM
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01452}]
success ya
UWAGA
db_TLMUSD
COINDBBB
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  0.012075       NaN  ...       NaN              0                0
1    2023-01-02  0.012283       NaN  ...       NaN              0                0
2    2023-01-03  0.012333       NaN  ...       NaN              0                0
3    2023-01-04  0.012593       NaN  ...       NaN              0                0
4    2023-01-05  0.012372       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
515  2024-11-27  0.013770  0.013281  ...  0.015053              0                0
516  2024-11-28  0.014100  0.013349  ...  0.015019              0                0
517  2024-11-29  0.014140  0.013415  ...  0.014988              0                0
518  2024-11-30  0.014360  0.013494  ...  0.014966              0                0
519  2024-12-01  0.015370  0.013650  ...  0.014980              0                0

[520 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.01452}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.01452}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...     EMA56  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01  0.012075       NaN  ...       NaN            0.0              0.0
1    2023-01-02  0.012283       NaN  ...       NaN            0.0              0.0
2    2023-01-03  0.012333       NaN  ...       NaN            0.0              0.0
3    2023-01-04  0.012593       NaN  ...       NaN            0.0              0.0
4    2023-01-05  0.012372       NaN  ...       NaN            0.0              0.0
..          ...       ...       ...  ...       ...            ...              ...
516  2024-11-28  0.014100  0.013349  ...  0.015019            0.0              0.0
517  2024-11-29  0.014140  0.013415  ...  0.014988            0.0              0.0
518  2024-11-30  0.014360  0.013494  ...  0.014966            0.0              0.0
519  2024-12-01  0.015370  0.013650  ...  0.014980            0.0              0.0
520  2024-12-02  0.014520       NaN  ...       NaN            NaN              NaN

[521 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Alien_Worlds_TLM
NECESSARRRY AAAA START
0
0
2024-05-17
2024-06-11
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                 Name    Price  ...  middle_flip_date  long_flip_date
559  Alien Worlds TLM  0.01452  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Decentralized_Social_DESO
[{'Date': datetime.date(2024, 12, 2), 'Price': 7.99628}]
success ya
UWAGA
db_DESOUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-01-01 00:00:00    6.800228  ...              0                0
1    2023-01-02 00:00:00    6.930436  ...              0                0
2    2023-01-03 00:00:00    6.573900  ...              0                0
3    2023-01-04 00:00:00    6.553160  ...              0                0
4    2023-01-05 00:00:00    6.514139  ...              0                0
..                   ...         ...  ...            ...              ...
468           2024-04-13  277.589000  ...              1                1
469           2024-04-14  277.172000  ...              1                1
470           2024-04-15  276.319000  ...              1                1
471           2024-04-16  249.288000  ...              1                1
472           2024-04-17   23.679700  ...              0                1

[473 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 21.3002}, {'Date': datetime.date(2024, 5, 10), 'Price': 20.4373}, {'Date': datetime.date(2024, 5, 11), 'Price': 20.2103}, {'Date': datetime.date(2024, 5, 12), 'Price': 20.2103}, {'Date': datetime.date(2024, 5, 13), 'Price': 20.0536}, {'Date': datetime.date(2024, 5, 14), 'Price': 19.7105}, {'Date': datetime.date(2024, 5, 15), 'Price': 19.9726}, {'Date': datetime.date(2024, 5, 16), 'Price': 19.8926}, {'Date': datetime.date(2024, 5, 17), 'Price': 19.8686}, {'Date': datetime.date(2024, 5, 18), 'Price': 19.849}, {'Date': datetime.date(2024, 5, 19), 'Price': 19.2878}, {'Date': datetime.date(2024, 5, 20), 'Price': 19.4307}, {'Date': datetime.date(2024, 5, 21), 'Price': 19.9608}, {'Date': datetime.date(2024, 5, 22), 'Price': 21.7006}, {'Date': datetime.date(2024, 5, 23), 'Price': 19.8077}, {'Date': datetime.date(2024, 5, 24), 'Price': 20.0839}, {'Date': datetime.date(2024, 5, 25), 'Price': 19.8798}, {'Date': datetime.date(2024, 5, 26), 'Price': 19.8798}, {'Date': datetime.date(2024, 5, 27), 'Price': 19.7683}, {'Date': datetime.date(2024, 5, 28), 'Price': 20.0318}, {'Date': datetime.date(2024, 5, 29), 'Price': 21.7269}, {'Date': datetime.date(2024, 5, 30), 'Price': 19.9986}, {'Date': datetime.date(2024, 5, 31), 'Price': 19.7012}, {'Date': datetime.date(2024, 6, 1), 'Price': 21.0183}, {'Date': datetime.date(2024, 6, 2), 'Price': 21.4793}, {'Date': datetime.date(2024, 6, 3), 'Price': 22.6983}, {'Date': datetime.date(2024, 6, 4), 'Price': 20.4251}, {'Date': datetime.date(2024, 6, 5), 'Price': 21.4606}, {'Date': datetime.date(2024, 6, 6), 'Price': 20.8254}, {'Date': datetime.date(2024, 6, 7), 'Price': 19.798}, {'Date': datetime.date(2024, 6, 8), 'Price': 19.2705}, {'Date': datetime.date(2024, 6, 9), 'Price': 19.1087}, {'Date': datetime.date(2024, 6, 10), 'Price': 19.156}, {'Date': datetime.date(2024, 6, 11), 'Price': 18.3257}, {'Date': datetime.date(2024, 6, 12), 'Price': 18.742}, {'Date': datetime.date(2024, 6, 13), 'Price': 19.2364}, {'Date': datetime.date(2024, 6, 14), 'Price': 17.6656}, {'Date': datetime.date(2024, 6, 15), 'Price': 17.9205}, {'Date': datetime.date(2024, 6, 16), 'Price': 17.9205}, {'Date': datetime.date(2024, 6, 17), 'Price': 17.485}, {'Date': datetime.date(2024, 6, 18), 'Price': 17.4818}, {'Date': datetime.date(2024, 6, 19), 'Price': 18.7951}, {'Date': datetime.date(2024, 6, 20), 'Price': 17.7668}, {'Date': datetime.date(2024, 6, 21), 'Price': 18.2638}, {'Date': datetime.date(2024, 6, 22), 'Price': 18.4222}, {'Date': datetime.date(2024, 6, 23), 'Price': 18.5997}, {'Date': datetime.date(2024, 6, 24), 'Price': 17.6751}, {'Date': datetime.date(2024, 6, 25), 'Price': 17.9284}, {'Date': datetime.date(2024, 6, 26), 'Price': 17.6067}, {'Date': datetime.date(2024, 6, 27), 'Price': 18.6563}, {'Date': datetime.date(2024, 6, 28), 'Price': 18.8083}, {'Date': datetime.date(2024, 6, 29), 'Price': 19.0595}, {'Date': datetime.date(2024, 6, 30), 'Price': 19.6202}, {'Date': datetime.date(2024, 7, 1), 'Price': 18.6244}, {'Date': datetime.date(2024, 11, 20), 'Price': 6.07252}, {'Date': datetime.date(2024, 11, 21), 'Price': 6.52574}, {'Date': datetime.date(2024, 11, 22), 'Price': 6.75673}, {'Date': datetime.date(2024, 11, 23), 'Price': 6.80839}, {'Date': datetime.date(2024, 11, 24), 'Price': 6.85409}, {'Date': datetime.date(2024, 11, 26), 'Price': 6.70314}, {'Date': datetime.date(2024, 11, 28), 'Price': 6.92444}, {'Date': datetime.date(2024, 12, 2), 'Price': 7.99628}, {'Date': datetime.date(2024, 12, 2), 'Price': 7.99628}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
WazirX_WRX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1857}]
success ya
UWAGA
db_WRXUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.136006       NaN  ...              0                0       NaN
1    2023-01-02  0.138691       NaN  ...              0                0       NaN
2    2023-01-03  0.141491       NaN  ...              0                0       NaN
3    2023-01-04  0.144032       NaN  ...              0                0       NaN
4    2023-01-05  0.142264       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
547  2024-11-27  0.168000  0.165254  ...              0                0  0.186530
548  2024-11-28  0.163780  0.165131  ...              0                0  0.185732
549  2024-11-29  0.173600  0.165837  ...              0                0  0.185306
550  2024-11-30  0.171640  0.166320  ...              0                0  0.184827
551  2024-12-01  0.182940  0.167705  ...              0                0  0.184760

[552 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.1857}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.1857}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.136006       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.138691       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.141491       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.144032       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.142264       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
548  2024-11-28  0.163780  0.165131  ...            0.0              0.0  0.185732
549  2024-11-29  0.173600  0.165837  ...            0.0              0.0  0.185306
550  2024-11-30  0.171640  0.166320  ...            0.0              0.0  0.184827
551  2024-12-01  0.182940  0.167705  ...            0.0              0.0  0.184760
552  2024-12-02  0.185700       NaN  ...            NaN              NaN       NaN

[553 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted WazirX_WRX
NECESSARRRY AAAA START
0
0
2024-04-15
2024-05-28
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name   Price  ...  middle_flip_date  long_flip_date
561  WazirX WRX  0.1857  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Rifampicin_$RIF
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07085}]
success ya
UWAGA
db_$RIFUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_$RIFUSD': no such table: db_$RIFUSD
trying
 inicjacja duplicates
duplicate info
[False]
ALEX_Lab_ALEX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11508}]
success ya
UWAGA
db_ALEXUSD
COINDBBB
            Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0     2023-01-01  0.011622       NaN  ...              0                0       NaN
1     2023-01-02  0.011435       NaN  ...              0                0       NaN
2     2023-01-03  0.011360       NaN  ...              0                0       NaN
3     2023-01-04  0.011684       NaN  ...              0                0       NaN
4     2023-01-05  0.011929       NaN  ...              0                0       NaN
...          ...       ...       ...  ...            ...              ...       ...
9831  2024-11-24  0.091700  0.088826  ...              0                0  0.091834
9832  2024-11-25  0.093700  0.089232  ...              0                0  0.091900
9833  2024-11-26  0.091900  0.089454  ...              0                0  0.091900
9834  2024-11-27  0.103100  0.090591  ...              0                0  0.092293
9835  2024-11-28  0.101700  0.091517  ...              0                0  0.092623

[9836 rows x 8 columns]
last_db_date_data
2024-11-28
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.11508}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.11508}]
there are no available prices for all missing dates
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted ALEX_Lab_ALEX
NECESSARRRY AAAA START
1
1
2024-12-02
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
563  ALEX Lab ALEX  0.11508  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Automata_Network_ATA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.12391}]
success ya
UWAGA
db_ATAUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-01  0.16330       NaN  ...       NaN              0                0
1    2023-04-02  0.15836       NaN  ...       NaN              0                0
2    2023-04-03  0.15980       NaN  ...       NaN              0                0
3    2023-04-04  0.16230       NaN  ...       NaN              0                0
4    2023-04-05  0.16201       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
461  2024-11-27  0.11396  0.114723  ...  0.141507              0                0
462  2024-11-28  0.11609  0.114837  ...  0.141550              0                0
463  2024-11-29  0.11987  0.115256  ...  0.141599              0                0
464  2024-11-30  0.11854  0.115530  ...  0.141667              0                0
465  2024-12-01  0.12611  0.116412  ...  0.141761              0                0

[466 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.12391}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.12391}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-01  0.16330       NaN  ...       NaN            0.0              0.0
1    2023-04-02  0.15836       NaN  ...       NaN            0.0              0.0
2    2023-04-03  0.15980       NaN  ...       NaN            0.0              0.0
3    2023-04-04  0.16230       NaN  ...       NaN            0.0              0.0
4    2023-04-05  0.16201       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
462  2024-11-28  0.11609  0.114837  ...  0.141550            0.0              0.0
463  2024-11-29  0.11987  0.115256  ...  0.141599            0.0              0.0
464  2024-11-30  0.11854  0.115530  ...  0.141667            0.0              0.0
465  2024-12-01  0.12611  0.116412  ...  0.141761            0.0              0.0
466  2024-12-02  0.12391       NaN  ...       NaN            NaN              NaN

[467 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Automata_Network_ATA
NECESSARRRY AAAA START
0
0
2024-06-09
2024-06-13
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                     Name    Price  ...  middle_flip_date  long_flip_date
564  Automata Network ATA  0.12391  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Metacraft_MCT
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.32133}]
success ya
UWAGA
db_MCTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_MCTUSD': no such table: db_MCTUSD
trying
 inicjacja duplicates
duplicate info
[False]
Luna_by_Virtuals_LUNA
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0694}]
success ya
UWAGA
db_LUNAUSD
COINDBBB
            Date   Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0     2023-10-14  0.4018       NaN  ...       NaN              0                0
1     2023-10-15  0.4101       NaN  ...       NaN              0                0
2     2023-10-16  0.4300       NaN  ...       NaN              0                0
3     2023-10-17  0.4102       NaN  ...       NaN              0                0
4     2023-10-18  0.4048       NaN  ...       NaN              0                0
...          ...     ...       ...  ...       ...            ...              ...
2410  2024-11-27  0.4965  0.429681  ...  0.418784              1                1
2411  2024-11-28  0.4957  0.435182  ...  0.418288              1                1
2412  2024-11-29  0.5215  0.442375  ...  0.418009              1                1
2413  2024-11-30  0.5945  0.455053  ...  0.418209              1                1
2414  2024-12-01  0.5758  0.465115  ...  0.418148              1                1

[2415 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.0694}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.0694}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
            Date   Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0     2023-10-14  0.4018       NaN  ...       NaN            0.0              0.0
1     2023-10-15  0.4101       NaN  ...       NaN            0.0              0.0
2     2023-10-16  0.4300       NaN  ...       NaN            0.0              0.0
3     2023-10-17  0.4102       NaN  ...       NaN            0.0              0.0
4     2023-10-18  0.4048       NaN  ...       NaN            0.0              0.0
...          ...     ...       ...  ...       ...            ...              ...
2411  2024-11-28  0.4957  0.435182  ...  0.418288            1.0              1.0
2412  2024-11-29  0.5215  0.442375  ...  0.418009            1.0              1.0
2413  2024-11-30  0.5945  0.455053  ...  0.418209            1.0              1.0
2414  2024-12-01  0.5758  0.465115  ...  0.418148            1.0              1.0
2415  2024-12-02  0.0694       NaN  ...       NaN            NaN              NaN

[2416 rows x 7 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Luna_by_Virtuals_LUNA
NECESSARRRY AAAA START
1
1
2024-11-16
2024-11-21
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                      Name   Price  ...  middle_flip_date  long_flip_date
566  Luna by Virtuals LUNA  0.0694  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Staika_STIK
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.5245}]
success ya
UWAGA
db_STIKUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_STIKUSD': no such table: db_STIKUSD
trying
 inicjacja duplicates
duplicate info
[False]
TokenFi_TOKEN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.06901}]
success ya
UWAGA
db_TOKENUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-10-28  0.010966       NaN  ...              0                0       NaN
1    2023-10-29  0.014270       NaN  ...              0                0       NaN
2    2023-10-30  0.020451       NaN  ...              0                0       NaN
3    2023-10-31  0.022026       NaN  ...              0                0       NaN
4    2023-11-01  0.039294       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
434  2024-11-21  0.054240  0.080778  ...              0                0  0.097253
435  2024-11-24  0.058900  0.078955  ...              0                0  0.095907
436  2024-11-25  0.059060  0.077297  ...              0                0  0.094614
437  2024-11-29  0.063200  0.076122  ...              0                0  0.093512
438  2024-12-01  0.073080  0.075869  ...              0                0  0.092795

[439 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.06901}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.06901}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-10-28  0.010966       NaN  ...            0.0              0.0       NaN
1    2023-10-29  0.014270       NaN  ...            0.0              0.0       NaN
2    2023-10-30  0.020451       NaN  ...            0.0              0.0       NaN
3    2023-10-31  0.022026       NaN  ...            0.0              0.0       NaN
4    2023-11-01  0.039294       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
435  2024-11-24  0.058900  0.078955  ...            0.0              0.0  0.095907
436  2024-11-25  0.059060  0.077297  ...            0.0              0.0  0.094614
437  2024-11-29  0.063200  0.076122  ...            0.0              0.0  0.093512
438  2024-12-01  0.073080  0.075869  ...            0.0              0.0  0.092795
439  2024-12-02  0.069010       NaN  ...            NaN              NaN       NaN

[440 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted TokenFi_TOKEN
NECESSARRRY AAAA START
0
0
2024-06-18
2024-11-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
              Name    Price  ...  middle_flip_date  long_flip_date
568  TokenFi TOKEN  0.06901  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
OMG_Network_OMG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.49037}]
success ya
UWAGA
db_OMGUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.043279       NaN  ...              0                0       NaN
1      2023-01-02  1.049363       NaN  ...              0                0       NaN
2      2023-01-03  1.060291       NaN  ...              0                0       NaN
3      2023-01-04  1.080348       NaN  ...              0                0       NaN
4      2023-01-05  1.057436       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
23149  2024-11-27  0.449500  0.320120  ...              1                1  0.289736
23150  2024-11-28  0.477000  0.333194  ...              1                1  0.296307
23151  2024-11-29  0.476200  0.345111  ...              1                1  0.302619
23152  2024-11-30  0.486900  0.356927  ...              1                1  0.309085
23153  2024-12-01  0.489300  0.367958  ...              1                1  0.315408

[23154 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.49037}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.49037}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.043279       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.049363       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.060291       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.080348       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.057436       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
23150  2024-11-28  0.477000  0.333194  ...            1.0              1.0  0.296307
23151  2024-11-29  0.476200  0.345111  ...            1.0              1.0  0.302619
23152  2024-11-30  0.486900  0.356927  ...            1.0              1.0  0.309085
23153  2024-12-01  0.489300  0.367958  ...            1.0              1.0  0.315408
23154  2024-12-02  0.490370       NaN  ...            NaN              NaN       NaN

[23155 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted OMG_Network_OMG
NECESSARRRY AAAA START
1
1
2024-11-16
2024-11-23
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                Name    Price  ...  middle_flip_date  long_flip_date
569  OMG Network OMG  0.49037  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Across_Protocol_ACX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.49591}]
success ya
UWAGA
db_ACXUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_ACXUSD': no such table: db_ACXUSD
trying
 inicjacja duplicates
duplicate info
[False]
Bluzelle_BLZ
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15112}]
success ya
UWAGA
db_BLZUSD
COINDBBB
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.049532       NaN  ...              0                0       NaN
1    2023-01-02  0.051233       NaN  ...              0                0       NaN
2    2023-01-03  0.051345       NaN  ...              0                0       NaN
3    2023-01-04  0.053307       NaN  ...              0                0       NaN
4    2023-01-05  0.052916       NaN  ...              0                0       NaN
..          ...       ...       ...  ...            ...              ...       ...
555  2024-11-27  0.144390  0.181258  ...              0                0  0.234290
556  2024-11-28  0.146060  0.178325  ...              0                0  0.231194
557  2024-11-29  0.143040  0.175385  ...              0                0  0.228101
558  2024-11-30  0.144720  0.172829  ...              0                0  0.225175
559  2024-12-01  0.156500  0.171468  ...              0                0  0.222766

[560 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15112}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.15112}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-01-01  0.049532       NaN  ...            0.0              0.0       NaN
1    2023-01-02  0.051233       NaN  ...            0.0              0.0       NaN
2    2023-01-03  0.051345       NaN  ...            0.0              0.0       NaN
3    2023-01-04  0.053307       NaN  ...            0.0              0.0       NaN
4    2023-01-05  0.052916       NaN  ...            0.0              0.0       NaN
..          ...       ...       ...  ...            ...              ...       ...
556  2024-11-28  0.146060  0.178325  ...            0.0              0.0  0.231194
557  2024-11-29  0.143040  0.175385  ...            0.0              0.0  0.228101
558  2024-11-30  0.144720  0.172829  ...            0.0              0.0  0.225175
559  2024-12-01  0.156500  0.171468  ...            0.0              0.0  0.222766
560  2024-12-02  0.151120       NaN  ...            NaN              NaN       NaN

[561 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Bluzelle_BLZ
NECESSARRRY AAAA START
0
0
2024-04-30
2024-05-18
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
571  Bluzelle BLZ  0.15112  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
REI_Network_REI
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.07168}]
success ya
UWAGA
db_REIUSD
COINDBBB
                   Date     Close     EMA23     EMA82 SMA200
0   2022-05-02 00:00:00  0.075916       NaN       NaN   None
1   2022-05-09 00:00:00  0.041803       NaN       NaN   None
2   2022-05-16 00:00:00  0.050765       NaN       NaN   None
3   2022-05-23 00:00:00  0.045804       NaN       NaN   None
4   2022-05-30 00:00:00  0.042906       NaN       NaN   None
..                  ...       ...       ...       ...    ...
94  2024-02-19 00:00:00  0.032573  0.029168  0.033211   None
95  2024-02-26 00:00:00  0.041313  0.030180  0.033406   None
96  2024-03-04 00:00:00  0.056558  0.032378  0.033964   None
97  2024-03-11 00:00:00  0.131415  0.040631  0.036312   None
98  2024-03-18 00:00:00  0.095823  0.045231  0.037746   None

[99 rows x 5 columns]
last_db_date_data
2024-03-18
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.08061}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.07992}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.07992}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.07677}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.07324}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.07733}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.07321}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.07538}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.07503}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.07328}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.07773}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.07579}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.07482}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.07156}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.07244}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.07196}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.07196}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.07293}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.09415}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.0807}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.07645}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.0756}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.07736}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.07506}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.07345}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.07449}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.07513}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.07482}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.07497}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.06867}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.06798}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.06711}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.05915}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.06415}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.06029}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.05787}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.05668}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.05668}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.05538}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.0495}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.05176}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.05189}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.05205}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.05222}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.05368}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.04794}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.05122}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.05135}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.05266}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.05626}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.06616}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.05965}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.05697}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.05585}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.06381}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.06032}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.05829}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.05938}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.05833}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.06105}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.0677}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.06682}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.06106}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.06893}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.0688}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.07059}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.07048}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.07335}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.07168}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.07168}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Aavegotchi_GHST
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.28305}]
success ya
UWAGA
db_GHSTUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_GHSTUSD': no such table: db_GHSTUSD
trying
 inicjacja duplicates
duplicate info
[False]
Tokocrypto_TKO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.40068}]
success ya
UWAGA
db_TKOUSD
COINDBBB
                    Date     Close     EMA23     EMA82    SMA200
0    2023-01-01 00:00:00  0.228479       NaN       NaN       NaN
1    2023-01-02 00:00:00  0.242214       NaN       NaN       NaN
2    2023-01-03 00:00:00  0.229613       NaN       NaN       NaN
3    2023-01-04 00:00:00  0.233585       NaN       NaN       NaN
4    2023-01-05 00:00:00  0.228425       NaN       NaN       NaN
..                   ...       ...       ...       ...       ...
446  2024-03-22 00:00:00  0.645481  0.572114  0.441403  0.307435
447  2024-03-23 00:00:00  0.672441  0.580475  0.446970  0.309669
448  2024-03-24 00:00:00  0.694228  0.589954  0.452928  0.311998
449  2024-03-25 00:00:00  0.701146  0.599220  0.458909  0.314340
450  2024-03-26 00:00:00  0.692444  0.606989  0.464537  0.316649

[451 rows x 5 columns]
last_db_date_data
2024-03-26
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.4024}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.40516}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.40516}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.39586}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.38863}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.42524}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.42081}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.43618}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.43088}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.42065}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.45656}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.44825}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.43959}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.42038}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.41239}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.41961}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.41961}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.44472}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.44144}, {'Date': datetime.date(2024, 5, 29), 'Price': 0.44041}, {'Date': datetime.date(2024, 5, 30), 'Price': 0.44834}, {'Date': datetime.date(2024, 5, 31), 'Price': 0.44203}, {'Date': datetime.date(2024, 6, 1), 'Price': 0.439}, {'Date': datetime.date(2024, 6, 2), 'Price': 0.44198}, {'Date': datetime.date(2024, 6, 3), 'Price': 0.4312}, {'Date': datetime.date(2024, 6, 4), 'Price': 0.44498}, {'Date': datetime.date(2024, 6, 5), 'Price': 0.46667}, {'Date': datetime.date(2024, 6, 6), 'Price': 0.46478}, {'Date': datetime.date(2024, 6, 7), 'Price': 0.4595}, {'Date': datetime.date(2024, 6, 8), 'Price': 0.41913}, {'Date': datetime.date(2024, 6, 9), 'Price': 0.42767}, {'Date': datetime.date(2024, 6, 10), 'Price': 0.42721}, {'Date': datetime.date(2024, 6, 11), 'Price': 0.39221}, {'Date': datetime.date(2024, 6, 12), 'Price': 0.42251}, {'Date': datetime.date(2024, 6, 13), 'Price': 0.40928}, {'Date': datetime.date(2024, 6, 14), 'Price': 0.40676}, {'Date': datetime.date(2024, 6, 15), 'Price': 0.39873}, {'Date': datetime.date(2024, 6, 16), 'Price': 0.39873}, {'Date': datetime.date(2024, 6, 17), 'Price': 0.37876}, {'Date': datetime.date(2024, 6, 18), 'Price': 0.34924}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.35254}, {'Date': datetime.date(2024, 6, 20), 'Price': 0.35037}, {'Date': datetime.date(2024, 6, 21), 'Price': 0.34738}, {'Date': datetime.date(2024, 6, 22), 'Price': 0.35506}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.35938}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.34294}, {'Date': datetime.date(2024, 6, 25), 'Price': 0.35677}, {'Date': datetime.date(2024, 6, 26), 'Price': 0.34244}, {'Date': datetime.date(2024, 6, 27), 'Price': 0.35726}, {'Date': datetime.date(2024, 6, 28), 'Price': 0.35846}, {'Date': datetime.date(2024, 6, 29), 'Price': 0.35009}, {'Date': datetime.date(2024, 6, 30), 'Price': 0.35956}, {'Date': datetime.date(2024, 7, 1), 'Price': 0.36111}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.30975}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.32057}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.31989}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.312}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.31325}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.32196}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.36104}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.36927}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.36653}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.38675}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.36935}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.3848}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.38972}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.38708}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.40068}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.40068}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
The_Root_Network_ROOT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04671}]
success ya
UWAGA
db_ROOTUSD
COINDBBB
           Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-11-21  0.029824       NaN  ...       NaN              0                0
1    2023-11-22  0.031006       NaN  ...       NaN              0                0
2    2023-11-23  0.030596       NaN  ...       NaN              0                0
3    2023-11-24  0.029508       NaN  ...       NaN              0                0
4    2023-11-25  0.030617       NaN  ...       NaN              0                0
..          ...       ...       ...  ...       ...            ...              ...
219  2024-06-27  0.036400  0.038958  ...  0.065283              0                0
220  2024-06-28  0.037200  0.038811  ...  0.065236              0                0
221  2024-06-29  0.039610  0.038878  ...  0.065230              0                0
222  2024-06-30  0.040090  0.038979  ...  0.065203              0                0
223  2024-11-22  0.034000  0.038564  ...  0.065158              0                0

[224 rows x 7 columns]
last_db_date_data
2024-11-22
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.04671}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.04671}]
there are no available prices for all missing dates
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted The_Root_Network_ROOT
NECESSARRRY AAAA START
0
0
2024-04-11
None
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                      Name    Price  ...  middle_flip_date  long_flip_date
575  The Root Network ROOT  0.04671  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Ethernity_Chain_ERN
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.85423}]
success ya
UWAGA
db_ERNUSD
COINDBBB
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.698551       NaN  ...              0                0       NaN
1      2023-01-02  1.716582       NaN  ...              0                0       NaN
2      2023-01-03  1.713378       NaN  ...              0                0       NaN
3      2023-01-04  1.750481       NaN  ...              0                0       NaN
4      2023-01-05  1.757688       NaN  ...              0                0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27560  2024-11-27  2.838100  2.375884  ...              1                1  2.255042
27561  2024-11-28  2.903700  2.419869  ...              1                1  2.277802
27562  2024-11-29  2.926200  2.462063  ...              1                1  2.300552
27563  2024-11-30  2.985600  2.505691  ...              1                1  2.324589
27564  2024-12-01  2.904000  2.538883  ...              1                1  2.344919

[27565 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 2.85423}, {'Date': datetime.date(2024, 12, 2), 'Price': 2.85423}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
             Date     Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0      2023-01-01  1.698551       NaN  ...            0.0              0.0       NaN
1      2023-01-02  1.716582       NaN  ...            0.0              0.0       NaN
2      2023-01-03  1.713378       NaN  ...            0.0              0.0       NaN
3      2023-01-04  1.750481       NaN  ...            0.0              0.0       NaN
4      2023-01-05  1.757688       NaN  ...            0.0              0.0       NaN
...           ...       ...       ...  ...            ...              ...       ...
27561  2024-11-28  2.903700  2.419869  ...            1.0              1.0  2.277802
27562  2024-11-29  2.926200  2.462063  ...            1.0              1.0  2.300552
27563  2024-11-30  2.985600  2.505691  ...            1.0              1.0  2.324589
27564  2024-12-01  2.904000  2.538883  ...            1.0              1.0  2.344919
27565  2024-12-02  2.854230       NaN  ...            NaN              NaN       NaN

[27566 rows x 8 columns]
1 failed
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Ethernity_Chain_ERN
NECESSARRRY AAAA START
1
1
2024-11-11
2024-11-24
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                    Name    Price  ...  middle_flip_date  long_flip_date
576  Ethernity Chain ERN  2.85423  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
CoinEx_Token_CET
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.09459}]
success ya
UWAGA
db_CETUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_CETUSD': no such table: db_CETUSD
trying
 inicjacja duplicates
duplicate info
[False]
Crown_by_Third_Time_Games_CROWN
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.35086}]
success ya
UWAGA
db_CROWNUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-05-24 00:00:00    0.049627  ...              0                0
1    2023-05-25 00:00:00    0.045109  ...              0                0
2    2023-05-26 00:00:00    0.043233  ...              0                0
3    2023-05-27 00:00:00    0.049372  ...              0                0
4    2023-05-28 00:00:00    0.045075  ...              0                0
..                   ...         ...  ...            ...              ...
325           2024-04-13  112.547000  ...              1                1
326           2024-04-14  108.696000  ...              1                1
327           2024-04-15    0.977340  ...              0                1
328           2024-04-16   10.166000  ...              0                1
329           2024-04-17    0.939680  ...              0                1

[330 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 10), 'Price': 0.672}, {'Date': datetime.date(2024, 5, 11), 'Price': 0.65974}, {'Date': datetime.date(2024, 5, 12), 'Price': 0.65974}, {'Date': datetime.date(2024, 5, 13), 'Price': 0.62222}, {'Date': datetime.date(2024, 5, 14), 'Price': 0.5737}, {'Date': datetime.date(2024, 5, 15), 'Price': 0.60692}, {'Date': datetime.date(2024, 5, 16), 'Price': 0.661}, {'Date': datetime.date(2024, 5, 17), 'Price': 0.71864}, {'Date': datetime.date(2024, 5, 18), 'Price': 0.68447}, {'Date': datetime.date(2024, 5, 19), 'Price': 0.64389}, {'Date': datetime.date(2024, 5, 20), 'Price': 0.70846}, {'Date': datetime.date(2024, 5, 21), 'Price': 0.76007}, {'Date': datetime.date(2024, 5, 22), 'Price': 0.76153}, {'Date': datetime.date(2024, 5, 23), 'Price': 0.72041}, {'Date': datetime.date(2024, 5, 24), 'Price': 0.63006}, {'Date': datetime.date(2024, 5, 25), 'Price': 0.6881}, {'Date': datetime.date(2024, 5, 26), 'Price': 0.6881}, {'Date': datetime.date(2024, 5, 27), 'Price': 0.61785}, {'Date': datetime.date(2024, 5, 28), 'Price': 0.62711}, {'Date': datetime.date(2024, 6, 19), 'Price': 0.51296}, {'Date': datetime.date(2024, 6, 23), 'Price': 0.3896}, {'Date': datetime.date(2024, 6, 24), 'Price': 0.50058}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.32458}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.31908}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.33319}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.27849}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.37191}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.36641}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.35889}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.3753}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.35804}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.39171}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.39843}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.42384}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.42184}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.4068}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.40854}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.35086}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.35086}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Dego_Finance_DEGO
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.16254}]
success ya
UWAGA
db_DEGOUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  2.02860       NaN  ...       NaN              0                0
1    2023-04-07  1.98270       NaN  ...       NaN              0                0
2    2023-04-08  2.29030       NaN  ...       NaN              0                0
3    2023-04-09  2.18250       NaN  ...       NaN              0                0
4    2023-04-10  2.16980       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
398  2024-05-08  2.20110  2.325621  ...  2.344029              0                0
399  2024-05-09  2.21720  2.316586  ...  2.348381              0                0
400  2024-05-10  2.12930  2.300979  ...  2.352169              0                0
401  2024-05-11  2.13904  2.287484  ...  2.355712              0                0
402  2024-05-12  2.13904  2.275114  ...  2.359180              0                0

[403 rows x 7 columns]
last_db_date_data
2024-05-12
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 3.16254}, {'Date': datetime.date(2024, 12, 2), 'Price': 3.16254}]
there are no available prices for all missing dates
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Dego_Finance_DEGO
NECESSARRRY AAAA START
0
1
2024-04-15
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
                  Name    Price  ...  middle_flip_date  long_flip_date
579  Dego Finance DEGO  3.16254  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Aergo_AERGO
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.14147}]
success ya
UWAGA
db_AERGOUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.14680       NaN  ...       NaN              0                0
1    2023-04-07  0.13540       NaN  ...       NaN              0                0
2    2023-04-08  0.13356       NaN  ...       NaN              0                0
3    2023-04-09  0.13658       NaN  ...       NaN              0                0
4    2023-04-10  0.13780       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
432  2024-11-27  0.14453  0.122365  ...  0.146618              0                0
433  2024-11-28  0.14349  0.124126  ...  0.146435              0                0
434  2024-11-29  0.14748  0.126072  ...  0.146293              1                0
435  2024-11-30  0.14690  0.127808  ...  0.146199              1                0
436  2024-12-01  0.14840  0.129524  ...  0.146069              1                0

[437 rows x 7 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.14147}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.14147}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  0.14680       NaN  ...       NaN            0.0              0.0
1    2023-04-07  0.13540       NaN  ...       NaN            0.0              0.0
2    2023-04-08  0.13356       NaN  ...       NaN            0.0              0.0
3    2023-04-09  0.13658       NaN  ...       NaN            0.0              0.0
4    2023-04-10  0.13780       NaN  ...       NaN            0.0              0.0
..          ...      ...       ...  ...       ...            ...              ...
433  2024-11-28  0.14349  0.124126  ...  0.146435            0.0              0.0
434  2024-11-29  0.14748  0.126072  ...  0.146293            1.0              0.0
435  2024-11-30  0.14690  0.127808  ...  0.146199            1.0              0.0
436  2024-12-01  0.14840  0.129524  ...  0.146069            1.0              0.0
437  2024-12-02  0.14147       NaN  ...       NaN            NaN              NaN

[438 rows x 7 columns]
DATA VALIDATION PASSED!
successfully converted Aergo_AERGO
NECESSARRRY AAAA START
0
0
2024-04-19
2024-12-02
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
            Name    Price  ...  middle_flip_date  long_flip_date
580  Aergo AERGO  0.14147  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
MAGA_TRUMP
[{'Date': datetime.date(2024, 12, 2), 'Price': 1.49701}]
success ya
UWAGA
db_TRUMPUSD
COINDBBB
                    Date       Close  ...  Long_Trend_Up  Middle_Trend_Up
0    2023-04-21 00:00:00    0.000590  ...              0                0
1    2023-04-22 00:00:00    0.000719  ...              0                0
2    2023-04-23 00:00:00    0.000658  ...              0                0
3    2023-04-24 00:00:00    0.000639  ...              0                0
4    2023-04-25 00:00:00    0.000602  ...              0                0
..                   ...         ...  ...            ...              ...
358           2024-04-13  525.158000  ...              1                1
359           2024-04-14  507.301000  ...              1                1
360           2024-04-15  466.556000  ...              1                1
361           2024-04-16   44.501000  ...              0                1
362           2024-04-17    4.762130  ...              0                1

[363 rows x 7 columns]
last_db_date_data
2024-04-17
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 5, 9), 'Price': 5.50817}, {'Date': datetime.date(2024, 5, 10), 'Price': 5.3202}, {'Date': datetime.date(2024, 5, 11), 'Price': 5.52837}, {'Date': datetime.date(2024, 5, 12), 'Price': 5.52837}, {'Date': datetime.date(2024, 5, 13), 'Price': 8.18379}, {'Date': datetime.date(2024, 5, 14), 'Price': 7.58313}, {'Date': datetime.date(2024, 5, 15), 'Price': 8.83245}, {'Date': datetime.date(2024, 5, 16), 'Price': 8.60636}, {'Date': datetime.date(2024, 5, 17), 'Price': 9.03817}, {'Date': datetime.date(2024, 5, 18), 'Price': 7.89576}, {'Date': datetime.date(2024, 5, 19), 'Price': 7.7754}, {'Date': datetime.date(2024, 5, 20), 'Price': 7.97679}, {'Date': datetime.date(2024, 5, 21), 'Price': 8.45968}, {'Date': datetime.date(2024, 5, 22), 'Price': 8.8958}, {'Date': datetime.date(2024, 5, 23), 'Price': 9.20949}, {'Date': datetime.date(2024, 5, 24), 'Price': 8.38583}, {'Date': datetime.date(2024, 5, 25), 'Price': 8.566}, {'Date': datetime.date(2024, 5, 26), 'Price': 8.566}, {'Date': datetime.date(2024, 5, 27), 'Price': 12.0255}, {'Date': datetime.date(2024, 5, 28), 'Price': 13.9154}, {'Date': datetime.date(2024, 5, 29), 'Price': 13.8112}, {'Date': datetime.date(2024, 5, 30), 'Price': 14.853}, {'Date': datetime.date(2024, 5, 31), 'Price': 15.7302}, {'Date': datetime.date(2024, 6, 1), 'Price': 16.7974}, {'Date': datetime.date(2024, 6, 2), 'Price': 14.9051}, {'Date': datetime.date(2024, 6, 3), 'Price': 13.1454}, {'Date': datetime.date(2024, 6, 4), 'Price': 13.7234}, {'Date': datetime.date(2024, 6, 5), 'Price': 13.3137}, {'Date': datetime.date(2024, 6, 6), 'Price': 12.2225}, {'Date': datetime.date(2024, 6, 7), 'Price': 11.8817}, {'Date': datetime.date(2024, 6, 8), 'Price': 12.893}, {'Date': datetime.date(2024, 6, 9), 'Price': 13.1508}, {'Date': datetime.date(2024, 6, 10), 'Price': 13.3276}, {'Date': datetime.date(2024, 6, 11), 'Price': 11.9824}, {'Date': datetime.date(2024, 6, 12), 'Price': 13.6936}, {'Date': datetime.date(2024, 6, 13), 'Price': 13.429}, {'Date': datetime.date(2024, 6, 14), 'Price': 12.913}, {'Date': datetime.date(2024, 6, 15), 'Price': 11.9561}, {'Date': datetime.date(2024, 6, 16), 'Price': 11.9561}, {'Date': datetime.date(2024, 6, 17), 'Price': 10.3382}, {'Date': datetime.date(2024, 6, 18), 'Price': 6.4147}, {'Date': datetime.date(2024, 6, 19), 'Price': 8.22328}, {'Date': datetime.date(2024, 6, 20), 'Price': 7.23636}, {'Date': datetime.date(2024, 6, 21), 'Price': 7.59094}, {'Date': datetime.date(2024, 6, 22), 'Price': 7.48744}, {'Date': datetime.date(2024, 6, 23), 'Price': 8.61572}, {'Date': datetime.date(2024, 6, 24), 'Price': 6.89621}, {'Date': datetime.date(2024, 6, 25), 'Price': 8.69725}, {'Date': datetime.date(2024, 6, 26), 'Price': 8.03906}, {'Date': datetime.date(2024, 6, 27), 'Price': 9.10418}, {'Date': datetime.date(2024, 6, 28), 'Price': 7.16405}, {'Date': datetime.date(2024, 6, 29), 'Price': 7.03328}, {'Date': datetime.date(2024, 6, 30), 'Price': 6.81541}, {'Date': datetime.date(2024, 7, 1), 'Price': 6.57849}, {'Date': datetime.date(2024, 11, 17), 'Price': 1.50633}, {'Date': datetime.date(2024, 11, 18), 'Price': 1.50278}, {'Date': datetime.date(2024, 11, 19), 'Price': 1.43258}, {'Date': datetime.date(2024, 11, 20), 'Price': 1.36406}, {'Date': datetime.date(2024, 11, 21), 'Price': 1.34646}, {'Date': datetime.date(2024, 11, 22), 'Price': 1.58135}, {'Date': datetime.date(2024, 11, 23), 'Price': 1.75618}, {'Date': datetime.date(2024, 11, 24), 'Price': 1.82993}, {'Date': datetime.date(2024, 11, 25), 'Price': 1.77997}, {'Date': datetime.date(2024, 11, 26), 'Price': 1.74621}, {'Date': datetime.date(2024, 11, 27), 'Price': 1.81645}, {'Date': datetime.date(2024, 11, 28), 'Price': 1.69899}, {'Date': datetime.date(2024, 11, 29), 'Price': 1.65711}, {'Date': datetime.date(2024, 11, 30), 'Price': 1.64915}, {'Date': datetime.date(2024, 12, 1), 'Price': 1.61069}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.49701}, {'Date': datetime.date(2024, 12, 2), 'Price': 1.49701}]
there are no available prices for all missing dates
Downloading from Kucoin
trying
 inicjacja duplicates
duplicate info
[False]
Forta_FORT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.13569}]
success ya
UWAGA
db_FORTUSD
COINDBBB
           Date    Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-03-14  0.13790       NaN  ...              0                0       NaN
1    2023-03-15  0.13800       NaN  ...              0                0       NaN
2    2023-03-16  0.13760       NaN  ...              0                0       NaN
3    2023-03-17  0.13750       NaN  ...              0                0       NaN
4    2023-03-18  0.13350       NaN  ...              0                0       NaN
..          ...      ...       ...  ...            ...              ...       ...
473  2024-11-19  0.12490  0.185887  ...              0                0  0.210005
474  2024-11-20  0.11207  0.179735  ...              0                0  0.206569
475  2024-11-29  0.14810  0.177099  ...              0                0  0.204517
476  2024-11-30  0.14378  0.174323  ...              0                0  0.202386
477  2024-12-01  0.14186  0.171617  ...              0                0  0.200262

[478 rows x 8 columns]
last_db_date_data
2024-12-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.13569}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.13569}]
YAAAAAA! len(new_data_from_scrapper) == len(missing_dates)
all good, can add
           Date    Close     EMA23  ...  Long_Trend_Up  Middle_Trend_Up     EMA56
0    2023-03-14  0.13790       NaN  ...            0.0              0.0       NaN
1    2023-03-15  0.13800       NaN  ...            0.0              0.0       NaN
2    2023-03-16  0.13760       NaN  ...            0.0              0.0       NaN
3    2023-03-17  0.13750       NaN  ...            0.0              0.0       NaN
4    2023-03-18  0.13350       NaN  ...            0.0              0.0       NaN
..          ...      ...       ...  ...            ...              ...       ...
474  2024-11-20  0.11207  0.179735  ...            0.0              0.0  0.206569
475  2024-11-29  0.14810  0.177099  ...            0.0              0.0  0.204517
476  2024-11-30  0.14378  0.174323  ...            0.0              0.0  0.202386
477  2024-12-01  0.14186  0.171617  ...            0.0              0.0  0.200262
478  2024-12-02  0.13569       NaN  ...            NaN              NaN       NaN

[479 rows x 8 columns]
DATA VALIDATION PASSED!
successfully converted Forta_FORT
NECESSARRRY AAAA START
0
0
2024-06-11
2024-06-17
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
           Name    Price  ...  middle_flip_date  long_flip_date
582  Forta FORT  0.13569  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Function_X_FX
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.15967}]
success ya
UWAGA
db_FXUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_FXUSD': no such table: db_FXUSD
4 failed
trying
 inicjacja duplicates
duplicate info
[False]
Litentry_LIT
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.97795}]
success ya
UWAGA
db_LITUSD
COINDBBB
           Date    Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0    2023-04-06  1.07920       NaN  ...       NaN              0                0
1    2023-04-07  1.06820       NaN  ...       NaN              0                0
2    2023-04-08  1.09720       NaN  ...       NaN              0                0
3    2023-04-09  1.12100       NaN  ...       NaN              0                0
4    2023-04-10  1.14570       NaN  ...       NaN              0                0
..          ...      ...       ...  ...       ...            ...              ...
434  2024-06-27  0.81182  0.939576  ...  1.093836              0                0
435  2024-06-28  0.80384  0.928264  ...  1.093511              0                0
436  2024-06-29  0.78239  0.916108  ...  1.092960              0                0
437  2024-06-30  0.79037  0.905630  ...  1.092222              0                0
438  2024-07-01  0.79915  0.896757  ...  1.091730              0                0

[439 rows x 7 columns]
last_db_date_data
2024-07-01
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.97795}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.97795}]
there are no available prices for all missing dates
Downloading from Kucoin
DATA VALIDATION PASSED!
successfully converted Litentry_LIT
NECESSARRRY AAAA START
0
0
2024-04-16
2024-06-10
NECESSARRRY AAAA END
BELOW SHOULD BE CURRENT MIDDLE TRENDUP
             Name    Price  ...  middle_flip_date  long_flip_date
584  Litentry LIT  0.97795  ...              None            None

[1 rows x 21 columns]
trying
 inicjacja duplicates
duplicate info
[False]
Metadium_META
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.03794}]
success ya
UWAGA
db_METAUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_METAUSD': no such table: db_METAUSD
trying
 inicjacja duplicates
duplicate info
[False]
Vibing_VBG
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.38846}]
success ya
UWAGA
db_VBGUSD
CRITICAL 1
Execution failed on sql 'SELECT * FROM db_VBGUSD': no such table: db_VBGUSD
trying
 inicjacja duplicates
duplicate info
[False]
Saitama_STC
[{'Date': datetime.date(2024, 12, 2), 'Price': 0.00117}]
success ya
UWAGA
db_STCUSD
COINDBBB
            Date     Close     EMA23  ...    SMA200  Long_Trend_Up  Middle_Trend_Up
0     2023-04-06  0.003030       NaN  ...       NaN              0                0
1     2023-04-07  0.002954       NaN  ...       NaN              0                0
2     2023-04-08  0.002920       NaN  ...       NaN              0                0
3     2023-04-09  0.002935       NaN  ...       NaN              0                0
4     2023-04-10  0.002928       NaN  ...       NaN              0                0
...          ...       ...       ...  ...       ...            ...              ...
6432  2024-06-26  0.006000  0.006008  ...  0.004331              1                1
6433  2024-06-27  0.006000  0.006007  ...  0.004346              1                1
6434  2024-06-28  0.006000  0.006007  ...  0.004362              1                1
6435  2024-06-29  0.006000  0.006006  ...  0.004377              1                1
6436  2024-06-30  0.006027  0.006008  ...  0.004393              1                1

[6437 rows x 7 columns]
last_db_date_data
2024-06-30
<class 'datetime.date'>
self prices
[{'Date': datetime.date(2024, 7, 1), 'Price': 0.00098}, {'Date': datetime.date(2024, 11, 17), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 18), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 19), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 20), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 21), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 22), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 23), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 24), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 25), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 26), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 27), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 28), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 29), 'Price': 0.00117}, {'Date': datetime.date(2024, 11, 30), 'Price': 0.00117}, {'Date': datetime.date(2024, 12, 1), 'Price': 0.00117}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00117}, {'Date': datetime.date(2024, 12, 2), 'Price': 0.00117}]
there are no available prices for all missing dates
Downloading from Kucoin
